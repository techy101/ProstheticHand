;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/8/2016 7:28:38 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x1D110000  	7441
0x0008	0x21990000  	8601
0x000C	0x21990000  	8601
0x0010	0x21990000  	8601
0x0014	0x21990000  	8601
0x0018	0x21990000  	8601
0x001C	0x21990000  	8601
0x0020	0x21990000  	8601
0x0024	0x21990000  	8601
0x0028	0x21990000  	8601
0x002C	0x21990000  	8601
0x0030	0x21990000  	8601
0x0034	0x21990000  	8601
0x0038	0x21990000  	8601
0x003C	0x21990000  	8601
0x0040	0x21990000  	8601
0x0044	0x21990000  	8601
0x0048	0x21990000  	8601
0x004C	0x21990000  	8601
0x0050	0x21990000  	8601
0x0054	0x21990000  	8601
0x0058	0x21990000  	8601
0x005C	0x21990000  	8601
0x0060	0x21990000  	8601
0x0064	0x21990000  	8601
0x0068	0x21990000  	8601
0x006C	0x21990000  	8601
0x0070	0x21990000  	8601
0x0074	0x21990000  	8601
0x0078	0x21990000  	8601
0x007C	0x21990000  	8601
0x0080	0x21990000  	8601
0x0084	0x21990000  	8601
0x0088	0x21990000  	8601
0x008C	0x21990000  	8601
0x0090	0x21990000  	8601
0x0094	0x21990000  	8601
0x0098	0x21990000  	8601
0x009C	0x21990000  	8601
0x00A0	0x21990000  	8601
0x00A4	0x21990000  	8601
0x00A8	0x1AD10000  	6865
0x00AC	0x21990000  	8601
0x00B0	0x1B210000  	6945
0x00B4	0x1B990000  	7065
0x00B8	0x21990000  	8601
0x00BC	0x21990000  	8601
0x00C0	0x21990000  	8601
0x00C4	0x21990000  	8601
0x00C8	0x21990000  	8601
0x00CC	0x21990000  	8601
0x00D0	0x21990000  	8601
0x00D4	0x21990000  	8601
0x00D8	0x21990000  	8601
0x00DC	0x21990000  	8601
0x00E0	0x21990000  	8601
0x00E4	0x21990000  	8601
0x00E8	0x21990000  	8601
0x00EC	0x21990000  	8601
0x00F0	0x21990000  	8601
0x00F4	0x21990000  	8601
0x00F8	0x21990000  	8601
0x00FC	0x21990000  	8601
0x0100	0x21990000  	8601
0x0104	0x21990000  	8601
0x0108	0x21990000  	8601
0x010C	0x21990000  	8601
0x0110	0x21990000  	8601
0x0114	0x21990000  	8601
0x0118	0x21990000  	8601
0x011C	0x21990000  	8601
0x0120	0x21990000  	8601
0x0124	0x21990000  	8601
0x0128	0x21990000  	8601
0x012C	0x21990000  	8601
0x0130	0x21990000  	8601
0x0134	0x21990000  	8601
0x0138	0x21990000  	8601
0x013C	0x21990000  	8601
0x0140	0x21990000  	8601
0x0144	0x21990000  	8601
0x0148	0x21990000  	8601
0x014C	0x21990000  	8601
0x0150	0x21990000  	8601
0x0154	0x21990000  	8601
0x0158	0x21990000  	8601
0x015C	0x21990000  	8601
0x0160	0x21990000  	8601
0x0164	0x21990000  	8601
0x0168	0x21990000  	8601
0x016C	0x21990000  	8601
0x0170	0x21990000  	8601
0x0174	0x21990000  	8601
0x0178	0x21990000  	8601
0x017C	0x21990000  	8601
0x0180	0x21990000  	8601
0x0184	0x21990000  	8601
; end of ____SysVT
_main:
;Input Capture Complete 5ch.c, 167 :: 		void main() {
0x1D10	0xB081    SUB	SP, SP, #4
0x1D12	0xF000F891  BL	7736
0x1D16	0xF7FFFEED  BL	6900
0x1D1A	0xF000FD5F  BL	10204
0x1D1E	0xF000FA3F  BL	8608
0x1D22	0xF000FD0D  BL	10048
;Input Capture Complete 5ch.c, 170 :: 		init_UART();                                                            // Configure and Initialize UART serial communications
0x1D26	0xF7FFFE07  BL	_init_UART+0
;Input Capture Complete 5ch.c, 171 :: 		init_GPIO();                                                            // Configure MCU I/O
0x1D2A	0xF7FFFA87  BL	_init_GPIO+0
;Input Capture Complete 5ch.c, 172 :: 		init_pointer_PWM();
0x1D2E	0xF7FFFA63  BL	_init_pointer_PWM+0
;Input Capture Complete 5ch.c, 173 :: 		init_middle_PWM();
0x1D32	0xF7FFFD7F  BL	_init_middle_PWM+0
;Input Capture Complete 5ch.c, 175 :: 		init_pinky_PWM();
0x1D36	0xF7FFFD9F  BL	_init_pinky_PWM+0
;Input Capture Complete 5ch.c, 179 :: 		strcpy(fngr_pointer.name, "fngr_pointer");
0x1D3A	0x4830    LDR	R0, [PC, #192]
0x1D3C	0x4601    MOV	R1, R0
0x1D3E	0x4830    LDR	R0, [PC, #192]
0x1D40	0xF7FFFDE4  BL	_strcpy+0
;Input Capture Complete 5ch.c, 180 :: 		strcpy(fngr_middle.name, "fngr_middle");
0x1D44	0x482F    LDR	R0, [PC, #188]
0x1D46	0x4601    MOV	R1, R0
0x1D48	0x482F    LDR	R0, [PC, #188]
0x1D4A	0xF7FFFDDF  BL	_strcpy+0
;Input Capture Complete 5ch.c, 181 :: 		strcpy(fngr_ring.name, "fngr_ring");
0x1D4E	0x482F    LDR	R0, [PC, #188]
0x1D50	0x4601    MOV	R1, R0
0x1D52	0x482F    LDR	R0, [PC, #188]
0x1D54	0xF7FFFDDA  BL	_strcpy+0
;Input Capture Complete 5ch.c, 182 :: 		strcpy(fngr_pinky.name, "fngr_pinky");
0x1D58	0x482E    LDR	R0, [PC, #184]
0x1D5A	0x4601    MOV	R1, R0
0x1D5C	0x482E    LDR	R0, [PC, #184]
0x1D5E	0xF7FFFDD5  BL	_strcpy+0
;Input Capture Complete 5ch.c, 183 :: 		strcpy(fngr_thumb.name, "fngr_thumb");
0x1D62	0x482E    LDR	R0, [PC, #184]
0x1D64	0x4601    MOV	R1, R0
0x1D66	0x482E    LDR	R0, [PC, #184]
0x1D68	0xF7FFFDD0  BL	_strcpy+0
;Input Capture Complete 5ch.c, 186 :: 		init_finger(&fngr_pointer);
0x1D6C	0x4824    LDR	R0, [PC, #144]
0x1D6E	0xF7FFFE3D  BL	_init_finger+0
;Input Capture Complete 5ch.c, 187 :: 		init_finger(&fngr_middle);
0x1D72	0x4825    LDR	R0, [PC, #148]
0x1D74	0xF7FFFE3A  BL	_init_finger+0
;Input Capture Complete 5ch.c, 188 :: 		init_finger(&fngr_ring);
0x1D78	0x4825    LDR	R0, [PC, #148]
0x1D7A	0xF7FFFE37  BL	_init_finger+0
;Input Capture Complete 5ch.c, 189 :: 		init_finger(&fngr_pinky);
0x1D7E	0x4826    LDR	R0, [PC, #152]
0x1D80	0xF7FFFE34  BL	_init_finger+0
;Input Capture Complete 5ch.c, 190 :: 		init_finger(&fngr_thumb);
0x1D84	0x4826    LDR	R0, [PC, #152]
0x1D86	0xF7FFFE31  BL	_init_finger+0
;Input Capture Complete 5ch.c, 193 :: 		UART1_Write_Text("\n\n\rProgram Has Started!\n\r");
0x1D8A	0x4826    LDR	R0, [PC, #152]
0x1D8C	0xF7FFFE20  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 194 :: 		delay_ms(500);
0x1D90	0xF64367FE  MOVW	R7, #16126
0x1D94	0xF2C017AB  MOVT	R7, #427
L_main0:
0x1D98	0x1E7F    SUBS	R7, R7, #1
0x1D9A	0xD1FD    BNE	L_main0
0x1D9C	0xBF00    NOP
0x1D9E	0xBF00    NOP
0x1DA0	0xBF00    NOP
0x1DA2	0xBF00    NOP
0x1DA4	0xBF00    NOP
;Input Capture Complete 5ch.c, 197 :: 		init_timer11();                                                         // Initialize timer 11, used for sampling
0x1DA6	0xF7FFFDE3  BL	_init_timer11+0
;Input Capture Complete 5ch.c, 198 :: 		init_input_capture();                                                   // Initialize input capture channels
0x1DAA	0xF7FFFC1B  BL	_init_input_capture+0
;Input Capture Complete 5ch.c, 201 :: 		while(1) {
L_main2:
;Input Capture Complete 5ch.c, 203 :: 		if (poll_flag) {                                                     // Calculate finger state values (Set by timer 3)
0x1DAE	0x481E    LDR	R0, [PC, #120]
0x1DB0	0x8800    LDRH	R0, [R0, #0]
0x1DB2	0xB158    CBZ	R0, L_main4
;Input Capture Complete 5ch.c, 204 :: 		poll_flag = 0;                                                    // Clear flag
0x1DB4	0x2100    MOVS	R1, #0
0x1DB6	0x481C    LDR	R0, [PC, #112]
0x1DB8	0x8001    STRH	R1, [R0, #0]
;Input Capture Complete 5ch.c, 205 :: 		calc_finger_state(&fngr_pointer);                                 // Call state calculation function for each finger - equivalent of sampling
0x1DBA	0x4811    LDR	R0, [PC, #68]
0x1DBC	0xF7FFFAF8  BL	_calc_finger_state+0
;Input Capture Complete 5ch.c, 206 :: 		calc_finger_state(&fngr_middle);
0x1DC0	0x4811    LDR	R0, [PC, #68]
0x1DC2	0xF7FFFAF5  BL	_calc_finger_state+0
;Input Capture Complete 5ch.c, 208 :: 		calc_finger_state(&fngr_pinky);
0x1DC6	0x4814    LDR	R0, [PC, #80]
0x1DC8	0xF7FFFAF2  BL	_calc_finger_state+0
;Input Capture Complete 5ch.c, 243 :: 		}
L_main4:
;Input Capture Complete 5ch.c, 245 :: 		if (poll_flag && (terminal_print_count >= TERMINAL_PRINT_THRESH)) {  // Set number of polling events has occured => Print statistics to terminal
0x1DCC	0x4816    LDR	R0, [PC, #88]
0x1DCE	0x8800    LDRH	R0, [R0, #0]
0x1DD0	0xB188    CBZ	R0, L__main52
0x1DD2	0x4816    LDR	R0, [PC, #88]
0x1DD4	0x8801    LDRH	R1, [R0, #0]
0x1DD6	0x4816    LDR	R0, [PC, #88]
0x1DD8	0x8800    LDRH	R0, [R0, #0]
0x1DDA	0x4288    CMP	R0, R1
0x1DDC	0xD30B    BCC	L__main51
L__main50:
;Input Capture Complete 5ch.c, 247 :: 		print_finger_info(&fngr_pointer);                                 // Print statistics to terminal for each finger
0x1DDE	0x4808    LDR	R0, [PC, #32]
0x1DE0	0xF7FFFA74  BL	_print_finger_info+0
;Input Capture Complete 5ch.c, 248 :: 		print_finger_info(&fngr_middle);
0x1DE4	0x4808    LDR	R0, [PC, #32]
0x1DE6	0xF7FFFA71  BL	_print_finger_info+0
;Input Capture Complete 5ch.c, 250 :: 		print_finger_info(&fngr_pinky);
0x1DEA	0x480B    LDR	R0, [PC, #44]
0x1DEC	0xF7FFFA6E  BL	_print_finger_info+0
;Input Capture Complete 5ch.c, 252 :: 		UART1_Write_Text("\n\n\n\n\n\n\n\r");
0x1DF0	0x4810    LDR	R0, [PC, #64]
0x1DF2	0xF7FFFDED  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 245 :: 		if (poll_flag && (terminal_print_count >= TERMINAL_PRINT_THRESH)) {  // Set number of polling events has occured => Print statistics to terminal
L__main52:
L__main51:
;Input Capture Complete 5ch.c, 254 :: 		}
0x1DF6	0xE7DA    B	L_main2
;Input Capture Complete 5ch.c, 255 :: 		} // Main ends here
L_end_main:
L__main_end_loop:
0x1DF8	0xE7FE    B	L__main_end_loop
0x1DFA	0xBF00    NOP
0x1DFC	0x00AA2000  	?lstr1_Input_32Capture_32Complete_325ch+0
0x1E00	0x01BC2000  	_fngr_pointer+0
0x1E04	0x00B72000  	?lstr2_Input_32Capture_32Complete_325ch+0
0x1E08	0x020C2000  	_fngr_middle+0
0x1E0C	0x00C32000  	?lstr3_Input_32Capture_32Complete_325ch+0
0x1E10	0x025C2000  	_fngr_ring+0
0x1E14	0x00CD2000  	?lstr4_Input_32Capture_32Complete_325ch+0
0x1E18	0x02AC2000  	_fngr_pinky+0
0x1E1C	0x00D82000  	?lstr5_Input_32Capture_32Complete_325ch+0
0x1E20	0x02FC2000  	_fngr_thumb+0
0x1E24	0x00E32000  	?lstr6_Input_32Capture_32Complete_325ch+0
0x1E28	0x01BA2000  	_poll_flag+0
0x1E2C	0x004E2000  	_TERMINAL_PRINT_THRESH+0
0x1E30	0x034C2000  	_terminal_print_count+0
0x1E34	0x00FD2000  	?lstr7_Input_32Capture_32Complete_325ch+0
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x18F8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x18FA	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x18FE	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x1902	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x1906	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x1908	0xB001    ADD	SP, SP, #4
0x190A	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x18BC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x18BE	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x18C2	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x18C6	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x18CA	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x18CC	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x18D0	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x18D2	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x18D4	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x18D6	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x18DA	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x18DE	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x18E0	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x18E4	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x18E6	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x18E8	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x18EC	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x18F0	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x18F2	0xB001    ADD	SP, SP, #4
0x18F4	0x4770    BX	LR
; end of ___FillZeros
_init_UART:
;Input Capture Complete 5ch.c, 469 :: 		void init_UART() {
0x1938	0xB081    SUB	SP, SP, #4
0x193A	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Complete 5ch.c, 471 :: 		UART1_Init(UART_BAUD_RATE);                                                 // Configure UART 1
0x193E	0xF44F30E1  MOV	R0, #115200
0x1942	0xF7FFFBFD  BL	_UART1_Init+0
;Input Capture Complete 5ch.c, 472 :: 		Delay_ms(200);                                                              // Wait for UART to stabilize
0x1946	0xF24E57FE  MOVW	R7, #58878
0x194A	0xF2C007AA  MOVT	R7, #170
0x194E	0xBF00    NOP
0x1950	0xBF00    NOP
L_init_UART30:
0x1952	0x1E7F    SUBS	R7, R7, #1
0x1954	0xD1FD    BNE	L_init_UART30
0x1956	0xBF00    NOP
0x1958	0xBF00    NOP
0x195A	0xBF00    NOP
;Input Capture Complete 5ch.c, 473 :: 		UART_Write_Text("\rUART Init Complete\r\n");                                // *** DEBUG *** Print test statement to terminal
0x195C	0x4803    LDR	R0, [PC, #12]
0x195E	0xF7FFFC09  BL	_UART_Write_Text+0
;Input Capture Complete 5ch.c, 474 :: 		}
L_end_init_UART:
0x1962	0xF8DDE000  LDR	LR, [SP, #0]
0x1966	0xB001    ADD	SP, SP, #4
0x1968	0x4770    BX	LR
0x196A	0xBF00    NOP
0x196C	0x00942000  	?lstr14_Input_32Capture_32Complete_325ch+0
; end of _init_UART
_UART1_Init:
;__Lib_UART_123_45_6.c, 439 :: 		
; baud_rate start address is: 0 (R0)
0x1140	0xB081    SUB	SP, SP, #4
0x1142	0xF8CDE000  STR	LR, [SP, #0]
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 440 :: 		
0x1146	0x4A09    LDR	R2, [PC, #36]
0x1148	0xF2400100  MOVW	R1, #0
0x114C	0xB404    PUSH	(R2)
0x114E	0xB402    PUSH	(R1)
0x1150	0xF2400300  MOVW	R3, #0
0x1154	0xF2400200  MOVW	R2, #0
0x1158	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x115A	0x4805    LDR	R0, [PC, #20]
0x115C	0xF7FFFC24  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x1160	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 441 :: 		
L_end_UART1_Init:
0x1162	0xF8DDE000  LDR	LR, [SP, #0]
0x1166	0xB001    ADD	SP, SP, #4
0x1168	0x4770    BX	LR
0x116A	0xBF00    NOP
0x116C	0x24100000  	__GPIO_MODULE_USART1_PA9_10+0
0x1170	0x10004001  	USART1_SR+0
; end of _UART1_Init
__Lib_UART_123_45_6_UARTx_Init_Advanced:
;__Lib_UART_123_45_6.c, 319 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x09A8	0xB08B    SUB	SP, SP, #44
0x09AA	0xF8CDE000  STR	LR, [SP, #0]
0x09AE	0xB29A    UXTH	R2, R3
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; baud_rate start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
0x09B0	0xF8BD302C  LDRH	R3, [SP, #44]
; module start address is: 24 (R6)
0x09B4	0x9E0C    LDR	R6, [SP, #48]
;__Lib_UART_123_45_6.c, 323 :: 		
0x09B6	0xAC06    ADD	R4, SP, #24
0x09B8	0xF8AD3004  STRH	R3, [SP, #4]
0x09BC	0xF8AD2008  STRH	R2, [SP, #8]
0x09C0	0x9103    STR	R1, [SP, #12]
0x09C2	0x9004    STR	R0, [SP, #16]
0x09C4	0x4620    MOV	R0, R4
0x09C6	0xF7FFFE59  BL	_RCC_GetClocksFrequency+0
0x09CA	0x9804    LDR	R0, [SP, #16]
0x09CC	0x9903    LDR	R1, [SP, #12]
0x09CE	0xF8BD2008  LDRH	R2, [SP, #8]
0x09D2	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 325 :: 		
0x09D6	0x4C71    LDR	R4, [PC, #452]
0x09D8	0x42A0    CMP	R0, R4
0x09DA	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced15
;__Lib_UART_123_45_6.c, 326 :: 		
0x09DC	0x2501    MOVS	R5, #1
0x09DE	0xB26D    SXTB	R5, R5
0x09E0	0x4C6F    LDR	R4, [PC, #444]
0x09E2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 327 :: 		
0x09E4	0x4D6F    LDR	R5, [PC, #444]
0x09E6	0x4C70    LDR	R4, [PC, #448]
0x09E8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 328 :: 		
0x09EA	0x4D70    LDR	R5, [PC, #448]
0x09EC	0x4C70    LDR	R4, [PC, #448]
0x09EE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 329 :: 		
0x09F0	0x4D70    LDR	R5, [PC, #448]
0x09F2	0x4C71    LDR	R4, [PC, #452]
0x09F4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 330 :: 		
0x09F6	0x4D71    LDR	R5, [PC, #452]
0x09F8	0x4C71    LDR	R4, [PC, #452]
0x09FA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 331 :: 		
0x09FC	0x9C09    LDR	R4, [SP, #36]
0x09FE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 332 :: 		
0x0A00	0xE06C    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced16
L___Lib_UART_123_45_6_UARTx_Init_Advanced15:
;__Lib_UART_123_45_6.c, 333 :: 		
0x0A02	0x4C70    LDR	R4, [PC, #448]
0x0A04	0x42A0    CMP	R0, R4
0x0A06	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced17
;__Lib_UART_123_45_6.c, 334 :: 		
0x0A08	0x2501    MOVS	R5, #1
0x0A0A	0xB26D    SXTB	R5, R5
0x0A0C	0x4C6E    LDR	R4, [PC, #440]
0x0A0E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 335 :: 		
0x0A10	0x4D6E    LDR	R5, [PC, #440]
0x0A12	0x4C65    LDR	R4, [PC, #404]
0x0A14	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 336 :: 		
0x0A16	0x4D6E    LDR	R5, [PC, #440]
0x0A18	0x4C65    LDR	R4, [PC, #404]
0x0A1A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 337 :: 		
0x0A1C	0x4D6D    LDR	R5, [PC, #436]
0x0A1E	0x4C66    LDR	R4, [PC, #408]
0x0A20	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 338 :: 		
0x0A22	0x4D6D    LDR	R5, [PC, #436]
0x0A24	0x4C66    LDR	R4, [PC, #408]
0x0A26	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 339 :: 		
0x0A28	0x9C08    LDR	R4, [SP, #32]
0x0A2A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 340 :: 		
0x0A2C	0xE056    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced18
L___Lib_UART_123_45_6_UARTx_Init_Advanced17:
;__Lib_UART_123_45_6.c, 341 :: 		
0x0A2E	0x4C6B    LDR	R4, [PC, #428]
0x0A30	0x42A0    CMP	R0, R4
0x0A32	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced19
;__Lib_UART_123_45_6.c, 342 :: 		
0x0A34	0x2501    MOVS	R5, #1
0x0A36	0xB26D    SXTB	R5, R5
0x0A38	0x4C69    LDR	R4, [PC, #420]
0x0A3A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 343 :: 		
0x0A3C	0x4D69    LDR	R5, [PC, #420]
0x0A3E	0x4C5A    LDR	R4, [PC, #360]
0x0A40	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 344 :: 		
0x0A42	0x4D69    LDR	R5, [PC, #420]
0x0A44	0x4C5A    LDR	R4, [PC, #360]
0x0A46	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 345 :: 		
0x0A48	0x4D68    LDR	R5, [PC, #416]
0x0A4A	0x4C5B    LDR	R4, [PC, #364]
0x0A4C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 346 :: 		
0x0A4E	0x4D68    LDR	R5, [PC, #416]
0x0A50	0x4C5B    LDR	R4, [PC, #364]
0x0A52	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 347 :: 		
0x0A54	0x9C08    LDR	R4, [SP, #32]
0x0A56	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 348 :: 		
0x0A58	0xE040    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced20
L___Lib_UART_123_45_6_UARTx_Init_Advanced19:
;__Lib_UART_123_45_6.c, 349 :: 		
0x0A5A	0x4C66    LDR	R4, [PC, #408]
0x0A5C	0x42A0    CMP	R0, R4
0x0A5E	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced21
;__Lib_UART_123_45_6.c, 350 :: 		
0x0A60	0x2501    MOVS	R5, #1
0x0A62	0xB26D    SXTB	R5, R5
0x0A64	0x4C64    LDR	R4, [PC, #400]
0x0A66	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 351 :: 		
0x0A68	0x4D64    LDR	R5, [PC, #400]
0x0A6A	0x4C4F    LDR	R4, [PC, #316]
0x0A6C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 352 :: 		
0x0A6E	0x4D64    LDR	R5, [PC, #400]
0x0A70	0x4C4F    LDR	R4, [PC, #316]
0x0A72	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 353 :: 		
0x0A74	0x4D63    LDR	R5, [PC, #396]
0x0A76	0x4C50    LDR	R4, [PC, #320]
0x0A78	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 354 :: 		
0x0A7A	0x4D63    LDR	R5, [PC, #396]
0x0A7C	0x4C50    LDR	R4, [PC, #320]
0x0A7E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 355 :: 		
0x0A80	0x9C08    LDR	R4, [SP, #32]
0x0A82	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 356 :: 		
0x0A84	0xE02A    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced22
L___Lib_UART_123_45_6_UARTx_Init_Advanced21:
;__Lib_UART_123_45_6.c, 357 :: 		
0x0A86	0x4C61    LDR	R4, [PC, #388]
0x0A88	0x42A0    CMP	R0, R4
0x0A8A	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced23
;__Lib_UART_123_45_6.c, 358 :: 		
0x0A8C	0x2501    MOVS	R5, #1
0x0A8E	0xB26D    SXTB	R5, R5
0x0A90	0x4C5F    LDR	R4, [PC, #380]
0x0A92	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 359 :: 		
0x0A94	0x4D5F    LDR	R5, [PC, #380]
0x0A96	0x4C44    LDR	R4, [PC, #272]
0x0A98	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 360 :: 		
0x0A9A	0x4D5F    LDR	R5, [PC, #380]
0x0A9C	0x4C44    LDR	R4, [PC, #272]
0x0A9E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 361 :: 		
0x0AA0	0x4D5E    LDR	R5, [PC, #376]
0x0AA2	0x4C45    LDR	R4, [PC, #276]
0x0AA4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 362 :: 		
0x0AA6	0x4D5E    LDR	R5, [PC, #376]
0x0AA8	0x4C45    LDR	R4, [PC, #276]
0x0AAA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 363 :: 		
0x0AAC	0x9C08    LDR	R4, [SP, #32]
0x0AAE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 364 :: 		
0x0AB0	0xE014    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced24
L___Lib_UART_123_45_6_UARTx_Init_Advanced23:
;__Lib_UART_123_45_6.c, 365 :: 		
0x0AB2	0x4C5C    LDR	R4, [PC, #368]
0x0AB4	0x42A0    CMP	R0, R4
0x0AB6	0xD111    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced25
;__Lib_UART_123_45_6.c, 366 :: 		
0x0AB8	0x2501    MOVS	R5, #1
0x0ABA	0xB26D    SXTB	R5, R5
0x0ABC	0x4C5A    LDR	R4, [PC, #360]
0x0ABE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 367 :: 		
0x0AC0	0x4D5A    LDR	R5, [PC, #360]
0x0AC2	0x4C39    LDR	R4, [PC, #228]
0x0AC4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 368 :: 		
0x0AC6	0x4D5A    LDR	R5, [PC, #360]
0x0AC8	0x4C39    LDR	R4, [PC, #228]
0x0ACA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 369 :: 		
0x0ACC	0x4D59    LDR	R5, [PC, #356]
0x0ACE	0x4C3A    LDR	R4, [PC, #232]
0x0AD0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 370 :: 		
0x0AD2	0x4D59    LDR	R5, [PC, #356]
0x0AD4	0x4C3A    LDR	R4, [PC, #232]
0x0AD6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 371 :: 		
0x0AD8	0x9C09    LDR	R4, [SP, #36]
0x0ADA	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 372 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced25:
L___Lib_UART_123_45_6_UARTx_Init_Advanced24:
L___Lib_UART_123_45_6_UARTx_Init_Advanced22:
L___Lib_UART_123_45_6_UARTx_Init_Advanced20:
L___Lib_UART_123_45_6_UARTx_Init_Advanced18:
L___Lib_UART_123_45_6_UARTx_Init_Advanced16:
;__Lib_UART_123_45_6.c, 374 :: 		
0x0ADC	0xF8AD3004  STRH	R3, [SP, #4]
; module end address is: 24 (R6)
0x0AE0	0xF8AD2008  STRH	R2, [SP, #8]
0x0AE4	0x9103    STR	R1, [SP, #12]
0x0AE6	0x9004    STR	R0, [SP, #16]
0x0AE8	0x4630    MOV	R0, R6
0x0AEA	0xF7FFFDA3  BL	_GPIO_Alternate_Function_Enable+0
0x0AEE	0x9804    LDR	R0, [SP, #16]
0x0AF0	0x9903    LDR	R1, [SP, #12]
0x0AF2	0xF8BD2008  LDRH	R2, [SP, #8]
0x0AF6	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 376 :: 		
0x0AFA	0xF2000510  ADDW	R5, R0, #16
0x0AFE	0x2400    MOVS	R4, #0
0x0B00	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 377 :: 		
0x0B02	0xF2000510  ADDW	R5, R0, #16
0x0B06	0x682C    LDR	R4, [R5, #0]
0x0B08	0x431C    ORRS	R4, R3
; stop_bits end address is: 12 (R3)
0x0B0A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 378 :: 		
0x0B0C	0xF200050C  ADDW	R5, R0, #12
0x0B10	0x2400    MOVS	R4, #0
0x0B12	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 380 :: 		
0x0B14	0xB11A    CBZ	R2, L___Lib_UART_123_45_6_UARTx_Init_Advanced40
;__Lib_UART_123_45_6.c, 381 :: 		
0x0B16	0xF4426280  ORR	R2, R2, #1024
0x0B1A	0xB292    UXTH	R2, R2
; parity end address is: 8 (R2)
;__Lib_UART_123_45_6.c, 382 :: 		
0x0B1C	0xE7FF    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced26
L___Lib_UART_123_45_6_UARTx_Init_Advanced40:
;__Lib_UART_123_45_6.c, 380 :: 		
;__Lib_UART_123_45_6.c, 382 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced26:
;__Lib_UART_123_45_6.c, 384 :: 		
; parity start address is: 8 (R2)
0x0B1E	0xF200050C  ADDW	R5, R0, #12
0x0B22	0x682C    LDR	R4, [R5, #0]
0x0B24	0x4314    ORRS	R4, R2
; parity end address is: 8 (R2)
0x0B26	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 386 :: 		
0x0B28	0xF200060C  ADDW	R6, R0, #12
0x0B2C	0x2501    MOVS	R5, #1
0x0B2E	0x6834    LDR	R4, [R6, #0]
0x0B30	0xF365344D  BFI	R4, R5, #13, #1
0x0B34	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 387 :: 		
0x0B36	0xF200060C  ADDW	R6, R0, #12
0x0B3A	0x2501    MOVS	R5, #1
0x0B3C	0x6834    LDR	R4, [R6, #0]
0x0B3E	0xF36504C3  BFI	R4, R5, #3, #1
0x0B42	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 388 :: 		
0x0B44	0xF200060C  ADDW	R6, R0, #12
0x0B48	0x2501    MOVS	R5, #1
0x0B4A	0x6834    LDR	R4, [R6, #0]
0x0B4C	0xF3650482  BFI	R4, R5, #2, #1
0x0B50	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 389 :: 		
0x0B52	0xF2000514  ADDW	R5, R0, #20
0x0B56	0x2400    MOVS	R4, #0
0x0B58	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 394 :: 		
0x0B5A	0x9D05    LDR	R5, [SP, #20]
0x0B5C	0x2419    MOVS	R4, #25
0x0B5E	0x4365    MULS	R5, R4, R5
0x0B60	0x008C    LSLS	R4, R1, #2
; baud_rate end address is: 4 (R1)
0x0B62	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45_6.c, 395 :: 		
0x0B66	0x2464    MOVS	R4, #100
0x0B68	0xFBB7F4F4  UDIV	R4, R7, R4
0x0B6C	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45_6.c, 397 :: 		
0x0B6E	0x0935    LSRS	R5, R6, #4
0x0B70	0x2464    MOVS	R4, #100
0x0B72	0x436C    MULS	R4, R5, R4
0x0B74	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45_6.c, 398 :: 		
0x0B76	0x0124    LSLS	R4, R4, #4
0x0B78	0xF2040532  ADDW	R5, R4, #50
0x0B7C	0x2464    MOVS	R4, #100
0x0B7E	0xFBB5F4F4  UDIV	R4, R5, R4
0x0B82	0xF004040F  AND	R4, R4, #15
0x0B86	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45_6.c, 400 :: 		
0x0B8A	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x0B8E	0xB2A4    UXTH	R4, R4
0x0B90	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 401 :: 		
L_end_UARTx_Init_Advanced:
0x0B92	0xF8DDE000  LDR	LR, [SP, #0]
0x0B96	0xB00B    ADD	SP, SP, #44
0x0B98	0x4770    BX	LR
0x0B9A	0xBF00    NOP
0x0B9C	0x10004001  	USART1_SR+0
0x0BA0	0x08904247  	RCC_APB2ENR+0
0x0BA4	0x058D0000  	_UART1_Write+0
0x0BA8	0x03582000  	_UART_Wr_Ptr+0
0x0BAC	0xFFFFFFFF  	_UART1_Read+0
0x0BB0	0x035C2000  	_UART_Rd_Ptr+0
0x0BB4	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0BB8	0x03602000  	_UART_Rdy_Ptr+0
0x0BBC	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x0BC0	0x03642000  	_UART_Tx_Idle_Ptr+0
0x0BC4	0x44004000  	USART2_SR+0
0x0BC8	0x08444247  	RCC_APB1ENR+0
0x0BCC	0x05A90000  	_UART2_Write+0
0x0BD0	0xFFFFFFFF  	_UART2_Read+0
0x0BD4	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0BD8	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0BDC	0x48004000  	USART3_SR+0
0x0BE0	0x08484247  	RCC_APB1ENR+0
0x0BE4	0x05E10000  	_UART3_Write+0
0x0BE8	0xFFFFFFFF  	_UART3_Read+0
0x0BEC	0xFFFFFFFF  	_UART3_Data_Ready+0
0x0BF0	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0BF4	0x4C004000  	UART4_SR+0
0x0BF8	0x084C4247  	RCC_APB1ENR+0
0x0BFC	0x05C50000  	_UART4_Write+0
0x0C00	0xFFFFFFFF  	_UART4_Read+0
0x0C04	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0C08	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0C0C	0x50004000  	UART5_SR+0
0x0C10	0x08504247  	RCC_APB1ENR+0
0x0C14	0x05FD0000  	_UART5_Write+0
0x0C18	0xFFFFFFFF  	_UART5_Read+0
0x0C1C	0xFFFFFFFF  	_UART5_Data_Ready+0
0x0C20	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x0C24	0x14004001  	USART6_SR+0
0x0C28	0x08944247  	RCC_APB2ENR+0
0x0C2C	0x06190000  	_UART6_Write+0
0x0C30	0xFFFFFFFF  	_UART6_Read+0
0x0C34	0xFFFFFFFF  	_UART6_Data_Ready+0
0x0C38	0xFFFFFFFF  	_UART6_Tx_Idle+0
; end of __Lib_UART_123_45_6_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 389 :: 		
; RCC_Clocks start address is: 0 (R0)
0x067C	0xB082    SUB	SP, SP, #8
0x067E	0xF8CDE000  STR	LR, [SP, #0]
0x0682	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 391 :: 		
;__Lib_System_4XX.c, 393 :: 		
0x0684	0x4619    MOV	R1, R3
0x0686	0x9101    STR	R1, [SP, #4]
0x0688	0xF7FFFEEA  BL	_Get_Fosc_kHz+0
0x068C	0xF24031E8  MOVW	R1, #1000
0x0690	0xFB00F201  MUL	R2, R0, R1
0x0694	0x9901    LDR	R1, [SP, #4]
0x0696	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 396 :: 		
0x0698	0x4917    LDR	R1, [PC, #92]
0x069A	0x6809    LDR	R1, [R1, #0]
0x069C	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 397 :: 		
0x06A0	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 398 :: 		
0x06A2	0x4916    LDR	R1, [PC, #88]
0x06A4	0x1889    ADDS	R1, R1, R2
0x06A6	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x06A8	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 400 :: 		
0x06AA	0x1D1A    ADDS	R2, R3, #4
0x06AC	0x6819    LDR	R1, [R3, #0]
0x06AE	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x06B0	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 403 :: 		
0x06B2	0x4911    LDR	R1, [PC, #68]
0x06B4	0x6809    LDR	R1, [R1, #0]
0x06B6	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 404 :: 		
0x06BA	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 405 :: 		
0x06BC	0x490F    LDR	R1, [PC, #60]
0x06BE	0x1889    ADDS	R1, R1, R2
0x06C0	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x06C2	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 407 :: 		
0x06C4	0xF2030208  ADDW	R2, R3, #8
0x06C8	0x1D19    ADDS	R1, R3, #4
0x06CA	0x6809    LDR	R1, [R1, #0]
0x06CC	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x06CE	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 410 :: 		
0x06D0	0x4909    LDR	R1, [PC, #36]
0x06D2	0x6809    LDR	R1, [R1, #0]
0x06D4	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 411 :: 		
0x06D8	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 412 :: 		
0x06DA	0x4908    LDR	R1, [PC, #32]
0x06DC	0x1889    ADDS	R1, R1, R2
0x06DE	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x06E0	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 414 :: 		
0x06E2	0xF203020C  ADDW	R2, R3, #12
0x06E6	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x06E8	0x6809    LDR	R1, [R1, #0]
0x06EA	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x06EC	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 415 :: 		
L_end_RCC_GetClocksFrequency:
0x06EE	0xF8DDE000  LDR	LR, [SP, #0]
0x06F2	0xB002    ADD	SP, SP, #8
0x06F4	0x4770    BX	LR
0x06F6	0xBF00    NOP
0x06F8	0x38084002  	RCC_CFGR+0
0x06FC	0x019F2000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
0x0460	0xB081    SUB	SP, SP, #4
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0462	0x4802    LDR	R0, [PC, #8]
0x0464	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0466	0xB001    ADD	SP, SP, #4
0x0468	0x4770    BX	LR
0x046A	0xBF00    NOP
0x046C	0x03502000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x0634	0xB083    SUB	SP, SP, #12
0x0636	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x063A	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x063C	0x00A1    LSLS	R1, R4, #2
0x063E	0x1841    ADDS	R1, R0, R1
0x0640	0x6809    LDR	R1, [R1, #0]
0x0642	0xF1B13FFF  CMP	R1, #-1
0x0646	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x0648	0xF2000134  ADDW	R1, R0, #52
0x064C	0x00A3    LSLS	R3, R4, #2
0x064E	0x18C9    ADDS	R1, R1, R3
0x0650	0x6809    LDR	R1, [R1, #0]
0x0652	0x460A    MOV	R2, R1
0x0654	0x18C1    ADDS	R1, R0, R3
0x0656	0x6809    LDR	R1, [R1, #0]
0x0658	0x9001    STR	R0, [SP, #4]
0x065A	0xF8AD4008  STRH	R4, [SP, #8]
0x065E	0x4608    MOV	R0, R1
0x0660	0x4611    MOV	R1, R2
0x0662	0xF7FFFF05  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x0666	0xF8BD4008  LDRH	R4, [SP, #8]
0x066A	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x066C	0x1C64    ADDS	R4, R4, #1
0x066E	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x0670	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x0672	0xF8DDE000  LDR	LR, [SP, #0]
0x0676	0xB003    ADD	SP, SP, #12
0x0678	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x0470	0xB083    SUB	SP, SP, #12
0x0472	0xF8CDE000  STR	LR, [SP, #0]
0x0476	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x0478	0xF00403FF  AND	R3, R4, #255
0x047C	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x047E	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x0480	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x0484	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x0486	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x0488	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x048C	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x048E	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x0490	0x4A2D    LDR	R2, [PC, #180]
0x0492	0x9202    STR	R2, [SP, #8]
0x0494	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x0496	0x4A2D    LDR	R2, [PC, #180]
0x0498	0x9202    STR	R2, [SP, #8]
0x049A	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x049C	0x4A2C    LDR	R2, [PC, #176]
0x049E	0x9202    STR	R2, [SP, #8]
0x04A0	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x04A2	0x4A2C    LDR	R2, [PC, #176]
0x04A4	0x9202    STR	R2, [SP, #8]
0x04A6	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x04A8	0x4A2B    LDR	R2, [PC, #172]
0x04AA	0x9202    STR	R2, [SP, #8]
0x04AC	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x04AE	0x4A2B    LDR	R2, [PC, #172]
0x04B0	0x9202    STR	R2, [SP, #8]
0x04B2	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x04B4	0x4A2A    LDR	R2, [PC, #168]
0x04B6	0x9202    STR	R2, [SP, #8]
0x04B8	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x04BA	0x4A2A    LDR	R2, [PC, #168]
0x04BC	0x9202    STR	R2, [SP, #8]
0x04BE	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x04C0	0x4A29    LDR	R2, [PC, #164]
0x04C2	0x9202    STR	R2, [SP, #8]
0x04C4	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x04C6	0x2800    CMP	R0, #0
0x04C8	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x04CA	0x2801    CMP	R0, #1
0x04CC	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x04CE	0x2802    CMP	R0, #2
0x04D0	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x04D2	0x2803    CMP	R0, #3
0x04D4	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x04D6	0x2804    CMP	R0, #4
0x04D8	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x04DA	0x2805    CMP	R0, #5
0x04DC	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x04DE	0x2806    CMP	R0, #6
0x04E0	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x04E2	0x2807    CMP	R0, #7
0x04E4	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x04E6	0x2808    CMP	R0, #8
0x04E8	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x04EA	0x2201    MOVS	R2, #1
0x04EC	0xB212    SXTH	R2, R2
0x04EE	0xFA02F20C  LSL	R2, R2, R12
0x04F2	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x04F6	0x9802    LDR	R0, [SP, #8]
0x04F8	0x460A    MOV	R2, R1
0x04FA	0xF8BD1004  LDRH	R1, [SP, #4]
0x04FE	0xF7FFFE97  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x0502	0x9A02    LDR	R2, [SP, #8]
0x0504	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x0508	0xF1BC0F07  CMP	R12, #7
0x050C	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x050E	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x0510	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x0512	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x0516	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x0518	0x9101    STR	R1, [SP, #4]
0x051A	0x4601    MOV	R1, R0
0x051C	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x051E	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x0520	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x0522	0x0083    LSLS	R3, R0, #2
0x0524	0xF04F020F  MOV	R2, #15
0x0528	0x409A    LSLS	R2, R3
0x052A	0x43D3    MVN	R3, R2
0x052C	0x680A    LDR	R2, [R1, #0]
0x052E	0x401A    ANDS	R2, R3
0x0530	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x0532	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x0534	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x0538	0x680A    LDR	R2, [R1, #0]
0x053A	0x431A    ORRS	R2, R3
0x053C	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x053E	0xF8DDE000  LDR	LR, [SP, #0]
0x0542	0xB003    ADD	SP, SP, #12
0x0544	0x4770    BX	LR
0x0546	0xBF00    NOP
0x0548	0x00004002  	#1073872896
0x054C	0x04004002  	#1073873920
0x0550	0x08004002  	#1073874944
0x0554	0x0C004002  	#1073875968
0x0558	0x10004002  	#1073876992
0x055C	0x14004002  	#1073878016
0x0560	0x18004002  	#1073879040
0x0564	0x1C004002  	#1073880064
0x0568	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0230	0xB084    SUB	SP, SP, #16
0x0232	0xF8CDE000  STR	LR, [SP, #0]
0x0236	0xB28D    UXTH	R5, R1
0x0238	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x023A	0x4B86    LDR	R3, [PC, #536]
0x023C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x0240	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x0242	0x4618    MOV	R0, R3
0x0244	0xF7FFFFA0  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x0248	0xF1B50FFF  CMP	R5, #255
0x024C	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x024E	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x0250	0x4B81    LDR	R3, [PC, #516]
0x0252	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x0256	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x0258	0x4B80    LDR	R3, [PC, #512]
0x025A	0x429E    CMP	R6, R3
0x025C	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x025E	0xF2455355  MOVW	R3, #21845
0x0262	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x0266	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x0268	0x1D3D    ADDS	R5, R7, #4
0x026A	0x682C    LDR	R4, [R5, #0]
0x026C	0xF06F03FF  MVN	R3, #255
0x0270	0xEA040303  AND	R3, R4, R3, LSL #0
0x0274	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x0276	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x027A	0x682C    LDR	R4, [R5, #0]
0x027C	0xF64F73FF  MOVW	R3, #65535
0x0280	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0284	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x0286	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0288	0x2E42    CMP	R6, #66
0x028A	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x028C	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x028E	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x0290	0xF64F73FF  MOVW	R3, #65535
0x0294	0x429D    CMP	R5, R3
0x0296	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x0298	0x4B70    LDR	R3, [PC, #448]
0x029A	0x429E    CMP	R6, R3
0x029C	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x029E	0xF04F3355  MOV	R3, #1431655765
0x02A2	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x02A4	0x1D3C    ADDS	R4, R7, #4
0x02A6	0x2300    MOVS	R3, #0
0x02A8	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x02AA	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x02AE	0xF04F33FF  MOV	R3, #-1
0x02B2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x02B4	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x02B6	0x2E42    CMP	R6, #66
0x02B8	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x02BA	0x2300    MOVS	R3, #0
0x02BC	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x02BE	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x02C0	0xF0060301  AND	R3, R6, #1
0x02C4	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x02C6	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x02C8	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x02CA	0xF0060308  AND	R3, R6, #8
0x02CE	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x02D0	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x02D2	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x02D4	0xF0060304  AND	R3, R6, #4
0x02D8	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x02DA	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x02DC	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x02DE	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x02E0	0xF4062301  AND	R3, R6, #528384
0x02E4	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x02E6	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x02E8	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x02EA	0xF4066300  AND	R3, R6, #2048
0x02EE	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x02F0	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x02F2	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x02F4	0xF4066380  AND	R3, R6, #1024
0x02F8	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x02FA	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x02FC	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x02FE	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x0300	0xF0060320  AND	R3, R6, #32
0x0304	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x0306	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x0308	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x030A	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x030C	0xF4067380  AND	R3, R6, #256
0x0310	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x0312	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x0314	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x0316	0xF0060380  AND	R3, R6, #128
0x031A	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x031C	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x031E	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x0320	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x0322	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x0326	0x9201    STR	R2, [SP, #4]
0x0328	0xFA1FF985  UXTH	R9, R5
0x032C	0x46B0    MOV	R8, R6
0x032E	0x4606    MOV	R6, R0
0x0330	0x4618    MOV	R0, R3
0x0332	0x460A    MOV	R2, R1
0x0334	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x0336	0xF1BA0F10  CMP	R10, #16
0x033A	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x033E	0xF04F0301  MOV	R3, #1
0x0342	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x0346	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x034A	0x42A3    CMP	R3, R4
0x034C	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x0350	0xEA4F044A  LSL	R4, R10, #1
0x0354	0xF04F0303  MOV	R3, #3
0x0358	0x40A3    LSLS	R3, R4
0x035A	0x43DC    MVN	R4, R3
0x035C	0x683B    LDR	R3, [R7, #0]
0x035E	0x4023    ANDS	R3, R4
0x0360	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x0362	0xEA4F034A  LSL	R3, R10, #1
0x0366	0xFA06F403  LSL	R4, R6, R3
0x036A	0x683B    LDR	R3, [R7, #0]
0x036C	0x4323    ORRS	R3, R4
0x036E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x0370	0xF008030C  AND	R3, R8, #12
0x0374	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x0376	0xF2070508  ADDW	R5, R7, #8
0x037A	0xEA4F044A  LSL	R4, R10, #1
0x037E	0xF04F0303  MOV	R3, #3
0x0382	0x40A3    LSLS	R3, R4
0x0384	0x43DC    MVN	R4, R3
0x0386	0x682B    LDR	R3, [R5, #0]
0x0388	0x4023    ANDS	R3, R4
0x038A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x038C	0xF2070508  ADDW	R5, R7, #8
0x0390	0xEA4F034A  LSL	R3, R10, #1
0x0394	0xFA02F403  LSL	R4, R2, R3
0x0398	0x682B    LDR	R3, [R5, #0]
0x039A	0x4323    ORRS	R3, R4
0x039C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x039E	0x1D3D    ADDS	R5, R7, #4
0x03A0	0xFA1FF48A  UXTH	R4, R10
0x03A4	0xF04F0301  MOV	R3, #1
0x03A8	0x40A3    LSLS	R3, R4
0x03AA	0x43DC    MVN	R4, R3
0x03AC	0x682B    LDR	R3, [R5, #0]
0x03AE	0x4023    ANDS	R3, R4
0x03B0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x03B2	0x1D3D    ADDS	R5, R7, #4
0x03B4	0xFA1FF48A  UXTH	R4, R10
0x03B8	0xB28B    UXTH	R3, R1
0x03BA	0xFA03F404  LSL	R4, R3, R4
0x03BE	0xB2A4    UXTH	R4, R4
0x03C0	0x682B    LDR	R3, [R5, #0]
0x03C2	0x4323    ORRS	R3, R4
0x03C4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x03C6	0xF207050C  ADDW	R5, R7, #12
0x03CA	0xFA1FF38A  UXTH	R3, R10
0x03CE	0x005C    LSLS	R4, R3, #1
0x03D0	0xB2A4    UXTH	R4, R4
0x03D2	0xF04F0303  MOV	R3, #3
0x03D6	0x40A3    LSLS	R3, R4
0x03D8	0x43DC    MVN	R4, R3
0x03DA	0x682B    LDR	R3, [R5, #0]
0x03DC	0x4023    ANDS	R3, R4
0x03DE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x03E0	0xF207050C  ADDW	R5, R7, #12
0x03E4	0xEA4F034A  LSL	R3, R10, #1
0x03E8	0xFA00F403  LSL	R4, R0, R3
0x03EC	0x682B    LDR	R3, [R5, #0]
0x03EE	0x4323    ORRS	R3, R4
0x03F0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x03F2	0xF0080308  AND	R3, R8, #8
0x03F6	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x03F8	0xF4080370  AND	R3, R8, #15728640
0x03FC	0x0D1B    LSRS	R3, R3, #20
0x03FE	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x0402	0xF1BA0F07  CMP	R10, #7
0x0406	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x0408	0xF2070324  ADDW	R3, R7, #36
0x040C	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x040E	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x0412	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x0414	0xF2070320  ADDW	R3, R7, #32
0x0418	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x041A	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x041C	0x00AC    LSLS	R4, R5, #2
0x041E	0xF04F030F  MOV	R3, #15
0x0422	0x40A3    LSLS	R3, R4
0x0424	0x43DC    MVN	R4, R3
0x0426	0x9B02    LDR	R3, [SP, #8]
0x0428	0x681B    LDR	R3, [R3, #0]
0x042A	0xEA030404  AND	R4, R3, R4, LSL #0
0x042E	0x9B02    LDR	R3, [SP, #8]
0x0430	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x0432	0xF89D400C  LDRB	R4, [SP, #12]
0x0436	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x0438	0x409C    LSLS	R4, R3
0x043A	0x9B02    LDR	R3, [SP, #8]
0x043C	0x681B    LDR	R3, [R3, #0]
0x043E	0xEA430404  ORR	R4, R3, R4, LSL #0
0x0442	0x9B02    LDR	R3, [SP, #8]
0x0444	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x0446	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x044A	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x044C	0xF8DDE000  LDR	LR, [SP, #0]
0x0450	0xB004    ADD	SP, SP, #16
0x0452	0x4770    BX	LR
0x0454	0xFC00FFFF  	#-1024
0x0458	0x0000FFFF  	#-65536
0x045C	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x018A	0x491E    LDR	R1, [PC, #120]
0x018C	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0190	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x0192	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0194	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0196	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x0198	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x019A	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x019C	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x019E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x01A0	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x01A2	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x01A4	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x01A6	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x01A8	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x01AA	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x01AC	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x01AE	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x01B0	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x01B2	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x01B4	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x01B6	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x01BA	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x01BC	0x4912    LDR	R1, [PC, #72]
0x01BE	0x4288    CMP	R0, R1
0x01C0	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x01C2	0x4912    LDR	R1, [PC, #72]
0x01C4	0x4288    CMP	R0, R1
0x01C6	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x01C8	0x4911    LDR	R1, [PC, #68]
0x01CA	0x4288    CMP	R0, R1
0x01CC	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x01CE	0x4911    LDR	R1, [PC, #68]
0x01D0	0x4288    CMP	R0, R1
0x01D2	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x01D4	0x4910    LDR	R1, [PC, #64]
0x01D6	0x4288    CMP	R0, R1
0x01D8	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x01DA	0x4910    LDR	R1, [PC, #64]
0x01DC	0x4288    CMP	R0, R1
0x01DE	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x01E0	0x490F    LDR	R1, [PC, #60]
0x01E2	0x4288    CMP	R0, R1
0x01E4	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x01E6	0x490F    LDR	R1, [PC, #60]
0x01E8	0x4288    CMP	R0, R1
0x01EA	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x01EC	0x490E    LDR	R1, [PC, #56]
0x01EE	0x4288    CMP	R0, R1
0x01F0	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01F2	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x01F4	0x490D    LDR	R1, [PC, #52]
0x01F6	0x6809    LDR	R1, [R1, #0]
0x01F8	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01FC	0x490B    LDR	R1, [PC, #44]
0x01FE	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x0200	0xB001    ADD	SP, SP, #4
0x0202	0x4770    BX	LR
0x0204	0xFC00FFFF  	#-1024
0x0208	0x00004002  	#1073872896
0x020C	0x04004002  	#1073873920
0x0210	0x08004002  	#1073874944
0x0214	0x0C004002  	#1073875968
0x0218	0x10004002  	#1073876992
0x021C	0x14004002  	#1073878016
0x0220	0x18004002  	#1073879040
0x0224	0x1C004002  	#1073880064
0x0228	0x20004002  	#1073881088
0x022C	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_UART_Write_Text:
;__Lib_UART_123_45_6.c, 476 :: 		
; uart_text start address is: 0 (R0)
0x1174	0xB083    SUB	SP, SP, #12
0x1176	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 477 :: 		
; counter start address is: 8 (R2)
0x117A	0x2200    MOVS	R2, #0
;__Lib_UART_123_45_6.c, 479 :: 		
0x117C	0x7801    LDRB	R1, [R0, #0]
; data_ start address is: 12 (R3)
0x117E	0xB2CB    UXTB	R3, R1
; data_ end address is: 12 (R3)
; counter end address is: 8 (R2)
0x1180	0xB2D9    UXTB	R1, R3
;__Lib_UART_123_45_6.c, 480 :: 		
L_UART_Write_Text27:
; data_ start address is: 4 (R1)
; counter start address is: 8 (R2)
; uart_text start address is: 0 (R0)
; uart_text end address is: 0 (R0)
0x1182	0xB171    CBZ	R1, L_UART_Write_Text28
; uart_text end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 481 :: 		
; uart_text start address is: 0 (R0)
0x1184	0x9001    STR	R0, [SP, #4]
; data_ end address is: 4 (R1)
0x1186	0xF88D2008  STRB	R2, [SP, #8]
0x118A	0xB2C8    UXTB	R0, R1
0x118C	0xF7FFFD56  BL	_UART_Write+0
0x1190	0xF89D2008  LDRB	R2, [SP, #8]
0x1194	0x9801    LDR	R0, [SP, #4]
;__Lib_UART_123_45_6.c, 482 :: 		
0x1196	0x1C51    ADDS	R1, R2, #1
0x1198	0xB2C9    UXTB	R1, R1
0x119A	0xB2CA    UXTB	R2, R1
;__Lib_UART_123_45_6.c, 483 :: 		
0x119C	0x1841    ADDS	R1, R0, R1
0x119E	0x7809    LDRB	R1, [R1, #0]
; data_ start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 484 :: 		
; uart_text end address is: 0 (R0)
; counter end address is: 8 (R2)
; data_ end address is: 4 (R1)
0x11A0	0xE7EF    B	L_UART_Write_Text27
L_UART_Write_Text28:
;__Lib_UART_123_45_6.c, 485 :: 		
L_end_UART_Write_Text:
0x11A2	0xF8DDE000  LDR	LR, [SP, #0]
0x11A6	0xB003    ADD	SP, SP, #12
0x11A8	0x4770    BX	LR
; end of _UART_Write_Text
_UART_Write:
;__Lib_UART_123_45_6.c, 472 :: 		
; _data start address is: 0 (R0)
0x0C3C	0xB081    SUB	SP, SP, #4
0x0C3E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 473 :: 		
; _data end address is: 0 (R0)
0x0C42	0x4C03    LDR	R4, [PC, #12]
0x0C44	0x6824    LDR	R4, [R4, #0]
0x0C46	0x47A0    BLX	R4
;__Lib_UART_123_45_6.c, 474 :: 		
L_end_UART_Write:
0x0C48	0xF8DDE000  LDR	LR, [SP, #0]
0x0C4C	0xB001    ADD	SP, SP, #4
0x0C4E	0x4770    BX	LR
0x0C50	0x03582000  	_UART_Wr_Ptr+0
; end of _UART_Write
_UART1_Write:
;__Lib_UART_123_45_6.c, 41 :: 		
; _data start address is: 0 (R0)
0x058C	0xB081    SUB	SP, SP, #4
0x058E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 42 :: 		
0x0592	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0594	0x4803    LDR	R0, [PC, #12]
0x0596	0xF7FFFFE9  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 43 :: 		
L_end_UART1_Write:
0x059A	0xF8DDE000  LDR	LR, [SP, #0]
0x059E	0xB001    ADD	SP, SP, #4
0x05A0	0x4770    BX	LR
0x05A2	0xBF00    NOP
0x05A4	0x10004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x056C	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x056E	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0572	0x4601    MOV	R1, R0
0x0574	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0578	0x680B    LDR	R3, [R1, #0]
0x057A	0xF3C312C0  UBFX	R2, R3, #7, #1
0x057E	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x0580	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x0582	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0584	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x0586	0xB001    ADD	SP, SP, #4
0x0588	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45_6.c, 45 :: 		
; _data start address is: 0 (R0)
0x05A8	0xB081    SUB	SP, SP, #4
0x05AA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 46 :: 		
0x05AE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x05B0	0x4803    LDR	R0, [PC, #12]
0x05B2	0xF7FFFFDB  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 47 :: 		
L_end_UART2_Write:
0x05B6	0xF8DDE000  LDR	LR, [SP, #0]
0x05BA	0xB001    ADD	SP, SP, #4
0x05BC	0x4770    BX	LR
0x05BE	0xBF00    NOP
0x05C0	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45_6.c, 49 :: 		
; _data start address is: 0 (R0)
0x05E0	0xB081    SUB	SP, SP, #4
0x05E2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 50 :: 		
0x05E6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x05E8	0x4803    LDR	R0, [PC, #12]
0x05EA	0xF7FFFFBF  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 51 :: 		
L_end_UART3_Write:
0x05EE	0xF8DDE000  LDR	LR, [SP, #0]
0x05F2	0xB001    ADD	SP, SP, #4
0x05F4	0x4770    BX	LR
0x05F6	0xBF00    NOP
0x05F8	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45_6.c, 53 :: 		
; _data start address is: 0 (R0)
0x05C4	0xB081    SUB	SP, SP, #4
0x05C6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 54 :: 		
0x05CA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x05CC	0x4803    LDR	R0, [PC, #12]
0x05CE	0xF7FFFFCD  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 55 :: 		
L_end_UART4_Write:
0x05D2	0xF8DDE000  LDR	LR, [SP, #0]
0x05D6	0xB001    ADD	SP, SP, #4
0x05D8	0x4770    BX	LR
0x05DA	0xBF00    NOP
0x05DC	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45_6.c, 57 :: 		
; _data start address is: 0 (R0)
0x05FC	0xB081    SUB	SP, SP, #4
0x05FE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 58 :: 		
0x0602	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0604	0x4803    LDR	R0, [PC, #12]
0x0606	0xF7FFFFB1  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 59 :: 		
L_end_UART5_Write:
0x060A	0xF8DDE000  LDR	LR, [SP, #0]
0x060E	0xB001    ADD	SP, SP, #4
0x0610	0x4770    BX	LR
0x0612	0xBF00    NOP
0x0614	0x50004000  	UART5_SR+0
; end of _UART5_Write
_UART6_Write:
;__Lib_UART_123_45_6.c, 61 :: 		
; _data start address is: 0 (R0)
0x0618	0xB081    SUB	SP, SP, #4
0x061A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 62 :: 		
0x061E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0620	0x4803    LDR	R0, [PC, #12]
0x0622	0xF7FFFFA3  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 63 :: 		
L_end_UART6_Write:
0x0626	0xF8DDE000  LDR	LR, [SP, #0]
0x062A	0xB001    ADD	SP, SP, #4
0x062C	0x4770    BX	LR
0x062E	0xBF00    NOP
0x0630	0x14004001  	USART6_SR+0
; end of _UART6_Write
_init_GPIO:
;Input Capture Complete 5ch.c, 383 :: 		void init_GPIO() {
0x123C	0xB081    SUB	SP, SP, #4
0x123E	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Complete 5ch.c, 386 :: 		GPIO_Digital_Input(&GPIOE_BASE, _GPIO_PINMASK_12);                          // Pointer motor encoder channel B
0x1242	0xF2410100  MOVW	R1, #4096
0x1246	0x481C    LDR	R0, [PC, #112]
0x1248	0xF7FFFF52  BL	_GPIO_Digital_Input+0
;Input Capture Complete 5ch.c, 387 :: 		GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_11);                          // Middle motor encoder channel B
0x124C	0xF6400100  MOVW	R1, #2048
0x1250	0x481A    LDR	R0, [PC, #104]
0x1252	0xF7FFFF4D  BL	_GPIO_Digital_Input+0
;Input Capture Complete 5ch.c, 388 :: 		GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_15);                          // Ring motor encoder channel B
0x1256	0xF2480100  MOVW	R1, #32768
0x125A	0x4819    LDR	R0, [PC, #100]
0x125C	0xF7FFFF48  BL	_GPIO_Digital_Input+0
;Input Capture Complete 5ch.c, 389 :: 		GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9);                           // Pinky motor encoder channel B
0x1260	0xF2402100  MOVW	R1, #512
0x1264	0x4817    LDR	R0, [PC, #92]
0x1266	0xF7FFFF43  BL	_GPIO_Digital_Input+0
;Input Capture Complete 5ch.c, 390 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11);                          // Thumb motor encoder channel B
0x126A	0xF6400100  MOVW	R1, #2048
0x126E	0x4816    LDR	R0, [PC, #88]
0x1270	0xF7FFFF58  BL	_GPIO_Digital_Output+0
;Input Capture Complete 5ch.c, 393 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_10);                         // Pointer direction
0x1274	0xF2404100  MOVW	R1, #1024
0x1278	0x480F    LDR	R0, [PC, #60]
0x127A	0xF7FFFF53  BL	_GPIO_Digital_Output+0
;Input Capture Complete 5ch.c, 394 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_10);                         // Middle direction
0x127E	0xF2404100  MOVW	R1, #1024
0x1282	0x480F    LDR	R0, [PC, #60]
0x1284	0xF7FFFF4E  BL	_GPIO_Digital_Output+0
;Input Capture Complete 5ch.c, 395 :: 		GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_13);                         // Ring direction
0x1288	0xF2420100  MOVW	R1, #8192
0x128C	0x480C    LDR	R0, [PC, #48]
0x128E	0xF7FFFF49  BL	_GPIO_Digital_Output+0
;Input Capture Complete 5ch.c, 396 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8);                          // Pinky direction
0x1292	0xF2401100  MOVW	R1, #256
0x1296	0x480B    LDR	R0, [PC, #44]
0x1298	0xF7FFFF44  BL	_GPIO_Digital_Output+0
;Input Capture Complete 5ch.c, 397 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12);                         // Thumb direction
0x129C	0xF2410100  MOVW	R1, #4096
0x12A0	0x4809    LDR	R0, [PC, #36]
0x12A2	0xF7FFFF3F  BL	_GPIO_Digital_Output+0
;Input Capture Complete 5ch.c, 399 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_0);                          // Motor enable: may not use in this test
0x12A6	0xF2400101  MOVW	R1, #1
0x12AA	0x4803    LDR	R0, [PC, #12]
0x12AC	0xF7FFFF3A  BL	_GPIO_Digital_Output+0
;Input Capture Complete 5ch.c, 400 :: 		}
L_end_init_GPIO:
0x12B0	0xF8DDE000  LDR	LR, [SP, #0]
0x12B4	0xB001    ADD	SP, SP, #4
0x12B6	0x4770    BX	LR
0x12B8	0x10004002  	GPIOE_BASE+0
0x12BC	0x00004002  	GPIOA_BASE+0
0x12C0	0x04004002  	GPIOB_BASE+0
0x12C4	0x0C004002  	GPIOD_BASE+0
0x12C8	0x08004002  	GPIOC_BASE+0
; end of _init_GPIO
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x10F0	0xB081    SUB	SP, SP, #4
0x10F2	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0x10F6	0xF04F0242  MOV	R2, #66
0x10FA	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x10FC	0xF7FFF898  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0x1100	0xF8DDE000  LDR	LR, [SP, #0]
0x1104	0xB001    ADD	SP, SP, #4
0x1106	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x1124	0xB081    SUB	SP, SP, #4
0x1126	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x112A	0x4A04    LDR	R2, [PC, #16]
0x112C	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x112E	0xF7FFF87F  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x1132	0xF8DDE000  LDR	LR, [SP, #0]
0x1136	0xB001    ADD	SP, SP, #4
0x1138	0x4770    BX	LR
0x113A	0xBF00    NOP
0x113C	0x00140008  	#524308
; end of _GPIO_Digital_Output
_init_pointer_PWM:
;Input Capture Complete 5ch.c, 404 :: 		void init_pointer_PWM( ) {
0x11F8	0xB081    SUB	SP, SP, #4
0x11FA	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Complete 5ch.c, 406 :: 		pwm_period = PWM_TIM1_Init(PWM_FREQ_HZ);                                   // Set PWM base frequency to 100 Hz
0x11FE	0x480C    LDR	R0, [PC, #48]
0x1200	0x6800    LDR	R0, [R0, #0]
0x1202	0xF7FFFF81  BL	_PWM_TIM1_Init+0
0x1206	0x490B    LDR	R1, [PC, #44]
0x1208	0x8008    STRH	R0, [R1, #0]
;Input Capture Complete 5ch.c, 407 :: 		PWM_TIM1_Set_Duty(70*(pwm_period/100), _PWM_NON_INVERTED, POINTER_PWM);    // Set 70% duty on Timer 1, channel 1
0x120A	0x2164    MOVS	R1, #100
0x120C	0xFBB0F1F1  UDIV	R1, R0, R1
0x1210	0xB289    UXTH	R1, R1
0x1212	0x2046    MOVS	R0, #70
0x1214	0x4348    MULS	R0, R1, R0
0x1216	0x2200    MOVS	R2, #0
0x1218	0x2100    MOVS	R1, #0
0x121A	0xF7FFFF59  BL	_PWM_TIM1_Set_Duty+0
;Input Capture Complete 5ch.c, 408 :: 		PWM_TIM1_Start(POINTER_PWM, &_GPIO_MODULE_TIM1_CH1_PE9);                   // Start PWM
0x121E	0x4906    LDR	R1, [PC, #24]
0x1220	0x2000    MOVS	R0, #0
0x1222	0xF7FFFD81  BL	_PWM_TIM1_Start+0
;Input Capture Complete 5ch.c, 409 :: 		}
L_end_init_pointer_PWM:
0x1226	0xF8DDE000  LDR	LR, [SP, #0]
0x122A	0xB001    ADD	SP, SP, #4
0x122C	0x4770    BX	LR
0x122E	0xBF00    NOP
0x1230	0x00902000  	_PWM_FREQ_HZ+0
0x1234	0x01B82000  	_pwm_period+0
0x1238	0x23A40000  	__GPIO_MODULE_TIM1_CH1_PE9+0
; end of _init_pointer_PWM
_PWM_TIM1_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 194 :: 		
; freq_hz start address is: 0 (R0)
0x1108	0xB081    SUB	SP, SP, #4
0x110A	0xF8CDE000  STR	LR, [SP, #0]
; freq_hz end address is: 0 (R0)
; freq_hz start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 195 :: 		
0x110E	0x4601    MOV	R1, R0
; freq_hz end address is: 0 (R0)
0x1110	0x4803    LDR	R0, [PC, #12]
0x1112	0xF7FFFB67  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 196 :: 		
L_end_PWM_TIM1_Init:
0x1116	0xF8DDE000  LDR	LR, [SP, #0]
0x111A	0xB001    ADD	SP, SP, #4
0x111C	0x4770    BX	LR
0x111E	0xBF00    NOP
0x1120	0x00004001  	TIM1_CR1+0
; end of _PWM_TIM1_Init
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 35 :: 		
; freq_hz start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x07E4	0xB081    SUB	SP, SP, #4
0x07E6	0xF8CDE000  STR	LR, [SP, #0]
0x07EA	0x460C    MOV	R4, R1
0x07EC	0x4601    MOV	R1, R0
; freq_hz end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 4 (R1)
; freq_hz start address is: 16 (R4)
;__Lib_PWM_1234589_12_10_11_13_14.c, 39 :: 		
0x07EE	0xF06F02FF  MVN	R2, #255
0x07F2	0xEA010202  AND	R2, R1, R2, LSL #0
; _PWM_Base start address is: 0 (R0)
0x07F6	0x4610    MOV	R0, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 41 :: 		
0x07F8	0xE03B    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init0
; _PWM_Base end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 43 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init2:
;__Lib_PWM_1234589_12_10_11_13_14.c, 44 :: 		
0x07FA	0x2301    MOVS	R3, #1
0x07FC	0xB25B    SXTB	R3, R3
0x07FE	0x4A41    LDR	R2, [PC, #260]
0x0800	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 45 :: 		
0x0802	0xE05A    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 48 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init3:
;__Lib_PWM_1234589_12_10_11_13_14.c, 49 :: 		
0x0804	0x2301    MOVS	R3, #1
0x0806	0xB25B    SXTB	R3, R3
0x0808	0x4A3F    LDR	R2, [PC, #252]
0x080A	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 50 :: 		
0x080C	0xE055    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 53 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init4:
;__Lib_PWM_1234589_12_10_11_13_14.c, 54 :: 		
0x080E	0x2301    MOVS	R3, #1
0x0810	0xB25B    SXTB	R3, R3
0x0812	0x4A3E    LDR	R2, [PC, #248]
0x0814	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 55 :: 		
0x0816	0xE050    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 58 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init5:
;__Lib_PWM_1234589_12_10_11_13_14.c, 59 :: 		
0x0818	0x2301    MOVS	R3, #1
0x081A	0xB25B    SXTB	R3, R3
0x081C	0x4A3C    LDR	R2, [PC, #240]
0x081E	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 60 :: 		
0x0820	0xE04B    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 63 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init6:
;__Lib_PWM_1234589_12_10_11_13_14.c, 64 :: 		
0x0822	0x2301    MOVS	R3, #1
0x0824	0xB25B    SXTB	R3, R3
0x0826	0x4A3B    LDR	R2, [PC, #236]
0x0828	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 65 :: 		
0x082A	0xE046    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 68 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init7:
;__Lib_PWM_1234589_12_10_11_13_14.c, 69 :: 		
0x082C	0x2301    MOVS	R3, #1
0x082E	0xB25B    SXTB	R3, R3
0x0830	0x4A39    LDR	R2, [PC, #228]
0x0832	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 70 :: 		
0x0834	0xE041    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 73 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init8:
;__Lib_PWM_1234589_12_10_11_13_14.c, 74 :: 		
0x0836	0x2301    MOVS	R3, #1
0x0838	0xB25B    SXTB	R3, R3
0x083A	0x4A38    LDR	R2, [PC, #224]
0x083C	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 75 :: 		
0x083E	0xE03C    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 78 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init9:
;__Lib_PWM_1234589_12_10_11_13_14.c, 79 :: 		
0x0840	0x2301    MOVS	R3, #1
0x0842	0xB25B    SXTB	R3, R3
0x0844	0x4A36    LDR	R2, [PC, #216]
0x0846	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 80 :: 		
0x0848	0xE037    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 83 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init10:
;__Lib_PWM_1234589_12_10_11_13_14.c, 84 :: 		
0x084A	0x2301    MOVS	R3, #1
0x084C	0xB25B    SXTB	R3, R3
0x084E	0x4A35    LDR	R2, [PC, #212]
0x0850	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 85 :: 		
0x0852	0xE032    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 88 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init11:
;__Lib_PWM_1234589_12_10_11_13_14.c, 89 :: 		
0x0854	0x2301    MOVS	R3, #1
0x0856	0xB25B    SXTB	R3, R3
0x0858	0x4A33    LDR	R2, [PC, #204]
0x085A	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 90 :: 		
0x085C	0xE02D    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 93 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init12:
;__Lib_PWM_1234589_12_10_11_13_14.c, 94 :: 		
0x085E	0x2301    MOVS	R3, #1
0x0860	0xB25B    SXTB	R3, R3
0x0862	0x4A32    LDR	R2, [PC, #200]
0x0864	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 95 :: 		
0x0866	0xE028    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 98 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init13:
;__Lib_PWM_1234589_12_10_11_13_14.c, 99 :: 		
0x0868	0x2301    MOVS	R3, #1
0x086A	0xB25B    SXTB	R3, R3
0x086C	0x4A30    LDR	R2, [PC, #192]
0x086E	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 100 :: 		
0x0870	0xE023    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 102 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init0:
; _PWM_Base start address is: 0 (R0)
0x0872	0x4A30    LDR	R2, [PC, #192]
0x0874	0x4290    CMP	R0, R2
0x0876	0xD0C0    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init2
0x0878	0xF1B04F80  CMP	R0, #1073741824
0x087C	0xD0C2    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init3
0x087E	0x4A2E    LDR	R2, [PC, #184]
0x0880	0x4290    CMP	R0, R2
0x0882	0xD0C4    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init4
0x0884	0x4A2D    LDR	R2, [PC, #180]
0x0886	0x4290    CMP	R0, R2
0x0888	0xD0C6    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init5
0x088A	0x4A2D    LDR	R2, [PC, #180]
0x088C	0x4290    CMP	R0, R2
0x088E	0xD0C8    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init6
0x0890	0x4A2C    LDR	R2, [PC, #176]
0x0892	0x4290    CMP	R0, R2
0x0894	0xD0CA    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init7
0x0896	0x4A2C    LDR	R2, [PC, #176]
0x0898	0x4290    CMP	R0, R2
0x089A	0xD0CC    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init8
0x089C	0x4A2B    LDR	R2, [PC, #172]
0x089E	0x4290    CMP	R0, R2
0x08A0	0xD0CE    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init9
0x08A2	0x4A2B    LDR	R2, [PC, #172]
0x08A4	0x4290    CMP	R0, R2
0x08A6	0xD0D0    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init10
0x08A8	0x4A2A    LDR	R2, [PC, #168]
0x08AA	0x4290    CMP	R0, R2
0x08AC	0xD0D2    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init11
0x08AE	0x4A2A    LDR	R2, [PC, #168]
0x08B0	0x4290    CMP	R0, R2
0x08B2	0xD0D4    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init12
0x08B4	0x4A29    LDR	R2, [PC, #164]
0x08B6	0x4290    CMP	R0, R2
0x08B8	0xD0D6    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init13
; _PWM_Base end address is: 0 (R0)
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1:
;__Lib_PWM_1234589_12_10_11_13_14.c, 104 :: 		
0x08BA	0xF7FFFDD1  BL	_Get_Fosc_kHz+0
; clk start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 106 :: 		
0x08BE	0x680B    LDR	R3, [R1, #0]
0x08C0	0xF06F0210  MVN	R2, #16
0x08C4	0xEA030202  AND	R2, R3, R2, LSL #0
0x08C8	0x600A    STR	R2, [R1, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 108 :: 		
0x08CA	0xF24032E8  MOVW	R2, #1000
0x08CE	0x4342    MULS	R2, R0, R2
; clk end address is: 0 (R0)
0x08D0	0xFBB2F3F4  UDIV	R3, R2, R4
; freq_hz end address is: 16 (R4)
; per_reg start address is: 0 (R0)
0x08D4	0x4618    MOV	R0, R3
;__Lib_PWM_1234589_12_10_11_13_14.c, 109 :: 		
0x08D6	0xF64F72FF  MOVW	R2, #65535
0x08DA	0xFBB3F2F2  UDIV	R2, R3, R2
; prescaler start address is: 16 (R4)
0x08DE	0x4614    MOV	R4, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 110 :: 		
0x08E0	0xF2010328  ADDW	R3, R1, #40
0x08E4	0xB292    UXTH	R2, R2
0x08E6	0x601A    STR	R2, [R3, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 112 :: 		
0x08E8	0x1C62    ADDS	R2, R4, #1
; prescaler end address is: 16 (R4)
0x08EA	0xFBB0F2F2  UDIV	R2, R0, R2
0x08EE	0x4610    MOV	R0, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 114 :: 		
0x08F0	0xF201032C  ADDW	R3, R1, #44
; PWM_Base end address is: 4 (R1)
0x08F4	0xB292    UXTH	R2, R2
0x08F6	0x601A    STR	R2, [R3, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 116 :: 		
0x08F8	0xB280    UXTH	R0, R0
; per_reg end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 117 :: 		
L_end_PWM_TIMx_Init:
0x08FA	0xF8DDE000  LDR	LR, [SP, #0]
0x08FE	0xB001    ADD	SP, SP, #4
0x0900	0x4770    BX	LR
0x0902	0xBF00    NOP
0x0904	0x08804247  	RCC_APB2ENR+0
0x0908	0x08004247  	RCC_APB1ENR+0
0x090C	0x08044247  	RCC_APB1ENR+0
0x0910	0x08084247  	RCC_APB1ENR+0
0x0914	0x080C4247  	RCC_APB1ENR+0
0x0918	0x08844247  	RCC_APB2ENR+0
0x091C	0x08C04247  	RCC_APB2ENR+0
0x0920	0x08C44247  	RCC_APB2ENR+0
0x0924	0x08C84247  	RCC_APB2ENR+0
0x0928	0x08184247  	RCC_APB1ENR+0
0x092C	0x081C4247  	RCC_APB1ENR+0
0x0930	0x08204247  	RCC_APB1ENR+0
0x0934	0x00004001  	#1073807360
0x0938	0x04004000  	#1073742848
0x093C	0x08004000  	#1073743872
0x0940	0x0C004000  	#1073744896
0x0944	0x04004001  	#1073808384
0x0948	0x40004001  	#1073823744
0x094C	0x44004001  	#1073824768
0x0950	0x48004001  	#1073825792
0x0954	0x18004000  	#1073747968
0x0958	0x1C004000  	#1073748992
0x095C	0x20004000  	#1073750016
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init
_PWM_TIM1_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 198 :: 		
; channel start address is: 8 (R2)
; inverted start address is: 4 (R1)
; duty_ratio start address is: 0 (R0)
0x10D0	0xB081    SUB	SP, SP, #4
0x10D2	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 8 (R2)
; inverted end address is: 4 (R1)
; duty_ratio end address is: 0 (R0)
; duty_ratio start address is: 0 (R0)
; inverted start address is: 4 (R1)
; channel start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 199 :: 		
0x10D6	0xB2D3    UXTB	R3, R2
; channel end address is: 8 (R2)
0x10D8	0xB2CA    UXTB	R2, R1
; inverted end address is: 4 (R1)
0x10DA	0xB281    UXTH	R1, R0
; duty_ratio end address is: 0 (R0)
0x10DC	0x4803    LDR	R0, [PC, #12]
0x10DE	0xF7FFFC3F  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 200 :: 		
L_end_PWM_TIM1_Set_Duty:
0x10E2	0xF8DDE000  LDR	LR, [SP, #0]
0x10E6	0xB001    ADD	SP, SP, #4
0x10E8	0x4770    BX	LR
0x10EA	0xBF00    NOP
0x10EC	0x00004001  	TIM1_CR1+0
; end of _PWM_TIM1_Set_Duty
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 121 :: 		
; channel start address is: 12 (R3)
; inverted start address is: 8 (R2)
; duty_ratio start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x0960	0xB081    SUB	SP, SP, #4
0x0962	0xB2D5    UXTB	R5, R2
; channel end address is: 12 (R3)
; inverted end address is: 8 (R2)
; duty_ratio end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 0 (R0)
; duty_ratio start address is: 4 (R1)
; inverted start address is: 20 (R5)
; channel start address is: 12 (R3)
;__Lib_PWM_1234589_12_10_11_13_14.c, 126 :: 		
0x0964	0xF2000420  ADDW	R4, R0, #32
0x0968	0x6822    LDR	R2, [R4, #0]
; tmpLong start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 127 :: 		
0x096A	0x2D01    CMP	R5, #1
0x096C	0xD108    BNE	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty14
; inverted end address is: 20 (R5)
;__Lib_PWM_1234589_12_10_11_13_14.c, 128 :: 		
0x096E	0x009C    LSLS	R4, R3, #2
0x0970	0xB224    SXTH	R4, R4
0x0972	0x1C65    ADDS	R5, R4, #1
0x0974	0xB22D    SXTH	R5, R5
0x0976	0xF04F0401  MOV	R4, #1
0x097A	0x40AC    LSLS	R4, R5
0x097C	0x4322    ORRS	R2, R4
0x097E	0xE008    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty15
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty14:
;__Lib_PWM_1234589_12_10_11_13_14.c, 130 :: 		
0x0980	0x009C    LSLS	R4, R3, #2
0x0982	0xB224    SXTH	R4, R4
0x0984	0x1C65    ADDS	R5, R4, #1
0x0986	0xB22D    SXTH	R5, R5
0x0988	0xF04F0401  MOV	R4, #1
0x098C	0x40AC    LSLS	R4, R5
0x098E	0x43E4    MVN	R4, R4
0x0990	0x4022    ANDS	R2, R4
; tmpLong end address is: 8 (R2)
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty15:
;__Lib_PWM_1234589_12_10_11_13_14.c, 131 :: 		
; tmpLong start address is: 8 (R2)
0x0992	0xF2000420  ADDW	R4, R0, #32
0x0996	0x6022    STR	R2, [R4, #0]
; tmpLong end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 134 :: 		
0x0998	0xF2000534  ADDW	R5, R0, #52
; PWM_Base end address is: 0 (R0)
0x099C	0x009C    LSLS	R4, R3, #2
; channel end address is: 12 (R3)
0x099E	0x192C    ADDS	R4, R5, R4
0x09A0	0x6021    STR	R1, [R4, #0]
; duty_ratio end address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 135 :: 		
L_end_PWM_TIMx_Set_Duty:
0x09A2	0xB001    ADD	SP, SP, #4
0x09A4	0x4770    BX	LR
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty
_PWM_TIM1_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 202 :: 		
; module start address is: 4 (R1)
; channel start address is: 0 (R0)
0x0D28	0xB081    SUB	SP, SP, #4
0x0D2A	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 203 :: 		
0x0D2E	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x0D30	0xB2C1    UXTB	R1, R0
; channel end address is: 0 (R0)
0x0D32	0x4803    LDR	R0, [PC, #12]
0x0D34	0xF7FFFCE4  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 204 :: 		
L_end_PWM_TIM1_Start:
0x0D38	0xF8DDE000  LDR	LR, [SP, #0]
0x0D3C	0xB001    ADD	SP, SP, #4
0x0D3E	0x4770    BX	LR
0x0D40	0x00004001  	TIM1_CR1+0
; end of _PWM_TIM1_Start
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 139 :: 		
; module start address is: 8 (R2)
; channel start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x0700	0xB083    SUB	SP, SP, #12
0x0702	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 8 (R2)
; channel end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 0 (R0)
; channel start address is: 4 (R1)
; module start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 142 :: 		
0x0706	0xF88D1004  STRB	R1, [SP, #4]
; module end address is: 8 (R2)
0x070A	0x9002    STR	R0, [SP, #8]
0x070C	0x4610    MOV	R0, R2
0x070E	0xF7FFFF91  BL	_GPIO_Alternate_Function_Enable+0
0x0712	0x9802    LDR	R0, [SP, #8]
0x0714	0xF89D1004  LDRB	R1, [SP, #4]
;__Lib_PWM_1234589_12_10_11_13_14.c, 145 :: 		
0x0718	0xF2000320  ADDW	R3, R0, #32
0x071C	0x681A    LDR	R2, [R3, #0]
; tmpLong start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 146 :: 		
0x071E	0x008C    LSLS	R4, R1, #2
0x0720	0xB224    SXTH	R4, R4
0x0722	0xF04F0301  MOV	R3, #1
0x0726	0x40A3    LSLS	R3, R4
0x0728	0x431A    ORRS	R2, R3
;__Lib_PWM_1234589_12_10_11_13_14.c, 147 :: 		
0x072A	0xF2000320  ADDW	R3, R0, #32
0x072E	0x601A    STR	R2, [R3, #0]
; tmpLong end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 150 :: 		
0x0730	0xF2000444  ADDW	R4, R0, #68
0x0734	0x6823    LDR	R3, [R4, #0]
0x0736	0xF4434300  ORR	R3, R3, #32768
0x073A	0x6023    STR	R3, [R4, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 152 :: 		
0x073C	0xF2000218  ADDW	R2, R0, #24
; tmpLongPtr start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 154 :: 		
0x0740	0x2901    CMP	R1, #1
0x0742	0xD901    BLS	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start19
;__Lib_PWM_1234589_12_10_11_13_14.c, 155 :: 		
0x0744	0x1D12    ADDS	R2, R2, #4
; tmpLongPtr end address is: 8 (R2)
0x0746	0xE7FF    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start16
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start19:
;__Lib_PWM_1234589_12_10_11_13_14.c, 154 :: 		
;__Lib_PWM_1234589_12_10_11_13_14.c, 155 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start16:
;__Lib_PWM_1234589_12_10_11_13_14.c, 157 :: 		
; tmpLongPtr start address is: 8 (R2)
0x0748	0x084B    LSRS	R3, R1, #1
0x074A	0xB2DB    UXTB	R3, R3
0x074C	0x005B    LSLS	R3, R3, #1
0x074E	0xB21B    SXTH	R3, R3
0x0750	0x428B    CMP	R3, R1
0x0752	0xD00A    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start17
; channel end address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 159 :: 		
0x0754	0x6814    LDR	R4, [R2, #0]
0x0756	0xF46F53D8  MVN	R3, #6912
0x075A	0xEA040303  AND	R3, R4, R3, LSL #0
0x075E	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 161 :: 		
0x0760	0x6813    LDR	R3, [R2, #0]
0x0762	0xF44343C0  ORR	R3, R3, #24576
0x0766	0x6013    STR	R3, [R2, #0]
; tmpLongPtr end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 162 :: 		
0x0768	0xE009    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start18
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start17:
;__Lib_PWM_1234589_12_10_11_13_14.c, 165 :: 		
; tmpLongPtr start address is: 8 (R2)
0x076A	0x6814    LDR	R4, [R2, #0]
0x076C	0xF06F031B  MVN	R3, #27
0x0770	0xEA040303  AND	R3, R4, R3, LSL #0
0x0774	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 167 :: 		
0x0776	0x6813    LDR	R3, [R2, #0]
0x0778	0xF0430360  ORR	R3, R3, #96
0x077C	0x6013    STR	R3, [R2, #0]
; tmpLongPtr end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 168 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start18:
;__Lib_PWM_1234589_12_10_11_13_14.c, 171 :: 		
0x077E	0x6803    LDR	R3, [R0, #0]
0x0780	0xF0430301  ORR	R3, R3, #1
0x0784	0x6003    STR	R3, [R0, #0]
; PWM_Base end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 172 :: 		
L_end_PWM_TIMx_Start:
0x0786	0xF8DDE000  LDR	LR, [SP, #0]
0x078A	0xB003    ADD	SP, SP, #12
0x078C	0x4770    BX	LR
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start
_init_middle_PWM:
;Input Capture Complete 5ch.c, 411 :: 		void init_middle_PWM( ) {
0x1834	0xB081    SUB	SP, SP, #4
0x1836	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Complete 5ch.c, 413 :: 		pwm_period = PWM_TIM1_Init(PWM_FREQ_HZ);                                // Set PWM base frequency to 100 Hz
0x183A	0x480C    LDR	R0, [PC, #48]
0x183C	0x6800    LDR	R0, [R0, #0]
0x183E	0xF7FFFC63  BL	_PWM_TIM1_Init+0
0x1842	0x490B    LDR	R1, [PC, #44]
0x1844	0x8008    STRH	R0, [R1, #0]
;Input Capture Complete 5ch.c, 414 :: 		PWM_TIM1_Set_Duty(70*(pwm_period/100), _PWM_NON_INVERTED, MIDDLE_PWM);          		// PWM duty cycle to 0 on Timer 1, channel 2
0x1846	0x2164    MOVS	R1, #100
0x1848	0xFBB0F1F1  UDIV	R1, R0, R1
0x184C	0xB289    UXTH	R1, R1
0x184E	0x2046    MOVS	R0, #70
0x1850	0x4348    MULS	R0, R1, R0
0x1852	0x2201    MOVS	R2, #1
0x1854	0x2100    MOVS	R1, #0
0x1856	0xF7FFFC3B  BL	_PWM_TIM1_Set_Duty+0
;Input Capture Complete 5ch.c, 415 :: 		PWM_TIM1_Start(MIDDLE_PWM, &_GPIO_MODULE_TIM1_CH2_PE11);       		// Start PWM
0x185A	0x4906    LDR	R1, [PC, #24]
0x185C	0x2001    MOVS	R0, #1
0x185E	0xF7FFFA63  BL	_PWM_TIM1_Start+0
;Input Capture Complete 5ch.c, 416 :: 		}
L_end_init_middle_PWM:
0x1862	0xF8DDE000  LDR	LR, [SP, #0]
0x1866	0xB001    ADD	SP, SP, #4
0x1868	0x4770    BX	LR
0x186A	0xBF00    NOP
0x186C	0x00902000  	_PWM_FREQ_HZ+0
0x1870	0x01B82000  	_pwm_period+0
0x1874	0x247C0000  	__GPIO_MODULE_TIM1_CH2_PE11+0
; end of _init_middle_PWM
_init_pinky_PWM:
;Input Capture Complete 5ch.c, 425 :: 		void init_pinky_PWM( ) {
0x1878	0xB081    SUB	SP, SP, #4
0x187A	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Complete 5ch.c, 427 :: 		pwm_period = PWM_TIM1_Init(PWM_FREQ_HZ);                                // Set PWM base frequency to 100 Hz
0x187E	0x480C    LDR	R0, [PC, #48]
0x1880	0x6800    LDR	R0, [R0, #0]
0x1882	0xF7FFFC41  BL	_PWM_TIM1_Init+0
0x1886	0x490B    LDR	R1, [PC, #44]
0x1888	0x8008    STRH	R0, [R1, #0]
;Input Capture Complete 5ch.c, 428 :: 		PWM_TIM1_Set_Duty(70*(pwm_period/100), _PWM_NON_INVERTED, PINKY_PWM);          		// PWM duty cycle to 0 on Timer 1, channel 4
0x188A	0x2164    MOVS	R1, #100
0x188C	0xFBB0F1F1  UDIV	R1, R0, R1
0x1890	0xB289    UXTH	R1, R1
0x1892	0x2046    MOVS	R0, #70
0x1894	0x4348    MULS	R0, R1, R0
0x1896	0x2203    MOVS	R2, #3
0x1898	0x2100    MOVS	R1, #0
0x189A	0xF7FFFC19  BL	_PWM_TIM1_Set_Duty+0
;Input Capture Complete 5ch.c, 429 :: 		PWM_TIM1_Start(PINKY_PWM, &_GPIO_MODULE_TIM1_CH4_PE14);       		// Start PWM
0x189E	0x4906    LDR	R1, [PC, #24]
0x18A0	0x2003    MOVS	R0, #3
0x18A2	0xF7FFFA41  BL	_PWM_TIM1_Start+0
;Input Capture Complete 5ch.c, 430 :: 		}
L_end_init_pinky_PWM:
0x18A6	0xF8DDE000  LDR	LR, [SP, #0]
0x18AA	0xB001    ADD	SP, SP, #4
0x18AC	0x4770    BX	LR
0x18AE	0xBF00    NOP
0x18B0	0x00902000  	_PWM_FREQ_HZ+0
0x18B4	0x01B82000  	_pwm_period+0
0x18B8	0x23380000  	__GPIO_MODULE_TIM1_CH4_PE14+0
; end of _init_pinky_PWM
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x190C	0xB081    SUB	SP, SP, #4
0x190E	0x9100    STR	R1, [SP, #0]
0x1910	0x4601    MOV	R1, R0
0x1912	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x1914	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x1916	0x461C    MOV	R4, R3
0x1918	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x191A	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x191C	0x4603    MOV	R3, R0
0x191E	0x1C42    ADDS	R2, R0, #1
0x1920	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x1922	0x781A    LDRB	R2, [R3, #0]
0x1924	0x7022    STRB	R2, [R4, #0]
0x1926	0x7822    LDRB	R2, [R4, #0]
0x1928	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x192A	0x462B    MOV	R3, R5
0x192C	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x192E	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x1930	0xB001    ADD	SP, SP, #4
0x1932	0x4770    BX	LR
; end of _strcpy
_init_finger:
;Input Capture Complete 5ch.c, 441 :: 		void init_finger(struct finger *fngr)
; fngr start address is: 0 (R0)
0x19EC	0xB081    SUB	SP, SP, #4
0x19EE	0xF8CDE000  STR	LR, [SP, #0]
0x19F2	0x4604    MOV	R4, R0
; fngr end address is: 0 (R0)
; fngr start address is: 16 (R4)
;Input Capture Complete 5ch.c, 443 :: 		fngr->position_actual = 0;
0x19F4	0xF2040214  ADDW	R2, R4, #20
0x19F8	0x2100    MOVS	R1, #0
0x19FA	0x6011    STR	R1, [R2, #0]
;Input Capture Complete 5ch.c, 444 :: 		POINTER_DIRECTION = CONTRACT;
0x19FC	0x4B29    LDR	R3, [PC, #164]
0x19FE	0xF9B32000  LDRSH	R2, [R3, #0]
0x1A02	0x4929    LDR	R1, [PC, #164]
0x1A04	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 445 :: 		MIDDLE_DIRECTION = CONTRACT;
0x1A06	0x4619    MOV	R1, R3
0x1A08	0xF9B12000  LDRSH	R2, [R1, #0]
0x1A0C	0x4927    LDR	R1, [PC, #156]
0x1A0E	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 446 :: 		RING_DIRECTION = CONTRACT;
0x1A10	0x4619    MOV	R1, R3
0x1A12	0xF9B12000  LDRSH	R2, [R1, #0]
0x1A16	0x4926    LDR	R1, [PC, #152]
0x1A18	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 447 :: 		PINKY_DIRECTION = CONTRACT;
0x1A1A	0x4619    MOV	R1, R3
0x1A1C	0xF9B12000  LDRSH	R2, [R1, #0]
0x1A20	0x4924    LDR	R1, [PC, #144]
0x1A22	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 448 :: 		THUMB_DIRECTION = CONTRACT;
0x1A24	0x4619    MOV	R1, R3
0x1A26	0xF9B12000  LDRSH	R2, [R1, #0]
0x1A2A	0x4923    LDR	R1, [PC, #140]
0x1A2C	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 450 :: 		if(strcmp(fngr->name, "fngr_pointer") == 0)    {
0x1A2E	0x4923    LDR	R1, [PC, #140]
0x1A30	0x4620    MOV	R0, R4
0x1A32	0xF7FFF987  BL	_strcmp+0
0x1A36	0xB928    CBNZ	R0, L_init_finger21
;Input Capture Complete 5ch.c, 451 :: 		fngr->FULLY_CONTRACTED = 3000;
0x1A38	0xF204021C  ADDW	R2, R4, #28
; fngr end address is: 16 (R4)
0x1A3C	0xF64031B8  MOVW	R1, #3000
0x1A40	0x6011    STR	R1, [R2, #0]
;Input Capture Complete 5ch.c, 452 :: 		}
0x1A42	0xE02A    B	L_init_finger22
L_init_finger21:
;Input Capture Complete 5ch.c, 453 :: 		else if(strcmp(fngr->name, "fngr_middle") == 0)   {
; fngr start address is: 16 (R4)
0x1A44	0x491E    LDR	R1, [PC, #120]
0x1A46	0x4620    MOV	R0, R4
0x1A48	0xF7FFF97C  BL	_strcmp+0
0x1A4C	0xB928    CBNZ	R0, L_init_finger23
;Input Capture Complete 5ch.c, 454 :: 		fngr->FULLY_CONTRACTED = 1500;
0x1A4E	0xF204021C  ADDW	R2, R4, #28
; fngr end address is: 16 (R4)
0x1A52	0xF24051DC  MOVW	R1, #1500
0x1A56	0x6011    STR	R1, [R2, #0]
;Input Capture Complete 5ch.c, 455 :: 		}
0x1A58	0xE01F    B	L_init_finger24
L_init_finger23:
;Input Capture Complete 5ch.c, 456 :: 		else if(strcmp(fngr->name, "fngr_ring") == 0) {
; fngr start address is: 16 (R4)
0x1A5A	0x491A    LDR	R1, [PC, #104]
0x1A5C	0x4620    MOV	R0, R4
0x1A5E	0xF7FFF971  BL	_strcmp+0
0x1A62	0xB928    CBNZ	R0, L_init_finger25
;Input Capture Complete 5ch.c, 457 :: 		fngr->FULLY_CONTRACTED = 4000;
0x1A64	0xF204021C  ADDW	R2, R4, #28
; fngr end address is: 16 (R4)
0x1A68	0xF64071A0  MOVW	R1, #4000
0x1A6C	0x6011    STR	R1, [R2, #0]
;Input Capture Complete 5ch.c, 458 :: 		}
0x1A6E	0xE014    B	L_init_finger26
L_init_finger25:
;Input Capture Complete 5ch.c, 459 :: 		else if(strcmp(fngr->name, "fngr_pinky") == 0)   {
; fngr start address is: 16 (R4)
0x1A70	0x4915    LDR	R1, [PC, #84]
0x1A72	0x4620    MOV	R0, R4
0x1A74	0xF7FFF966  BL	_strcmp+0
0x1A78	0xB928    CBNZ	R0, L_init_finger27
;Input Capture Complete 5ch.c, 460 :: 		fngr->FULLY_CONTRACTED = 2200;
0x1A7A	0xF204021C  ADDW	R2, R4, #28
; fngr end address is: 16 (R4)
0x1A7E	0xF6400198  MOVW	R1, #2200
0x1A82	0x6011    STR	R1, [R2, #0]
;Input Capture Complete 5ch.c, 461 :: 		}
0x1A84	0xE009    B	L_init_finger28
L_init_finger27:
;Input Capture Complete 5ch.c, 462 :: 		else if(strcmp(fngr->name, "fngr_thumb") == 0) {
; fngr start address is: 16 (R4)
0x1A86	0x4911    LDR	R1, [PC, #68]
0x1A88	0x4620    MOV	R0, R4
0x1A8A	0xF7FFF95B  BL	_strcmp+0
0x1A8E	0xB920    CBNZ	R0, L_init_finger29
;Input Capture Complete 5ch.c, 463 :: 		fngr->FULLY_CONTRACTED = 1000;
0x1A90	0xF204021C  ADDW	R2, R4, #28
; fngr end address is: 16 (R4)
0x1A94	0xF24031E8  MOVW	R1, #1000
0x1A98	0x6011    STR	R1, [R2, #0]
;Input Capture Complete 5ch.c, 464 :: 		}
L_init_finger29:
L_init_finger28:
L_init_finger26:
L_init_finger24:
L_init_finger22:
;Input Capture Complete 5ch.c, 465 :: 		}
L_end_init_finger:
0x1A9A	0xF8DDE000  LDR	LR, [SP, #0]
0x1A9E	0xB001    ADD	SP, SP, #4
0x1AA0	0x4770    BX	LR
0x1AA2	0xBF00    NOP
0x1AA4	0x00002000  	_CONTRACT+0
0x1AA8	0x02A84242  	GPIOE_ODR+0
0x1AAC	0x82A84240  	GPIOB_ODR+0
0x1AB0	0x82B44240  	GPIOB_ODR+0
0x1AB4	0x82A04241  	GPIOD_ODR+0
0x1AB8	0x02B04241  	GPIOC_ODR+0
0x1ABC	0x00022000  	?lstr9_Input_32Capture_32Complete_325ch+0
0x1AC0	0x000F2000  	?lstr10_Input_32Capture_32Complete_325ch+0
0x1AC4	0x001B2000  	?lstr11_Input_32Capture_32Complete_325ch+0
0x1AC8	0x00252000  	?lstr12_Input_32Capture_32Complete_325ch+0
0x1ACC	0x00302000  	?lstr13_Input_32Capture_32Complete_325ch+0
; end of _init_finger
_strcmp:
;__Lib_CString.c, 122 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x0D44	0xB081    SUB	SP, SP, #4
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
0x0D46	0x9100    STR	R1, [SP, #0]
; s1 end address is: 0 (R0)
; s2 end address is: 4 (R1)
0x0D48	0x4601    MOV	R1, R0
0x0D4A	0x9800    LDR	R0, [SP, #0]
;__Lib_CString.c, 124 :: 		
L_strcmp30:
; s2 start address is: 0 (R0)
; s1 start address is: 4 (R1)
0x0D4C	0x780A    LDRB	R2, [R1, #0]
0x0D4E	0xB132    CBZ	R2, L__strcmp89
0x0D50	0x780B    LDRB	R3, [R1, #0]
0x0D52	0x7802    LDRB	R2, [R0, #0]
0x0D54	0x4293    CMP	R3, R2
0x0D56	0xD102    BNE	L__strcmp88
L__strcmp87:
;__Lib_CString.c, 125 :: 		
0x0D58	0x1C49    ADDS	R1, R1, #1
0x0D5A	0x1C40    ADDS	R0, R0, #1
0x0D5C	0xE7F6    B	L_strcmp30
;__Lib_CString.c, 124 :: 		
L__strcmp89:
L__strcmp88:
;__Lib_CString.c, 127 :: 		
0x0D5E	0x780B    LDRB	R3, [R1, #0]
; s1 end address is: 4 (R1)
0x0D60	0x7802    LDRB	R2, [R0, #0]
; s2 end address is: 0 (R0)
0x0D62	0x1A9A    SUB	R2, R3, R2
0x0D64	0xB210    SXTH	R0, R2
;__Lib_CString.c, 128 :: 		
L_end_strcmp:
0x0D66	0xB001    ADD	SP, SP, #4
0x0D68	0x4770    BX	LR
; end of _strcmp
_UART1_Write_Text:
;__Lib_UART_123_45_6.c, 78 :: 		
; uart_text start address is: 0 (R0)
0x19D0	0xB081    SUB	SP, SP, #4
0x19D2	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 79 :: 		
0x19D6	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x19D8	0x4803    LDR	R0, [PC, #12]
0x19DA	0xF7FFF98B  BL	__Lib_UART_123_45_6_UARTx_Write_Text+0
;__Lib_UART_123_45_6.c, 80 :: 		
L_end_UART1_Write_Text:
0x19DE	0xF8DDE000  LDR	LR, [SP, #0]
0x19E2	0xB001    ADD	SP, SP, #4
0x19E4	0x4770    BX	LR
0x19E6	0xBF00    NOP
0x19E8	0x10004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_6_UARTx_Write_Text:
;__Lib_UART_123_45_6.c, 67 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0CF4	0xB081    SUB	SP, SP, #4
0x0CF6	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 68 :: 		
; counter start address is: 24 (R6)
0x0CFA	0x2600    MOVS	R6, #0
;__Lib_UART_123_45_6.c, 70 :: 		
0x0CFC	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x0CFE	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x0D00	0x4605    MOV	R5, R0
0x0D02	0xB2D8    UXTB	R0, R3
0x0D04	0x460C    MOV	R4, R1
;__Lib_UART_123_45_6.c, 71 :: 		
L___Lib_UART_123_45_6_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x0D06	0xB150    CBZ	R0, L___Lib_UART_123_45_6_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45_6.c, 72 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x0D08	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x0D0A	0x4628    MOV	R0, R5
0x0D0C	0xF7FFFC2E  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 73 :: 		
0x0D10	0x1C72    ADDS	R2, R6, #1
0x0D12	0xB2D2    UXTB	R2, R2
0x0D14	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45_6.c, 74 :: 		
0x0D16	0x18A2    ADDS	R2, R4, R2
0x0D18	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x0D1A	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45_6.c, 75 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x0D1C	0xE7F3    B	L___Lib_UART_123_45_6_UARTx_Write_Text2
L___Lib_UART_123_45_6_UARTx_Write_Text3:
;__Lib_UART_123_45_6.c, 76 :: 		
L_end_UARTx_Write_Text:
0x0D1E	0xF8DDE000  LDR	LR, [SP, #0]
0x0D22	0xB001    ADD	SP, SP, #4
0x0D24	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write_Text
_init_timer11:
;Input Capture Complete 5ch.c, 555 :: 		void init_timer11() {
0x1970	0xB081    SUB	SP, SP, #4
0x1972	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Complete 5ch.c, 557 :: 		RCC_APB2ENR.TIM11EN = 1;                                                    // Enable clock for timer 11
0x1976	0x2101    MOVS	R1, #1
0x1978	0xB249    SXTB	R1, R1
0x197A	0x480E    LDR	R0, [PC, #56]
0x197C	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 558 :: 		TIM11_CR1.CEN = 0;                                                          // Disable timer/counter
0x197E	0x2100    MOVS	R1, #0
0x1980	0xB249    SXTB	R1, R1
0x1982	0x480D    LDR	R0, [PC, #52]
0x1984	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 559 :: 		TIM11_PSC = SAMPLE_TIM_PSC;                                                 // Set timer 11 prescaler
0x1986	0x480D    LDR	R0, [PC, #52]
0x1988	0x8801    LDRH	R1, [R0, #0]
0x198A	0x480D    LDR	R0, [PC, #52]
0x198C	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 560 :: 		TIM11_ARR = SAMPLE_TIM_RELOAD;                                              // Set timer 11 overflow value
0x198E	0x480D    LDR	R0, [PC, #52]
0x1990	0x8801    LDRH	R1, [R0, #0]
0x1992	0x480D    LDR	R0, [PC, #52]
0x1994	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 561 :: 		NVIC_IntEnable(IVT_INT_TIM1_TRG_COM_TIM11);                                 // Enable timer 11 interrupt
0x1996	0xF240002A  MOVW	R0, #42
0x199A	0xF7FFF95B  BL	_NVIC_IntEnable+0
;Input Capture Complete 5ch.c, 562 :: 		TIM11_DIER.UIE = 1;                                                         // Timer 11 update interrupt enable
0x199E	0x2101    MOVS	R1, #1
0x19A0	0xB249    SXTB	R1, R1
0x19A2	0x480A    LDR	R0, [PC, #40]
0x19A4	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 563 :: 		TIM11_CR1.CEN = 1;                                                          // Enable timer/counter
0x19A6	0x4804    LDR	R0, [PC, #16]
0x19A8	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 564 :: 		}
L_end_init_timer11:
0x19AA	0xF8DDE000  LDR	LR, [SP, #0]
0x19AE	0xB001    ADD	SP, SP, #4
0x19B0	0x4770    BX	LR
0x19B2	0xBF00    NOP
0x19B4	0x08C84247  	RCC_APB2ENR+0
0x19B8	0x00004229  	TIM11_CR1+0
0x19BC	0x003E2000  	_SAMPLE_TIM_PSC+0
0x19C0	0x48284001  	TIM11_PSC+0
0x19C4	0x00482000  	_SAMPLE_TIM_RELOAD+0
0x19C8	0x482C4001  	TIM11_ARR+0
0x19CC	0x01804229  	TIM11_DIER+0
; end of _init_timer11
_NVIC_IntEnable:
;__Lib_System_4XX.c, 171 :: 		
; ivt start address is: 0 (R0)
0x0C54	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 183 :: 		
0x0C56	0x2804    CMP	R0, #4
0x0C58	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 188 :: 		
0x0C5A	0x4919    LDR	R1, [PC, #100]
0x0C5C	0x6809    LDR	R1, [R1, #0]
0x0C5E	0xF4413280  ORR	R2, R1, #65536
0x0C62	0x4917    LDR	R1, [PC, #92]
0x0C64	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 189 :: 		
0x0C66	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 190 :: 		
; ivt start address is: 0 (R0)
0x0C68	0x2805    CMP	R0, #5
0x0C6A	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 195 :: 		
0x0C6C	0x4914    LDR	R1, [PC, #80]
0x0C6E	0x6809    LDR	R1, [R1, #0]
0x0C70	0xF4413200  ORR	R2, R1, #131072
0x0C74	0x4912    LDR	R1, [PC, #72]
0x0C76	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 196 :: 		
0x0C78	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 197 :: 		
; ivt start address is: 0 (R0)
0x0C7A	0x2806    CMP	R0, #6
0x0C7C	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 202 :: 		
0x0C7E	0x4910    LDR	R1, [PC, #64]
0x0C80	0x6809    LDR	R1, [R1, #0]
0x0C82	0xF4412280  ORR	R2, R1, #262144
0x0C86	0x490E    LDR	R1, [PC, #56]
0x0C88	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 203 :: 		
0x0C8A	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 204 :: 		
; ivt start address is: 0 (R0)
0x0C8C	0x280F    CMP	R0, #15
0x0C8E	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 209 :: 		
0x0C90	0x490C    LDR	R1, [PC, #48]
0x0C92	0x6809    LDR	R1, [R1, #0]
0x0C94	0xF0410202  ORR	R2, R1, #2
0x0C98	0x490A    LDR	R1, [PC, #40]
0x0C9A	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 210 :: 		
0x0C9C	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 211 :: 		
; ivt start address is: 0 (R0)
0x0C9E	0x2810    CMP	R0, #16
0x0CA0	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 216 :: 		
0x0CA2	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x0CA6	0x0961    LSRS	R1, R4, #5
0x0CA8	0x008A    LSLS	R2, R1, #2
0x0CAA	0x4907    LDR	R1, [PC, #28]
0x0CAC	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 217 :: 		
0x0CAE	0xF004021F  AND	R2, R4, #31
0x0CB2	0xF04F0101  MOV	R1, #1
0x0CB6	0x4091    LSLS	R1, R2
0x0CB8	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 218 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 219 :: 		
L_end_NVIC_IntEnable:
0x0CBA	0xB001    ADD	SP, SP, #4
0x0CBC	0x4770    BX	LR
0x0CBE	0xBF00    NOP
0x0CC0	0xED24E000  	SCB_SHCRS+0
0x0CC4	0xE010E000  	STK_CTRL+0
0x0CC8	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_init_input_capture:
;Input Capture Complete 5ch.c, 478 :: 		void init_input_capture() {
0x15E4	0xB086    SUB	SP, SP, #24
0x15E6	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Complete 5ch.c, 482 :: 		RCC_APB1ENR.TIM3EN = 1;                                                     // Enable clock gating for timer module 3
0x15EA	0x2101    MOVS	R1, #1
0x15EC	0xB249    SXTB	R1, R1
0x15EE	0x4864    LDR	R0, [PC, #400]
0x15F0	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 483 :: 		TIM3_CR1.CEN = 0;                                                           // Disable timer/counter
0x15F2	0x2100    MOVS	R1, #0
0x15F4	0xB249    SXTB	R1, R1
0x15F6	0x4863    LDR	R0, [PC, #396]
0x15F8	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 484 :: 		TIM3_CR2.TI1S = 0;                                                          // TIM3_CH1 connected to TI1 Input (1 would be Ch1, 2, 3 XOR to TI1)
0x15FA	0x4863    LDR	R0, [PC, #396]
0x15FC	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 485 :: 		TIM3_PSC = ENCODER_TIM_PSC;                                                 // Set timer 3 prescaler
0x15FE	0x4863    LDR	R0, [PC, #396]
0x1600	0x9005    STR	R0, [SP, #20]
0x1602	0x8801    LDRH	R1, [R0, #0]
0x1604	0x4862    LDR	R0, [PC, #392]
0x1606	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 486 :: 		TIM3_ARR = ENCODER_TIM_RELOAD;                                              // Set timer 3 Auto Reload value
0x1608	0x4862    LDR	R0, [PC, #392]
0x160A	0x9003    STR	R0, [SP, #12]
0x160C	0x6801    LDR	R1, [R0, #0]
0x160E	0x4862    LDR	R0, [PC, #392]
0x1610	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 487 :: 		TIM3_CR1 |= 0;                                                              // Set counter direction as upcounting (DIR bit)
0x1612	0x4862    LDR	R0, [PC, #392]
0x1614	0x6801    LDR	R1, [R0, #0]
0x1616	0x4861    LDR	R0, [PC, #388]
0x1618	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 490 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM3_CH1_PC6);                 // Configure alternate function for C6 as Timer 3 Channel 1
0x161A	0x4861    LDR	R0, [PC, #388]
0x161C	0xF7FFF80A  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Complete 5ch.c, 491 :: 		TIM3_CCMR1_Input |= 0x01;                                                   // Set capture channel 1 as input on TI1 (CC1S = 01)
0x1620	0x4860    LDR	R0, [PC, #384]
0x1622	0x6800    LDR	R0, [R0, #0]
0x1624	0xF0400101  ORR	R1, R0, #1
0x1628	0x485E    LDR	R0, [PC, #376]
0x162A	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 492 :: 		TIM3_CCER.CC1P = 0;                                                         // Set capture on rising edge event
0x162C	0x2100    MOVS	R1, #0
0x162E	0xB249    SXTB	R1, R1
0x1630	0x485D    LDR	R0, [PC, #372]
0x1632	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 493 :: 		TIM3_CCER.CC1NP = 0;                                                        // ^^ Continuation of above
0x1634	0x485D    LDR	R0, [PC, #372]
0x1636	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 494 :: 		TIM3_CCER.CC1E = 1;                                                         // Enable capture on channel 1
0x1638	0x2101    MOVS	R1, #1
0x163A	0xB249    SXTB	R1, R1
0x163C	0x485C    LDR	R0, [PC, #368]
0x163E	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 495 :: 		TIM3_DIER.CC1IE = 1;                                                        // Enable interrupt on capture channel 1
0x1640	0x485C    LDR	R0, [PC, #368]
0x1642	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 498 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM3_CH2_PC7);                 // Configure alternate function for pin C7 as Timer 3 Channel 2
0x1644	0x485C    LDR	R0, [PC, #368]
0x1646	0xF7FEFFF5  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Complete 5ch.c, 499 :: 		TIM3_CCMR1_Input |= 0x100;                                                  // Set capture channel 2 as input on TI2 (CC2S = 01)
0x164A	0x4856    LDR	R0, [PC, #344]
0x164C	0x6800    LDR	R0, [R0, #0]
0x164E	0xF4407180  ORR	R1, R0, #256
0x1652	0x4854    LDR	R0, [PC, #336]
0x1654	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 500 :: 		TIM3_CCER.CC2P = 0;                                                         // Set capture on rising edge event
0x1656	0x2100    MOVS	R1, #0
0x1658	0xB249    SXTB	R1, R1
0x165A	0x4858    LDR	R0, [PC, #352]
0x165C	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 501 :: 		TIM3_CCER.CC2NP = 0;                                                        // ^^ Continuation of above
0x165E	0x4858    LDR	R0, [PC, #352]
0x1660	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 502 :: 		TIM3_CCER.CC2E = 1;                                                         // Enable capture on channel 2
0x1662	0x2101    MOVS	R1, #1
0x1664	0xB249    SXTB	R1, R1
0x1666	0x4857    LDR	R0, [PC, #348]
0x1668	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 503 :: 		TIM3_DIER.CC2IE = 1;                                                        // Enable interrupt on capture channel 2
0x166A	0x4857    LDR	R0, [PC, #348]
0x166C	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 506 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM3_CH3_PC8);                 // Configure alternate function for pin BC8 as Timer 3 Channel 3
0x166E	0x4857    LDR	R0, [PC, #348]
0x1670	0xF7FEFFE0  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Complete 5ch.c, 507 :: 		TIM3_CCMR2_Input |= 0x01;                                                   // Set capture channel 3 as input on TI3 (CC3S = 01)
0x1674	0x4856    LDR	R0, [PC, #344]
0x1676	0x6800    LDR	R0, [R0, #0]
0x1678	0xF0400101  ORR	R1, R0, #1
0x167C	0x4854    LDR	R0, [PC, #336]
0x167E	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 508 :: 		TIM3_CCER.CC3P = 0;                                                         // Set capture on rising edge event
0x1680	0x2100    MOVS	R1, #0
0x1682	0xB249    SXTB	R1, R1
0x1684	0x4853    LDR	R0, [PC, #332]
0x1686	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 509 :: 		TIM3_CCER.CC3NP = 0;                                                         // ^^ Continuation of above
0x1688	0x4853    LDR	R0, [PC, #332]
0x168A	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 510 :: 		TIM3_CCER.CC3E = 1;                                                         // Enable capture on channel 3
0x168C	0x2101    MOVS	R1, #1
0x168E	0xB249    SXTB	R1, R1
0x1690	0x4852    LDR	R0, [PC, #328]
0x1692	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 511 :: 		TIM3_DIER.CC3IE = 1;                                                        // Enable interrupt on capture channel 3
0x1694	0x4852    LDR	R0, [PC, #328]
0x1696	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 514 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM3_CH4_PC9);                 // Configure alternate function for pin C9 as Timer 3 Channel 4
0x1698	0x4852    LDR	R0, [PC, #328]
0x169A	0xF7FEFFCB  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Complete 5ch.c, 515 :: 		TIM3_CCMR2_Input |= 0x100;                                                  // Set capture channel 4 as input on TI4 (CC4S = 01)
0x169E	0x484C    LDR	R0, [PC, #304]
0x16A0	0x6800    LDR	R0, [R0, #0]
0x16A2	0xF4407180  ORR	R1, R0, #256
0x16A6	0x484A    LDR	R0, [PC, #296]
0x16A8	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 516 :: 		TIM3_CCER.CC3P = 0;                                                         // Set capture on rising edge event
0x16AA	0x2200    MOVS	R2, #0
0x16AC	0xB252    SXTB	R2, R2
0x16AE	0x4849    LDR	R0, [PC, #292]
0x16B0	0x6002    STR	R2, [R0, #0]
;Input Capture Complete 5ch.c, 517 :: 		TIM3_CCER.CC3NP = 0;                                                        // ^^ Continuation of above
0x16B2	0x4849    LDR	R0, [PC, #292]
0x16B4	0x6002    STR	R2, [R0, #0]
;Input Capture Complete 5ch.c, 518 :: 		TIM3_CCER.CC4E = 1;                                                         // Enable capture on channel 4
0x16B6	0x2101    MOVS	R1, #1
0x16B8	0xB249    SXTB	R1, R1
0x16BA	0x484B    LDR	R0, [PC, #300]
0x16BC	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 519 :: 		TIM3_DIER.CC4IE = 1;                                                        // Enable interrupt on capture channel 4
0x16BE	0x484B    LDR	R0, [PC, #300]
0x16C0	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 523 :: 		RCC_APB1ENR.TIM2EN = 1;                                                     // Enable clock gating for timer module 5
0x16C2	0x484B    LDR	R0, [PC, #300]
0x16C4	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 524 :: 		TIM2_CR1.CEN = 0;                                                           // Disable timer/counter
0x16C6	0x484B    LDR	R0, [PC, #300]
0x16C8	0x6002    STR	R2, [R0, #0]
;Input Capture Complete 5ch.c, 525 :: 		TIM2_CR2.TI1S = 0;                                                          // TIM3_CH1 connected to TI1 Input (1 would be Ch1, 2, 3 XOR to TI1)
0x16CA	0x484B    LDR	R0, [PC, #300]
0x16CC	0x6002    STR	R2, [R0, #0]
;Input Capture Complete 5ch.c, 526 :: 		TIM2_PSC = ENCODER_TIM_PSC;                                                 // Set timer 3 prescaler
0x16CE	0x9805    LDR	R0, [SP, #20]
0x16D0	0x8801    LDRH	R1, [R0, #0]
0x16D2	0x484A    LDR	R0, [PC, #296]
0x16D4	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 527 :: 		TIM2_ARR = ENCODER_TIM_RELOAD;                                              // Set timer 3 Auto Reload value
0x16D6	0x9803    LDR	R0, [SP, #12]
0x16D8	0x6801    LDR	R1, [R0, #0]
0x16DA	0x4849    LDR	R0, [PC, #292]
0x16DC	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 528 :: 		TIM2_CR1 |= 0;                                                              // Set counter direction as upcounting (DIR bit)
0x16DE	0x4849    LDR	R0, [PC, #292]
0x16E0	0x6801    LDR	R1, [R0, #0]
0x16E2	0x4848    LDR	R0, [PC, #288]
0x16E4	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 531 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM2_CH1_PA5);                 // Configure alternate function for A5 as Timer 2 Channel 1
0x16E6	0x4848    LDR	R0, [PC, #288]
0x16E8	0xF7FEFFA4  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Complete 5ch.c, 532 :: 		TIM2_CCMR1_Input |= 0x01;                                                   // Set capture channel 1 as input on TI1 (CC1S = 01)
0x16EC	0x4847    LDR	R0, [PC, #284]
0x16EE	0x6800    LDR	R0, [R0, #0]
0x16F0	0xF0400101  ORR	R1, R0, #1
0x16F4	0x4845    LDR	R0, [PC, #276]
0x16F6	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 533 :: 		TIM2_CCER.CC1P = 0;                                                         // Set capture on rising edge event
0x16F8	0x2100    MOVS	R1, #0
0x16FA	0xB249    SXTB	R1, R1
0x16FC	0x4844    LDR	R0, [PC, #272]
0x16FE	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 534 :: 		TIM2_CCER.CC1NP = 0;                                                        // ^^ Continuation of above
0x1700	0x4844    LDR	R0, [PC, #272]
0x1702	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 535 :: 		TIM2_CCER.CC1E = 1;                                                         // Enable capture on channel 1
0x1704	0x2101    MOVS	R1, #1
0x1706	0xB249    SXTB	R1, R1
0x1708	0x4843    LDR	R0, [PC, #268]
0x170A	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 536 :: 		TIM2_DIER.CC1IE = 1;                                                        // Enable interrupt on capture channel 1
0x170C	0x4843    LDR	R0, [PC, #268]
0x170E	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 540 :: 		TIM3_DIER.UIE = 1;                                                          // Enable overflow interrupt Timer 3
0x1710	0x4843    LDR	R0, [PC, #268]
0x1712	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 541 :: 		TIM2_DIER.UIE = 1;                                                          // Enable overflow interrupt for Timer 2
0x1714	0x4843    LDR	R0, [PC, #268]
0x1716	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 542 :: 		NVIC_IntEnable(IVT_INT_TIM3);                                               // Enable timer 3 ISR
0x1718	0xF240002D  MOVW	R0, #45
0x171C	0xF7FFFA9A  BL	_NVIC_IntEnable+0
;Input Capture Complete 5ch.c, 543 :: 		NVIC_IntEnable(IVT_INT_TIM2);                                               // Enable timer 2 ISR
0x1720	0xF240002C  MOVW	R0, #44
0x1724	0xF7FFFA96  BL	_NVIC_IntEnable+0
;Input Capture Complete 5ch.c, 544 :: 		TIM3_CR1.CEN = 1;                                                           // Enable timer 3
0x1728	0x2101    MOVS	R1, #1
0x172A	0xB249    SXTB	R1, R1
0x172C	0x4815    LDR	R0, [PC, #84]
0x172E	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 545 :: 		TIM2_CR1.CEN = 1;                                                           // Enable Timer 2
0x1730	0x4830    LDR	R0, [PC, #192]
0x1732	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 549 :: 		encoder_timer_period_ms = (long double) 1000.0 / (MCU_FREQUENCY / (ENCODER_TIM_PSC + 1));
0x1734	0x9805    LDR	R0, [SP, #20]
0x1736	0x8800    LDRH	R0, [R0, #0]
0x1738	0x1C41    ADDS	R1, R0, #1
0x173A	0xB289    UXTH	R1, R1
0x173C	0x483A    LDR	R0, [PC, #232]
0x173E	0x6800    LDR	R0, [R0, #0]
0x1740	0xFBB0F0F1  UDIV	R0, R0, R1
0x1744	0xF7FFFAC2  BL	__UnsignedIntegralToLongDouble+0
0x1748	0xE9CD0103  STRD	R0, R1, [SP, #12]
0x174C	0xF04F0000  MOV	R0, #0
0x1750	0x4936    LDR	R1, [PC, #216]
0x1752	0xEE000A10  VMOV	S0, R0
0x1756	0xEE001A90  VMOV	S1, R1
0x175A	0xE9CD2301  STRD	R2, R3, [SP, #4]
0x175E	0xE9DD2303  LDRD	R2, R3, [SP, #12]
0x1762	0xEE100A10  VMOV	R0, S0
0x1766	0xEE101A90  VMOV	R1, S1
0x176A	0xF7FFFB87  BL	__Div_DP+0
0x176E	0xE9DD2301  LDRD	R2, R3, [SP, #4]
0x1772	0x4A2F    LDR	R2, [PC, #188]
0x1774	0xE9C20100  STRD	R0, R1, [R2, #0]
;Input Capture Complete 5ch.c, 550 :: 		}
L_end_init_input_capture:
0x1778	0xF8DDE000  LDR	LR, [SP, #0]
0x177C	0xB006    ADD	SP, SP, #24
0x177E	0x4770    BX	LR
0x1780	0x08044247  	RCC_APB1ENR+0
0x1784	0x80004200  	TIM3_CR1+0
0x1788	0x809C4200  	TIM3_CR2+0
0x178C	0x003C2000  	_ENCODER_TIM_PSC+0
0x1790	0x04284000  	TIM3_PSC+0
0x1794	0x00402000  	_ENCODER_TIM_RELOAD+0
0x1798	0x042C4000  	TIM3_ARR+0
0x179C	0x04004000  	TIM3_CR1+0
0x17A0	0x25540000  	__GPIO_MODULE_TIM3_CH1_PC6+0
0x17A4	0x04184000  	TIM3_CCMR1_Input+0
0x17A8	0x84044200  	TIM3_CCER+0
0x17AC	0x840C4200  	TIM3_CCER+0
0x17B0	0x84004200  	TIM3_CCER+0
0x17B4	0x81844200  	TIM3_DIER+0
0x17B8	0x24E80000  	__GPIO_MODULE_TIM3_CH2_PC7+0
0x17BC	0x84144200  	TIM3_CCER+0
0x17C0	0x841C4200  	TIM3_CCER+0
0x17C4	0x84104200  	TIM3_CCER+0
0x17C8	0x81884200  	TIM3_DIER+0
0x17CC	0x25C00000  	__GPIO_MODULE_TIM3_CH3_PC8+0
0x17D0	0x041C4000  	TIM3_CCMR2_Input+0
0x17D4	0x84244200  	TIM3_CCER+0
0x17D8	0x842C4200  	TIM3_CCER+0
0x17DC	0x84204200  	TIM3_CCER+0
0x17E0	0x818C4200  	TIM3_DIER+0
0x17E4	0x26980000  	__GPIO_MODULE_TIM3_CH4_PC9+0
0x17E8	0x84304200  	TIM3_CCER+0
0x17EC	0x81904200  	TIM3_DIER+0
0x17F0	0x08004247  	RCC_APB1ENR+0
0x17F4	0x00004200  	TIM2_CR1+0
0x17F8	0x009C4200  	TIM2_CR2+0
0x17FC	0x00284000  	TIM2_PSC+0
0x1800	0x002C4000  	TIM2_ARR+0
0x1804	0x00004000  	TIM2_CR1+0
0x1808	0x262C0000  	__GPIO_MODULE_TIM2_CH1_PA5+0
0x180C	0x00184000  	TIM2_CCMR1_Input+0
0x1810	0x04044200  	TIM2_CCER+0
0x1814	0x040C4200  	TIM2_CCER+0
0x1818	0x04004200  	TIM2_CCER+0
0x181C	0x01844200  	TIM2_DIER+0
0x1820	0x81804200  	TIM3_DIER+0
0x1824	0x01804200  	TIM2_DIER+0
0x1828	0x00442000  	_MCU_FREQUENCY+0
0x182C	0x4000408F  	#1083129856
0x1830	0x01B02000  	_encoder_timer_period_ms+0
; end of _init_input_capture
__UnsignedIntegralToLongDouble:
;__Lib_MathDouble.c, 295 :: 		
0x0CCC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 297 :: 		
0x0CCE	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 298 :: 		
0x0CD0	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 299 :: 		
0x0CD2	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 301 :: 		
0x0CD6	0xE00A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 303 :: 		
0x0CD8	0x0001    MOVS	R1, R0
;__Lib_MathDouble.c, 304 :: 		
0x0CDA	0x211F    MOVS	R1, #31
;__Lib_MathDouble.c, 305 :: 		
0x0CDC	0xF5116180  ADDS	R1, R1, #1024
;__Lib_MathDouble.c, 307 :: 		
__me_loop:
0x0CE0	0x1E49    SUBS	R1, R1, #1
;__Lib_MathDouble.c, 308 :: 		
0x0CE2	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 311 :: 		
0x0CE4	0xD3FC    BCC	__me_loop
;__Lib_MathDouble.c, 313 :: 		
0x0CE6	0x0509    LSLS	R1, R1, #20
;__Lib_MathDouble.c, 314 :: 		
0x0CE8	0xEA413110  ORR	R1, R1, R0, LSR #12
;__Lib_MathDouble.c, 315 :: 		
0x0CEC	0x0500    LSLS	R0, R0, #20
;__Lib_MathDouble.c, 316 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 319 :: 		
L_end__UnsignedIntegralToLongDouble:
0x0CEE	0xB001    ADD	SP, SP, #4
0x0CF0	0x4770    BX	LR
; end of __UnsignedIntegralToLongDouble
__Div_DP:
;__Lib_MathDouble.c, 1385 :: 		
0x0E7C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1387 :: 		
0x0E7E	0xE92D41FC  PUSH	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1389 :: 		
0x0E82	0xEA910803  EORS	R8, R1, R3, LSL #0
;__Lib_MathDouble.c, 1390 :: 		
0x0E86	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1391 :: 		
0x0E88	0xF04F4800  MOVMI	R8, #-2147483648
;__Lib_MathDouble.c, 1392 :: 		
0x0E8C	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 1394 :: 		
0x0E90	0xEA4F3503  LSL	R5, R3, #12
;__Lib_MathDouble.c, 1395 :: 		
0x0E94	0xEA4F3515  LSR	R5, R5, #12
;__Lib_MathDouble.c, 1396 :: 		
0x0E98	0x0056    LSLS	R6, R2, #1
;__Lib_MathDouble.c, 1397 :: 		
0x0E9A	0x416D    ADCS	R5, R5
;__Lib_MathDouble.c, 1398 :: 		
0x0E9C	0xEA4F0743  LSL	R7, R3, #1
;__Lib_MathDouble.c, 1399 :: 		
0x0EA0	0xEA5F5757  LSRS	R7, R7, #21
;__Lib_MathDouble.c, 1402 :: 		
0x0EA4	0xBF1C    ITT	NE
;__Lib_MathDouble.c, 1403 :: 		
0x0EA6	0xF4451500  ORRNE	R5, R5, #2097152
;__Lib_MathDouble.c, 1404 :: 		
0x0EAA	0xE008    BNE	__me_jump
;__Lib_MathDouble.c, 1405 :: 		
0x0EAC	0xF2400100  MOVW	R1, #0
;__Lib_MathDouble.c, 1406 :: 		
0x0EB0	0xF6C771F0  MOVT	R1, #32752
;__Lib_MathDouble.c, 1407 :: 		
0x0EB4	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1408 :: 		
0x0EB8	0xF04F0000  MOV	R0, #0
;__Lib_MathDouble.c, 1410 :: 		
0x0EBC	0xE07F    B	__me_lab_end
;__Lib_MathDouble.c, 1412 :: 		
__me_jump:
;__Lib_MathDouble.c, 1413 :: 		
0x0EBE	0xF44F6EE0  MOV	LR, #1792
;__Lib_MathDouble.c, 1414 :: 		
0x0EC2	0xF11E0EFF  ADDS	LR, LR, #255
;__Lib_MathDouble.c, 1415 :: 		
0x0EC6	0x4577    CMP	R7, LR
;__Lib_MathDouble.c, 1416 :: 		
0x0EC8	0xD070    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1418 :: 		
0x0ECA	0xEA4F3301  LSL	R3, R1, #12
;__Lib_MathDouble.c, 1419 :: 		
0x0ECE	0xEA4F3313  LSR	R3, R3, #12
;__Lib_MathDouble.c, 1420 :: 		
0x0ED2	0x0042    LSLS	R2, R0, #1
;__Lib_MathDouble.c, 1421 :: 		
0x0ED4	0x415B    ADCS	R3, R3
;__Lib_MathDouble.c, 1422 :: 		
0x0ED6	0xEA4F0441  LSL	R4, R1, #1
;__Lib_MathDouble.c, 1423 :: 		
0x0EDA	0x0D64    LSRS	R4, R4, #21
;__Lib_MathDouble.c, 1424 :: 		
0x0EDC	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1425 :: 		
0x0EDE	0xF4431300  ORRNE	R3, R3, #2097152
;__Lib_MathDouble.c, 1426 :: 		
0x0EE2	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1427 :: 		
0x0EE6	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1429 :: 		
0x0EEA	0xE068    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1431 :: 		
0x0EEC	0x4574    CMP	R4, LR
;__Lib_MathDouble.c, 1432 :: 		
0x0EEE	0xD05D    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1434 :: 		
0x0EF0	0x1BE4    SUBS	R4, R4, R7
;__Lib_MathDouble.c, 1437 :: 		
0x0EF2	0x2100    MOVS	R1, #0
;__Lib_MathDouble.c, 1438 :: 		
0x0EF4	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1439 :: 		
0x0EF6	0xF05F0E36  MOVS	LR, #54
;__Lib_MathDouble.c, 1441 :: 		
__me_fdivb:
0x0EFA	0x42AB    CMP	R3, R5
;__Lib_MathDouble.c, 1442 :: 		
0x0EFC	0xD100    BNE	__me_lab1
;__Lib_MathDouble.c, 1443 :: 		
0x0EFE	0x42B2    CMP	R2, R6
;__Lib_MathDouble.c, 1444 :: 		
__me_lab1:
0x0F00	0xD305    BCC	__me_lab2
;__Lib_MathDouble.c, 1445 :: 		
0x0F02	0x4140    ADCS	R0, R0
;__Lib_MathDouble.c, 1446 :: 		
0x0F04	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1447 :: 		
0x0F06	0x1B92    SUBS	R2, R2, R6
;__Lib_MathDouble.c, 1448 :: 		
0x0F08	0xEB630305  SBC	R3, R3, R5, LSL #0
;__Lib_MathDouble.c, 1449 :: 		
0x0F0C	0xE001    B	__me_lab3
;__Lib_MathDouble.c, 1450 :: 		
__me_lab2:
0x0F0E	0x4140    ADCS	R0, R0
;__Lib_MathDouble.c, 1451 :: 		
0x0F10	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1452 :: 		
__me_lab3:
0x0F12	0xF1BE0E01  SUBS	LR, LR, #1
;__Lib_MathDouble.c, 1453 :: 		
0x0F16	0xD005    BEQ	__me_fdive
;__Lib_MathDouble.c, 1454 :: 		
0x0F18	0xEA530702  ORRS	R7, R3, R2, LSL #0
;__Lib_MathDouble.c, 1455 :: 		
0x0F1C	0xD002    BEQ	__me_fdive
;__Lib_MathDouble.c, 1456 :: 		
0x0F1E	0x0052    LSLS	R2, R2, #1
;__Lib_MathDouble.c, 1457 :: 		
0x0F20	0x415B    ADCS	R3, R3
;__Lib_MathDouble.c, 1458 :: 		
0x0F22	0xE7EA    B	__me_fdivb
;__Lib_MathDouble.c, 1460 :: 		
__me_fdive:
0x0F24	0xF1BE0F20  CMP	LR, #32
;__Lib_MathDouble.c, 1461 :: 		
0x0F28	0xD209    BCS	__me_low
;__Lib_MathDouble.c, 1462 :: 		
0x0F2A	0xF1BE0F16  CMP	LR, #22
;__Lib_MathDouble.c, 1463 :: 		
0x0F2E	0xD30C    BCC	__me_high
;__Lib_MathDouble.c, 1465 :: 		
__me_mid:
0x0F30	0xF1CE0720  RSB	R7, LR, #32
;__Lib_MathDouble.c, 1466 :: 		
0x0F34	0xFA20F107  LSR	R1, R0, R7
;__Lib_MathDouble.c, 1467 :: 		
0x0F38	0xFA00F00E  LSL	R0, R0, LR
;__Lib_MathDouble.c, 1468 :: 		
0x0F3C	0xE00F    B	__me_cont
;__Lib_MathDouble.c, 1470 :: 		
__me_low:
0x0F3E	0xF1AE0E20  SUB	LR, LR, #32
;__Lib_MathDouble.c, 1471 :: 		
0x0F42	0xFA00F10E  LSL	R1, R0, LR
;__Lib_MathDouble.c, 1472 :: 		
0x0F46	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1473 :: 		
0x0F48	0xE009    B	__me_cont
;__Lib_MathDouble.c, 1475 :: 		
__me_high:
0x0F4A	0xFA01F10E  LSL	R1, R1, LR
;__Lib_MathDouble.c, 1476 :: 		
0x0F4E	0xF1CE0720  RSB	R7, LR, #32
;__Lib_MathDouble.c, 1477 :: 		
0x0F52	0xFA20F707  LSR	R7, R0, R7
;__Lib_MathDouble.c, 1478 :: 		
0x0F56	0xEA410107  ORR	R1, R1, R7, LSL #0
;__Lib_MathDouble.c, 1479 :: 		
0x0F5A	0xFA00F00E  LSL	R0, R0, LR
;__Lib_MathDouble.c, 1481 :: 		
__me_cont:
0x0F5E	0xF4111F00  TST	R1, #2097152
;__Lib_MathDouble.c, 1482 :: 		
0x0F62	0xD102    BNE	__me_lab4
;__Lib_MathDouble.c, 1483 :: 		
0x0F64	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1484 :: 		
0x0F66	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1485 :: 		
0x0F68	0x1E64    SUBS	R4, R4, #1
;__Lib_MathDouble.c, 1487 :: 		
__me_lab4:
0x0F6A	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 1488 :: 		
0x0F6C	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1489 :: 		
0x0F70	0xF4110F80  TST	R1, #4194304
;__Lib_MathDouble.c, 1490 :: 		
0x0F74	0xBF1A    ITTE	NE
;__Lib_MathDouble.c, 1491 :: 		
0x0F76	0x1C64    ADDNE	R4, R4, #1
;__Lib_MathDouble.c, 1492 :: 		
0x0F78	0xF4210180  BICNE	R1, R1, #4194304
;__Lib_MathDouble.c, 1493 :: 		
0x0F7C	0xF4211100  BICEQ	R1, R1, #2097152
;__Lib_MathDouble.c, 1495 :: 		
0x0F80	0xF44F7740  MOV	R7, #768
;__Lib_MathDouble.c, 1496 :: 		
0x0F84	0x37FF    ADDS	R7, #255
;__Lib_MathDouble.c, 1497 :: 		
0x0F86	0x19E4    ADDS	R4, R4, R7
;__Lib_MathDouble.c, 1498 :: 		
0x0F88	0xBFDE    ITTT	LE
;__Lib_MathDouble.c, 1499 :: 		
0x0F8A	0xF04F0100  MOVLE	R1, #0
;__Lib_MathDouble.c, 1500 :: 		
0x0F8E	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 1502 :: 		
0x0F92	0xE014    BLE	__me_lab_end
;__Lib_MathDouble.c, 1504 :: 		
0x0F94	0xF5076780  ADD	R7, R7, #1024
;__Lib_MathDouble.c, 1505 :: 		
0x0F98	0x42BC    CMP	R4, R7
;__Lib_MathDouble.c, 1506 :: 		
0x0F9A	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 1508 :: 		
0x0F9C	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 1509 :: 		
0x0F9E	0xEA4F0030  RRX	R0, R0
;__Lib_MathDouble.c, 1510 :: 		
0x0FA2	0xEA415104  ORR	R1, R1, R4, LSL #20
;__Lib_MathDouble.c, 1511 :: 		
0x0FA6	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1514 :: 		
0x0FAA	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 1516 :: 		
__me_ovfl:
0x0FAC	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1517 :: 		
0x0FAE	0x21FF    MOVS	R1, #255
;__Lib_MathDouble.c, 1518 :: 		
0x0FB0	0xEA4F01C1  LSL	R1, R1, #3
;__Lib_MathDouble.c, 1519 :: 		
0x0FB4	0x1DC9    ADDS	R1, R1, #7
;__Lib_MathDouble.c, 1520 :: 		
0x0FB6	0xEA4F5101  LSL	R1, R1, #20
;__Lib_MathDouble.c, 1521 :: 		
0x0FBA	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1522 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 1523 :: 		
0x0FBE	0xE8BD41FC  POP	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1525 :: 		
L_end__Div_DP:
0x0FC2	0xB001    ADD	SP, SP, #4
0x0FC4	0x4770    BX	LR
; end of __Div_DP
_calc_finger_state:
;Input Capture Complete 5ch.c, 571 :: 		void calc_finger_state( struct finger *fngr) {
; fngr start address is: 0 (R0)
0x13B0	0xB083    SUB	SP, SP, #12
0x13B2	0xF8CDE000  STR	LR, [SP, #0]
0x13B6	0x4681    MOV	R9, R0
; fngr end address is: 0 (R0)
; fngr start address is: 36 (R9)
;Input Capture Complete 5ch.c, 574 :: 		fngr->enc_overflow_delta = (unsigned long) fngr->enc_overflow_end - fngr->enc_overflow_start;
0x13B8	0xF1090338  ADD	R3, R9, #56
0x13BC	0xF1090134  ADD	R1, R9, #52
0x13C0	0x680A    LDR	R2, [R1, #0]
0x13C2	0xF1090130  ADD	R1, R9, #48
0x13C6	0x6809    LDR	R1, [R1, #0]
0x13C8	0x1A51    SUB	R1, R2, R1
0x13CA	0x6019    STR	R1, [R3, #0]
;Input Capture Complete 5ch.c, 577 :: 		fngr->enc_overflow_ticks = (unsigned long) fngr->enc_overflow_delta * (ENCODER_TIM_RELOAD - 3);
0x13CC	0xF109033C  ADD	R3, R9, #60
0x13D0	0xF1090138  ADD	R1, R9, #56
0x13D4	0x680A    LDR	R2, [R1, #0]
0x13D6	0x4972    LDR	R1, [PC, #456]
0x13D8	0x6809    LDR	R1, [R1, #0]
0x13DA	0x1EC9    SUBS	R1, R1, #3
0x13DC	0x4351    MULS	R1, R2, R1
0x13DE	0x6019    STR	R1, [R3, #0]
;Input Capture Complete 5ch.c, 580 :: 		fngr->enc_delta_ticks = (unsigned long) fngr->enc_end_time - fngr->enc_start_time;
0x13E0	0xF109032C  ADD	R3, R9, #44
0x13E4	0xF1090128  ADD	R1, R9, #40
0x13E8	0x680A    LDR	R2, [R1, #0]
0x13EA	0xF1090124  ADD	R1, R9, #36
0x13EE	0x6809    LDR	R1, [R1, #0]
0x13F0	0x1A51    SUB	R1, R2, R1
0x13F2	0x6019    STR	R1, [R3, #0]
;Input Capture Complete 5ch.c, 583 :: 		fngr->enc_total_ticks = (unsigned long) fngr->enc_overflow_ticks + fngr->enc_delta_ticks;
0x13F4	0xF1090340  ADD	R3, R9, #64
0x13F8	0xF109013C  ADD	R1, R9, #60
0x13FC	0x680A    LDR	R2, [R1, #0]
0x13FE	0xF109012C  ADD	R1, R9, #44
0x1402	0x6809    LDR	R1, [R1, #0]
0x1404	0x1851    ADDS	R1, R2, R1
0x1406	0x6019    STR	R1, [R3, #0]
;Input Capture Complete 5ch.c, 586 :: 		fngr->input_sig_period = (long double) fngr->enc_total_ticks * encoder_timer_period_ms;
0x1408	0xF1090148  ADD	R1, R9, #72
0x140C	0x9101    STR	R1, [SP, #4]
0x140E	0xF1090140  ADD	R1, R9, #64
0x1412	0x6809    LDR	R1, [R1, #0]
0x1414	0x4608    MOV	R0, R1
0x1416	0xF7FFFC59  BL	__UnsignedIntegralToLongDouble+0
0x141A	0x4A62    LDR	R2, [PC, #392]
0x141C	0xED120B00  VLDR.64	D0, [R2, #0]
0x1420	0xEE102A10  VMOV	R2, S0
0x1424	0xEE103A90  VMOV	R3, S1
0x1428	0xF7FFFDCE  BL	__Mul_DP+0
0x142C	0x9A01    LDR	R2, [SP, #4]
0x142E	0xE9C20100  STRD	R0, R1, [R2, #0]
;Input Capture Complete 5ch.c, 589 :: 		fngr->input_sig_frequency = (unsigned long) 1000.0 / fngr->input_sig_period;
0x1432	0xF1090144  ADD	R1, R9, #68
0x1436	0x9102    STR	R1, [SP, #8]
0x1438	0xF1090148  ADD	R1, R9, #72
0x143C	0x9101    STR	R1, [SP, #4]
0x143E	0xF44F717A  MOV	R1, #1000
0x1442	0xEE001A10  VMOV	S0, R1
0x1446	0xEE100A10  VMOV	R0, S0
0x144A	0xF7FFFC3F  BL	__UnsignedIntegralToLongDouble+0
0x144E	0x9A01    LDR	R2, [SP, #4]
0x1450	0xE9D22300  LDRD	R2, R3, [R2, #0]
0x1454	0xF7FFFD12  BL	__Div_DP+0
0x1458	0xF7FFFCE4  BL	__LongDoubleToUnsignedIntegral+0
0x145C	0x9902    LDR	R1, [SP, #8]
0x145E	0x6008    STR	R0, [R1, #0]
;Input Capture Complete 5ch.c, 590 :: 		if (fngr->input_sig_frequency > 20000.0)                                    // NEW: Handles startup error
0x1460	0xF1090144  ADD	R1, R9, #68
0x1464	0x6809    LDR	R1, [R1, #0]
0x1466	0xEE001A90  VMOV	S1, R1
0x146A	0xEEF80A60  VCVT.F32.U32	S1, S1
0x146E	0x494E    LDR	R1, [PC, #312]
0x1470	0xEE001A10  VMOV	S0, R1
0x1474	0xEEF40AC0  VCMPE.F32	S1, S0
0x1478	0xEEF1FA10  VMRS	APSR_nzcv, FPSCR
0x147C	0xDD03    BLE	L_calc_finger_state32
;Input Capture Complete 5ch.c, 591 :: 		fngr->input_sig_frequency = 0;
0x147E	0xF1090244  ADD	R2, R9, #68
0x1482	0x2100    MOVS	R1, #0
0x1484	0x6011    STR	R1, [R2, #0]
L_calc_finger_state32:
;Input Capture Complete 5ch.c, 594 :: 		if (fngr->enc_chan_b == 1) {                                                // Clockwise
0x1486	0xF1090120  ADD	R1, R9, #32
0x148A	0x8809    LDRH	R1, [R1, #0]
0x148C	0x2901    CMP	R1, #1
0x148E	0xD112    BNE	L_calc_finger_state33
;Input Capture Complete 5ch.c, 595 :: 		fngr->direction_actual = CONTRACT;
0x1490	0xF1090218  ADD	R2, R9, #24
0x1494	0x4945    LDR	R1, [PC, #276]
0x1496	0xF9B11000  LDRSH	R1, [R1, #0]
0x149A	0x8011    STRH	R1, [R2, #0]
;Input Capture Complete 5ch.c, 596 :: 		fngr->position_actual += (fngr->position_temp / NORMALIZATION_CONSTANT);                       // Calculate new position
0x149C	0xF1090314  ADD	R3, R9, #20
0x14A0	0xF1090110  ADD	R1, R9, #16
0x14A4	0x680A    LDR	R2, [R1, #0]
0x14A6	0x4942    LDR	R1, [PC, #264]
0x14A8	0x8809    LDRH	R1, [R1, #0]
0x14AA	0xFB92F2F1  SDIV	R2, R2, R1
0x14AE	0x6819    LDR	R1, [R3, #0]
0x14B0	0x1889    ADDS	R1, R1, R2
0x14B2	0x6019    STR	R1, [R3, #0]
;Input Capture Complete 5ch.c, 597 :: 		}
0x14B4	0xE01A    B	L_calc_finger_state34
L_calc_finger_state33:
;Input Capture Complete 5ch.c, 599 :: 		else if (fngr->enc_chan_b == 0) {                                           // Counter Clockwise
0x14B6	0xF1090120  ADD	R1, R9, #32
0x14BA	0x8809    LDRH	R1, [R1, #0]
0x14BC	0xB991    CBNZ	R1, L_calc_finger_state35
;Input Capture Complete 5ch.c, 600 :: 		fngr->direction_actual = EXTEND;
0x14BE	0xF1090218  ADD	R2, R9, #24
0x14C2	0x493C    LDR	R1, [PC, #240]
0x14C4	0xF9B11000  LDRSH	R1, [R1, #0]
0x14C8	0x8011    STRH	R1, [R2, #0]
;Input Capture Complete 5ch.c, 601 :: 		fngr->position_actual -= (fngr->position_temp / NORMALIZATION_CONSTANT);                       // Calculate new position
0x14CA	0xF1090314  ADD	R3, R9, #20
0x14CE	0xF1090110  ADD	R1, R9, #16
0x14D2	0x680A    LDR	R2, [R1, #0]
0x14D4	0x4936    LDR	R1, [PC, #216]
0x14D6	0x8809    LDRH	R1, [R1, #0]
0x14D8	0xFB92F2F1  SDIV	R2, R2, R1
0x14DC	0x6819    LDR	R1, [R3, #0]
0x14DE	0x1A89    SUB	R1, R1, R2
0x14E0	0x6019    STR	R1, [R3, #0]
;Input Capture Complete 5ch.c, 602 :: 		}
0x14E2	0xE003    B	L_calc_finger_state36
L_calc_finger_state35:
;Input Capture Complete 5ch.c, 605 :: 		fngr->direction_actual = 7;
0x14E4	0xF1090218  ADD	R2, R9, #24
0x14E8	0x2107    MOVS	R1, #7
0x14EA	0x8011    STRH	R1, [R2, #0]
;Input Capture Complete 5ch.c, 606 :: 		}
L_calc_finger_state36:
L_calc_finger_state34:
;Input Capture Complete 5ch.c, 610 :: 		if(fngr->position_actual >= fngr->FULLY_CONTRACTED) {  // don't run too far!
0x14EC	0xF1090114  ADD	R1, R9, #20
0x14F0	0x680A    LDR	R2, [R1, #0]
0x14F2	0xF109011C  ADD	R1, R9, #28
0x14F6	0x6809    LDR	R1, [R1, #0]
0x14F8	0x428A    CMP	R2, R1
0x14FA	0xD305    BCC	L_calc_finger_state37
;Input Capture Complete 5ch.c, 611 :: 		fngr->direction_desired = EXTEND;
0x14FC	0xF109021A  ADD	R2, R9, #26
0x1500	0x492C    LDR	R1, [PC, #176]
0x1502	0xF9B11000  LDRSH	R1, [R1, #0]
0x1506	0x8011    STRH	R1, [R2, #0]
;Input Capture Complete 5ch.c, 612 :: 		}
L_calc_finger_state37:
;Input Capture Complete 5ch.c, 614 :: 		if(fngr->position_actual <= FULLY_EXTENDED) {
0x1508	0xF1090114  ADD	R1, R9, #20
0x150C	0x680A    LDR	R2, [R1, #0]
0x150E	0x492A    LDR	R1, [PC, #168]
0x1510	0x6809    LDR	R1, [R1, #0]
0x1512	0x428A    CMP	R2, R1
0x1514	0xDC05    BGT	L_calc_finger_state38
;Input Capture Complete 5ch.c, 615 :: 		fngr->direction_desired = CONTRACT;
0x1516	0xF109021A  ADD	R2, R9, #26
0x151A	0x4924    LDR	R1, [PC, #144]
0x151C	0xF9B11000  LDRSH	R1, [R1, #0]
0x1520	0x8011    STRH	R1, [R2, #0]
;Input Capture Complete 5ch.c, 616 :: 		}
L_calc_finger_state38:
;Input Capture Complete 5ch.c, 619 :: 		if(strcmp(fngr->name, "fngr_pointer") == 0)    {
0x1522	0x4926    LDR	R1, [PC, #152]
0x1524	0x4648    MOV	R0, R9
0x1526	0xF7FFFC0D  BL	_strcmp+0
0x152A	0xB928    CBNZ	R0, L_calc_finger_state39
;Input Capture Complete 5ch.c, 620 :: 		POINTER_DIRECTION = fngr->direction_desired;
0x152C	0xF109011A  ADD	R1, R9, #26
0x1530	0x880A    LDRH	R2, [R1, #0]
0x1532	0x4923    LDR	R1, [PC, #140]
0x1534	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 621 :: 		}
0x1536	0xE02A    B	L_calc_finger_state40
L_calc_finger_state39:
;Input Capture Complete 5ch.c, 622 :: 		else if(strcmp(fngr->name, "fngr_middle") == 0)   {
0x1538	0x4922    LDR	R1, [PC, #136]
0x153A	0x4648    MOV	R0, R9
0x153C	0xF7FFFC02  BL	_strcmp+0
0x1540	0xB928    CBNZ	R0, L_calc_finger_state41
;Input Capture Complete 5ch.c, 623 :: 		MIDDLE_DIRECTION = fngr->direction_desired;
0x1542	0xF109011A  ADD	R1, R9, #26
0x1546	0x880A    LDRH	R2, [R1, #0]
0x1548	0x491F    LDR	R1, [PC, #124]
0x154A	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 624 :: 		}
0x154C	0xE01F    B	L_calc_finger_state42
L_calc_finger_state41:
;Input Capture Complete 5ch.c, 625 :: 		else if(strcmp(fngr->name, "fngr_ring") == 0)   {
0x154E	0x491F    LDR	R1, [PC, #124]
0x1550	0x4648    MOV	R0, R9
0x1552	0xF7FFFBF7  BL	_strcmp+0
0x1556	0xB928    CBNZ	R0, L_calc_finger_state43
;Input Capture Complete 5ch.c, 626 :: 		RING_DIRECTION = fngr->direction_desired;
0x1558	0xF109011A  ADD	R1, R9, #26
0x155C	0x880A    LDRH	R2, [R1, #0]
0x155E	0x491C    LDR	R1, [PC, #112]
0x1560	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 627 :: 		}
0x1562	0xE014    B	L_calc_finger_state44
L_calc_finger_state43:
;Input Capture Complete 5ch.c, 628 :: 		else if(strcmp(fngr->name, "fngr_pinky") == 0)   {
0x1564	0x491B    LDR	R1, [PC, #108]
0x1566	0x4648    MOV	R0, R9
0x1568	0xF7FFFBEC  BL	_strcmp+0
0x156C	0xB928    CBNZ	R0, L_calc_finger_state45
;Input Capture Complete 5ch.c, 629 :: 		PINKY_DIRECTION = fngr->direction_desired;
0x156E	0xF109011A  ADD	R1, R9, #26
0x1572	0x880A    LDRH	R2, [R1, #0]
0x1574	0x4918    LDR	R1, [PC, #96]
0x1576	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 630 :: 		}
0x1578	0xE009    B	L_calc_finger_state46
L_calc_finger_state45:
;Input Capture Complete 5ch.c, 631 :: 		else if(strcmp(fngr->name, "fngr_thumb") == 0) {
0x157A	0x4918    LDR	R1, [PC, #96]
0x157C	0x4648    MOV	R0, R9
0x157E	0xF7FFFBE1  BL	_strcmp+0
0x1582	0xB920    CBNZ	R0, L_calc_finger_state47
;Input Capture Complete 5ch.c, 632 :: 		THUMB_DIRECTION = fngr->direction_desired;
0x1584	0xF109011A  ADD	R1, R9, #26
0x1588	0x880A    LDRH	R2, [R1, #0]
0x158A	0x4915    LDR	R1, [PC, #84]
0x158C	0x600A    STR	R2, [R1, #0]
;Input Capture Complete 5ch.c, 633 :: 		}
L_calc_finger_state47:
L_calc_finger_state46:
L_calc_finger_state44:
L_calc_finger_state42:
L_calc_finger_state40:
;Input Capture Complete 5ch.c, 635 :: 		fngr->position_temp = 0;
0x158E	0xF1090210  ADD	R2, R9, #16
; fngr end address is: 36 (R9)
0x1592	0x2100    MOVS	R1, #0
0x1594	0x6011    STR	R1, [R2, #0]
;Input Capture Complete 5ch.c, 636 :: 		}
L_end_calc_finger_state:
0x1596	0xF8DDE000  LDR	LR, [SP, #0]
0x159A	0xB003    ADD	SP, SP, #12
0x159C	0x4770    BX	LR
0x159E	0xBF00    NOP
0x15A0	0x00402000  	_ENCODER_TIM_RELOAD+0
0x15A4	0x01B02000  	_encoder_timer_period_ms+0
0x15A8	0x4000469C  	#1184645120
0x15AC	0x00002000  	_CONTRACT+0
0x15B0	0x004A2000  	_NORMALIZATION_CONSTANT+0
0x15B4	0x004C2000  	_EXTEND+0
0x15B8	0x00502000  	_FULLY_EXTENDED+0
0x15BC	0x00542000  	?lstr15_Input_32Capture_32Complete_325ch+0
0x15C0	0x02A84242  	GPIOE_ODR+0
0x15C4	0x00612000  	?lstr16_Input_32Capture_32Complete_325ch+0
0x15C8	0x82A84240  	GPIOB_ODR+0
0x15CC	0x006D2000  	?lstr17_Input_32Capture_32Complete_325ch+0
0x15D0	0x82B44240  	GPIOB_ODR+0
0x15D4	0x00772000  	?lstr18_Input_32Capture_32Complete_325ch+0
0x15D8	0x82A04241  	GPIOD_ODR+0
0x15DC	0x00822000  	?lstr19_Input_32Capture_32Complete_325ch+0
0x15E0	0x02B04241  	GPIOC_ODR+0
; end of _calc_finger_state
__Mul_DP:
;__Lib_MathDouble.c, 1275 :: 		
0x0FC8	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1277 :: 		
0x0FCA	0xE92D41FC  PUSH	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1279 :: 		
0x0FCE	0xEA910803  EORS	R8, R1, R3, LSL #0
;__Lib_MathDouble.c, 1280 :: 		
0x0FD2	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1281 :: 		
0x0FD4	0xF04F4800  MOVMI	R8, #-2147483648
;__Lib_MathDouble.c, 1282 :: 		
0x0FD8	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 1284 :: 		
0x0FDC	0xEA4F25C3  LSL	R5, R3, #11
;__Lib_MathDouble.c, 1285 :: 		
0x0FE0	0xEA455552  ORR	R5, R5, R2, LSR #21
;__Lib_MathDouble.c, 1286 :: 		
0x0FE4	0xEA4F26C2  LSL	R6, R2, #11
;__Lib_MathDouble.c, 1287 :: 		
0x0FE8	0xEA4F0743  LSL	R7, R3, #1
;__Lib_MathDouble.c, 1288 :: 		
0x0FEC	0x0D7F    LSRS	R7, R7, #21
;__Lib_MathDouble.c, 1289 :: 		
0x0FEE	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1290 :: 		
0x0FF0	0xF0454500  ORRNE	R5, R5, #-2147483648
;__Lib_MathDouble.c, 1291 :: 		
0x0FF4	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1292 :: 		
0x0FF8	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1294 :: 		
0x0FFC	0xE063    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1296 :: 		
0x0FFE	0xF45F6EE0  MOVS	LR, #1792
;__Lib_MathDouble.c, 1297 :: 		
0x1002	0xF11E0EFF  ADDS	LR, LR, #255
;__Lib_MathDouble.c, 1298 :: 		
0x1006	0x4577    CMP	R7, LR
;__Lib_MathDouble.c, 1299 :: 		
0x1008	0xD056    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1301 :: 		
0x100A	0xEA4F23C1  LSL	R3, R1, #11
;__Lib_MathDouble.c, 1302 :: 		
0x100E	0xEA435350  ORR	R3, R3, R0, LSR #21
;__Lib_MathDouble.c, 1303 :: 		
0x1012	0xEA4F22C0  LSL	R2, R0, #11
;__Lib_MathDouble.c, 1304 :: 		
0x1016	0xEA4F0441  LSL	R4, R1, #1
;__Lib_MathDouble.c, 1305 :: 		
0x101A	0x0D64    LSRS	R4, R4, #21
;__Lib_MathDouble.c, 1306 :: 		
0x101C	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1307 :: 		
0x101E	0xF0434300  ORRNE	R3, R3, #-2147483648
;__Lib_MathDouble.c, 1308 :: 		
0x1022	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1309 :: 		
0x1026	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1311 :: 		
0x102A	0xE04C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1313 :: 		
0x102C	0x4574    CMP	R4, LR
;__Lib_MathDouble.c, 1314 :: 		
0x102E	0xD043    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1316 :: 		
0x1030	0x19E4    ADDS	R4, R4, R7
;__Lib_MathDouble.c, 1319 :: 		
0x1032	0xFBA30105  UMULL	R0, R1, R3, R5
;__Lib_MathDouble.c, 1320 :: 		
0x1036	0xFBA3E706  UMULL	LR, R7, R3, R6
;__Lib_MathDouble.c, 1321 :: 		
0x103A	0xFBA26306  UMULL	R6, R3, R2, R6
;__Lib_MathDouble.c, 1322 :: 		
0x103E	0xEB1E0E03  ADDS	LR, LR, R3, LSL #0
;__Lib_MathDouble.c, 1323 :: 		
0x1042	0xF1570700  ADCS	R7, R7, #0
;__Lib_MathDouble.c, 1324 :: 		
0x1046	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1325 :: 		
0x104A	0xFBA26305  UMULL	R6, R3, R2, R5
;__Lib_MathDouble.c, 1326 :: 		
0x104E	0xEB1E0E06  ADDS	LR, LR, R6, LSL #0
;__Lib_MathDouble.c, 1327 :: 		
0x1052	0xF1570700  ADCS	R7, R7, #0
;__Lib_MathDouble.c, 1328 :: 		
0x1056	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1329 :: 		
0x105A	0x18FF    ADDS	R7, R7, R3
;__Lib_MathDouble.c, 1330 :: 		
0x105C	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1331 :: 		
0x1060	0x19C0    ADDS	R0, R0, R7
;__Lib_MathDouble.c, 1332 :: 		
0x1062	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1334 :: 		
0x1066	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1335 :: 		
0x1068	0xF44F6E80  MOVMI	LR, #1024
;__Lib_MathDouble.c, 1336 :: 		
0x106C	0xF44F7E00  MOVPL	LR, #512
;__Lib_MathDouble.c, 1338 :: 		
0x1070	0xEB10000E  ADDS	R0, R0, LR, LSL #0
;__Lib_MathDouble.c, 1339 :: 		
0x1074	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1341 :: 		
0x1078	0xBF48    IT	MI
;__Lib_MathDouble.c, 1342 :: 		
0x107A	0x1C64    ADDMI	R4, R4, #1
;__Lib_MathDouble.c, 1343 :: 		
0x107C	0xD401    BMI	__me_lab1
;__Lib_MathDouble.c, 1344 :: 		
0x107E	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1345 :: 		
0x1080	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1347 :: 		
__me_lab1:
0x1082	0xF45F7740  MOVS	R7, #768
;__Lib_MathDouble.c, 1348 :: 		
0x1086	0x37FF    ADDS	R7, #255
;__Lib_MathDouble.c, 1349 :: 		
0x1088	0x1BE4    SUBS	R4, R4, R7
;__Lib_MathDouble.c, 1350 :: 		
0x108A	0xBFDE    ITTT	LE
;__Lib_MathDouble.c, 1351 :: 		
0x108C	0xF04F0100  MOVLE	R1, #0
;__Lib_MathDouble.c, 1352 :: 		
0x1090	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 1354 :: 		
0x1094	0xE017    BLE	__me_lab_end
;__Lib_MathDouble.c, 1356 :: 		
0x1096	0xF5176780  ADDS	R7, R7, #1024
;__Lib_MathDouble.c, 1357 :: 		
0x109A	0x42BC    CMP	R4, R7
;__Lib_MathDouble.c, 1358 :: 		
0x109C	0xD20C    BCS	__me_ovfl
;__Lib_MathDouble.c, 1360 :: 		
0x109E	0xEA4F20D0  LSR	R0, R0, #11
;__Lib_MathDouble.c, 1361 :: 		
0x10A2	0xEA405041  ORR	R0, R0, R1, LSL #21
;__Lib_MathDouble.c, 1362 :: 		
0x10A6	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 1363 :: 		
0x10AA	0xEA4F3111  LSR	R1, R1, #12
;__Lib_MathDouble.c, 1364 :: 		
0x10AE	0xEA415104  ORR	R1, R1, R4, LSL #20
;__Lib_MathDouble.c, 1365 :: 		
0x10B2	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1368 :: 		
0x10B6	0xE006    B	__me_lab_end
;__Lib_MathDouble.c, 1371 :: 		
__me_ovfl:
0x10B8	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1372 :: 		
0x10BA	0x21FF    MOVS	R1, #255
;__Lib_MathDouble.c, 1373 :: 		
0x10BC	0x00C9    LSLS	R1, R1, #3
;__Lib_MathDouble.c, 1374 :: 		
0x10BE	0x1DC9    ADDS	R1, R1, #7
;__Lib_MathDouble.c, 1375 :: 		
0x10C0	0x0509    LSLS	R1, R1, #20
;__Lib_MathDouble.c, 1376 :: 		
0x10C2	0xEA510108  ORRS	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1377 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 1378 :: 		
0x10C6	0xE8BD41FC  POP	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1380 :: 		
L_end__Mul_DP:
0x10CA	0xB001    ADD	SP, SP, #4
0x10CC	0x4770    BX	LR
; end of __Mul_DP
__LongDoubleToUnsignedIntegral:
;__Lib_MathDouble.c, 134 :: 		
0x0E24	0xB081    SUB	SP, SP, #4
0x0E26	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MathDouble.c, 136 :: 		
0x0E2A	0xB504    PUSH	(R2, R14)
;__Lib_MathDouble.c, 137 :: 		
0x0E2C	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 138 :: 		
0x0E2E	0xD502    BPL	__me_pos
;__Lib_MathDouble.c, 142 :: 		
0x0E30	0xF7FFFCAE  BL	__LongDoubleToSignedIntegral+0
;__Lib_MathDouble.c, 143 :: 		
0x0E34	0xE01C    B	__me_endLab
;__Lib_MathDouble.c, 144 :: 		
__me_pos:
;__Lib_MathDouble.c, 147 :: 		
0x0E36	0xEA4F0241  LSL	R2, R1, #1
;__Lib_MathDouble.c, 148 :: 		
0x0E3A	0xEA4F5252  LSR	R2, R2, #21
;__Lib_MathDouble.c, 150 :: 		
0x0E3E	0xF5B27240  SUBS	R2, R2, #768
;__Lib_MathDouble.c, 151 :: 		
0x0E42	0x3AFF    SUBS	R2, #255
;__Lib_MathDouble.c, 152 :: 		
0x0E44	0xBF44    ITT	MI
;__Lib_MathDouble.c, 153 :: 		
0x0E46	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 155 :: 		
0x0E4A	0xE011    BMI	__me_endLab
;__Lib_MathDouble.c, 157 :: 		
0x0E4C	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 158 :: 		
0x0E50	0xD30C    BCC	__me_ovfl
;__Lib_MathDouble.c, 160 :: 		
0x0E52	0xEA4F21C1  LSL	R1, R1, #11
;__Lib_MathDouble.c, 161 :: 		
0x0E56	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 163 :: 		
0x0E5A	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 164 :: 		
0x0E5C	0x2A0B    CMP	R2, #11
;__Lib_MathDouble.c, 165 :: 		
0x0E5E	0xBF3E    ITTT	CC
;__Lib_MathDouble.c, 166 :: 		
0x0E60	0x3215    ADDCC	R2, #21
;__Lib_MathDouble.c, 167 :: 		
0x0E62	0xFA20F202  LSRCC	R2, R0, R2
;__Lib_MathDouble.c, 168 :: 		
0x0E66	0x4311    ORRCC	R1, R2
;__Lib_MathDouble.c, 170 :: 		
0x0E68	0x4608    MOV	R0, R1
;__Lib_MathDouble.c, 173 :: 		
0x0E6A	0xE001    B	__me_endLab
;__Lib_MathDouble.c, 175 :: 		
__me_ovfl:
0x0E6C	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 176 :: 		
0x0E6E	0x1E40    SUBS	R0, R0, #1
;__Lib_MathDouble.c, 178 :: 		
__me_endLab:
;__Lib_MathDouble.c, 179 :: 		
0x0E70	0xE8BD4004  POP	(R2, R14)
;__Lib_MathDouble.c, 181 :: 		
L_end__LongDoubleToUnsignedIntegral:
0x0E74	0xF8DDE000  LDR	LR, [SP, #0]
0x0E78	0xB001    ADD	SP, SP, #4
0x0E7A	0x4770    BX	LR
; end of __LongDoubleToUnsignedIntegral
__LongDoubleToSignedIntegral:
;__Lib_MathDouble.c, 87 :: 		
0x0790	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 89 :: 		
0x0792	0xB50C    PUSH	(R2, R3, R14)
;__Lib_MathDouble.c, 91 :: 		
0x0794	0xEA4F0341  LSL	R3, R1, #1
;__Lib_MathDouble.c, 92 :: 		
0x0798	0xEA4F5353  LSR	R3, R3, #21
;__Lib_MathDouble.c, 94 :: 		
0x079C	0xF5B37340  SUBS	R3, R3, #768
;__Lib_MathDouble.c, 95 :: 		
0x07A0	0x3BFF    SUBS	R3, #255
;__Lib_MathDouble.c, 96 :: 		
0x07A2	0xBF44    ITT	MI
;__Lib_MathDouble.c, 97 :: 		
0x07A4	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 99 :: 		
0x07A8	0xE017    BMI	__me_lab_end
;__Lib_MathDouble.c, 101 :: 		
0x07AA	0xF1D3031F  RSBS	R3, R3, #31
;__Lib_MathDouble.c, 102 :: 		
0x07AE	0xD90F    BLS	__me_ovfl
;__Lib_MathDouble.c, 104 :: 		
0x07B0	0xEA4F22C1  LSL	R2, R1, #11
;__Lib_MathDouble.c, 105 :: 		
0x07B4	0xF0424200  ORR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 107 :: 		
0x07B8	0xFA22F203  LSR	R2, R2, R3
;__Lib_MathDouble.c, 108 :: 		
0x07BC	0x2B0B    CMP	R3, #11
;__Lib_MathDouble.c, 109 :: 		
0x07BE	0xBF3E    ITTT	CC
;__Lib_MathDouble.c, 110 :: 		
0x07C0	0x3315    ADDCC	R3, #21
;__Lib_MathDouble.c, 111 :: 		
0x07C2	0x40D8    LSRCC	R0, R3
;__Lib_MathDouble.c, 112 :: 		
0x07C4	0x4302    ORRCC	R2, R0
;__Lib_MathDouble.c, 114 :: 		
0x07C6	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 115 :: 		
0x07C8	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 116 :: 		
0x07CA	0x4250    RSBMI	R0, R2, #0
;__Lib_MathDouble.c, 117 :: 		
0x07CC	0x4610    MOVPL	R0, R2
;__Lib_MathDouble.c, 120 :: 		
0x07CE	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 122 :: 		
__me_ovfl:
0x07D0	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 123 :: 		
0x07D2	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 124 :: 		
0x07D6	0xBF58    IT	PL
;__Lib_MathDouble.c, 125 :: 		
0x07D8	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 126 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 127 :: 		
0x07DA	0xE8BD400C  POP	(R2, R3, R14)
;__Lib_MathDouble.c, 129 :: 		
L_end__LongDoubleToSignedIntegral:
0x07DE	0xB001    ADD	SP, SP, #4
0x07E0	0x4770    BX	LR
; end of __LongDoubleToSignedIntegral
_print_finger_info:
;Input Capture Complete 5ch.c, 640 :: 		void print_finger_info( struct finger *fngr) {
; fngr start address is: 0 (R0)
0x12CC	0xB089    SUB	SP, SP, #36
0x12CE	0xF8CDE000  STR	LR, [SP, #0]
0x12D2	0x4607    MOV	R7, R0
; fngr end address is: 0 (R0)
; fngr start address is: 28 (R7)
;Input Capture Complete 5ch.c, 647 :: 		UART1_Write_Text("\n\rFinger Name: ");                                      //Print name of current finger to terminal
0x12D4	0x492A    LDR	R1, [PC, #168]
0x12D6	0x4608    MOV	R0, R1
0x12D8	0xF000FB7A  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 648 :: 		UART1_Write_Text(fngr->name);
0x12DC	0x4638    MOV	R0, R7
0x12DE	0xF000FB77  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 649 :: 		UART1_Write_Text("\n\r");
0x12E2	0x4928    LDR	R1, [PC, #160]
0x12E4	0x4608    MOV	R0, R1
0x12E6	0xF000FB73  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 651 :: 		LongWordToStr(fngr->input_sig_frequency, frequency_text);                   // Print input capture signal frequency to terminal
0x12EA	0xAA01    ADD	R2, SP, #4
0x12EC	0xF2070144  ADDW	R1, R7, #68
0x12F0	0x6809    LDR	R1, [R1, #0]
0x12F2	0x4608    MOV	R0, R1
0x12F4	0x4611    MOV	R1, R2
0x12F6	0xF7FFFD39  BL	_LongWordToStr+0
;Input Capture Complete 5ch.c, 652 :: 		UART1_Write_Text("Frequency of incoming signal (Hz): ");
0x12FA	0x4923    LDR	R1, [PC, #140]
0x12FC	0x4608    MOV	R0, R1
0x12FE	0xF000FB67  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 653 :: 		UART1_Write_Text(frequency_text);
0x1302	0xA901    ADD	R1, SP, #4
0x1304	0x4608    MOV	R0, R1
0x1306	0xF000FB63  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 654 :: 		UART1_Write_Text("\n\r");
0x130A	0x4920    LDR	R1, [PC, #128]
0x130C	0x4608    MOV	R0, R1
0x130E	0xF000FB5F  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 657 :: 		UART1_Write_Text("Direction of movement:             ");
0x1312	0x491F    LDR	R1, [PC, #124]
0x1314	0x4608    MOV	R0, R1
0x1316	0xF000FB5B  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 658 :: 		if(fngr->direction_actual == EXTEND)
0x131A	0xF2070118  ADDW	R1, R7, #24
0x131E	0x880A    LDRH	R2, [R1, #0]
0x1320	0x491C    LDR	R1, [PC, #112]
0x1322	0xF9B11000  LDRSH	R1, [R1, #0]
0x1326	0x428A    CMP	R2, R1
0x1328	0xD104    BNE	L_print_finger_info48
;Input Capture Complete 5ch.c, 659 :: 		UART1_Write_Text("EXTEND ");
0x132A	0x491B    LDR	R1, [PC, #108]
0x132C	0x4608    MOV	R0, R1
0x132E	0xF000FB4F  BL	_UART1_Write_Text+0
0x1332	0xE003    B	L_print_finger_info49
L_print_finger_info48:
;Input Capture Complete 5ch.c, 661 :: 		UART1_Write_Text("CONTRACT ");
0x1334	0x4919    LDR	R1, [PC, #100]
0x1336	0x4608    MOV	R0, R1
0x1338	0xF000FB4A  BL	_UART1_Write_Text+0
L_print_finger_info49:
;Input Capture Complete 5ch.c, 663 :: 		UART1_Write_Text("\n\r");
0x133C	0x4918    LDR	R1, [PC, #96]
0x133E	0x4608    MOV	R0, R1
0x1340	0xF000FB46  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 665 :: 		LongToStr(fngr->position_actual, position_text);                            // Print total number of input events (position) to terminal
0x1344	0xF10D0213  ADD	R2, SP, #19
0x1348	0xF2070114  ADDW	R1, R7, #20
; fngr end address is: 28 (R7)
0x134C	0x6809    LDR	R1, [R1, #0]
0x134E	0x4608    MOV	R0, R1
0x1350	0x4611    MOV	R1, R2
0x1352	0xF7FFFD31  BL	_LongToStr+0
;Input Capture Complete 5ch.c, 666 :: 		UART1_Write_Text("Position of finger:                ");
0x1356	0x4913    LDR	R1, [PC, #76]
0x1358	0x4608    MOV	R0, R1
0x135A	0xF000FB39  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 667 :: 		UART1_Write_Text(position_text);
0x135E	0xF10D0113  ADD	R1, SP, #19
0x1362	0x4608    MOV	R0, R1
0x1364	0xF000FB34  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 668 :: 		UART1_Write_Text("\n\n\n\r");
0x1368	0x490F    LDR	R1, [PC, #60]
0x136A	0x4608    MOV	R0, R1
0x136C	0xF000FB30  BL	_UART1_Write_Text+0
;Input Capture Complete 5ch.c, 670 :: 		terminal_print_count = 0;                                                   // Reset counter for terminal printing
0x1370	0x2200    MOVS	R2, #0
0x1372	0x490E    LDR	R1, [PC, #56]
0x1374	0x800A    STRH	R2, [R1, #0]
;Input Capture Complete 5ch.c, 671 :: 		}
L_end_print_finger_info:
0x1376	0xF8DDE000  LDR	LR, [SP, #0]
0x137A	0xB009    ADD	SP, SP, #36
0x137C	0x4770    BX	LR
0x137E	0xBF00    NOP
0x1380	0x01062000  	?lstr20_Input_32Capture_32Complete_325ch+0
0x1384	0x008D2000  	?lstr21_Input_32Capture_32Complete_325ch+0
0x1388	0x01162000  	?lstr22_Input_32Capture_32Complete_325ch+0
0x138C	0x013A2000  	?lstr23_Input_32Capture_32Complete_325ch+0
0x1390	0x013D2000  	?lstr24_Input_32Capture_32Complete_325ch+0
0x1394	0x004C2000  	_EXTEND+0
0x1398	0x01612000  	?lstr25_Input_32Capture_32Complete_325ch+0
0x139C	0x01692000  	?lstr26_Input_32Capture_32Complete_325ch+0
0x13A0	0x01732000  	?lstr27_Input_32Capture_32Complete_325ch+0
0x13A4	0x01762000  	?lstr28_Input_32Capture_32Complete_325ch+0
0x13A8	0x019A2000  	?lstr29_Input_32Capture_32Complete_325ch+0
0x13AC	0x034C2000  	_terminal_print_count+0
; end of _print_finger_info
_LongWordToStr:
;__Lib_Conversions.c, 274 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0D6C	0xB081    SUB	SP, SP, #4
0x0D6E	0x460A    MOV	R2, R1
0x0D70	0x4601    MOV	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 277 :: 		
; len start address is: 0 (R0)
0x0D72	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x0D74	0x460D    MOV	R5, R1
0x0D76	0x4611    MOV	R1, R2
L_LongWordToStr52:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x0D78	0x280A    CMP	R0, #10
0x0D7A	0xD205    BCS	L_LongWordToStr53
;__Lib_Conversions.c, 278 :: 		
0x0D7C	0x180B    ADDS	R3, R1, R0
0x0D7E	0x2220    MOVS	R2, #32
0x0D80	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 277 :: 		
0x0D82	0x1C40    ADDS	R0, R0, #1
0x0D84	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 278 :: 		
0x0D86	0xE7F7    B	L_LongWordToStr52
L_LongWordToStr53:
;__Lib_Conversions.c, 279 :: 		
0x0D88	0x180B    ADDS	R3, R1, R0
0x0D8A	0x2200    MOVS	R2, #0
0x0D8C	0x701A    STRB	R2, [R3, #0]
0x0D8E	0x1E40    SUBS	R0, R0, #1
0x0D90	0xB280    UXTH	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 281 :: 		
L_LongWordToStr55:
;__Lib_Conversions.c, 282 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x0D92	0x180C    ADDS	R4, R1, R0
0x0D94	0x230A    MOVS	R3, #10
0x0D96	0xFBB5F2F3  UDIV	R2, R5, R3
0x0D9A	0xFB035212  MLS	R2, R3, R2, R5
0x0D9E	0x3230    ADDS	R2, #48
0x0DA0	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 283 :: 		
0x0DA2	0x220A    MOVS	R2, #10
0x0DA4	0xFBB5F2F2  UDIV	R2, R5, R2
0x0DA8	0x4615    MOV	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 284 :: 		
0x0DAA	0xB902    CBNZ	R2, L_LongWordToStr57
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 285 :: 		
0x0DAC	0xE002    B	L_LongWordToStr56
L_LongWordToStr57:
;__Lib_Conversions.c, 286 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x0DAE	0x1E40    SUBS	R0, R0, #1
0x0DB0	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 287 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x0DB2	0xE7EE    B	L_LongWordToStr55
L_LongWordToStr56:
;__Lib_Conversions.c, 288 :: 		
L_end_LongWordToStr:
0x0DB4	0xB001    ADD	SP, SP, #4
0x0DB6	0x4770    BX	LR
; end of _LongWordToStr
_LongToStr:
;__Lib_Conversions.c, 305 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0DB8	0xB081    SUB	SP, SP, #4
0x0DBA	0xF8CDE000  STR	LR, [SP, #0]
0x0DBE	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 311 :: 		
; negative start address is: 4 (R1)
0x0DC0	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 312 :: 		
; inword start address is: 12 (R3)
0x0DC2	0x4603    MOV	R3, R0
;__Lib_Conversions.c, 313 :: 		
0x0DC4	0x2800    CMP	R0, #0
0x0DC6	0xDA04    BGE	L__LongToStr166
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 314 :: 		
0x0DC8	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 315 :: 		
0x0DCA	0x4240    RSBS	R0, R0, #0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x0DCC	0x4600    MOV	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x0DCE	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 316 :: 		
0x0DD0	0xE001    B	L_LongToStr63
L__LongToStr166:
;__Lib_Conversions.c, 313 :: 		
0x0DD2	0x4618    MOV	R0, R3
0x0DD4	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 316 :: 		
L_LongToStr63:
;__Lib_Conversions.c, 317 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x0DD6	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x0DD8	0xF7FFFFC8  BL	_LongWordToStr+0
;__Lib_Conversions.c, 319 :: 		
; i start address is: 4 (R1)
0x0DDC	0x210B    MOVS	R1, #11
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x0DDE	0x4634    MOV	R4, R6
0x0DE0	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 320 :: 		
L_LongToStr64:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x0DE2	0x2900    CMP	R1, #0
0x0DE4	0xD908    BLS	L_LongToStr65
;__Lib_Conversions.c, 321 :: 		
0x0DE6	0x1863    ADDS	R3, R4, R1
0x0DE8	0x1E4A    SUBS	R2, R1, #1
0x0DEA	0xB292    UXTH	R2, R2
0x0DEC	0x18A2    ADDS	R2, R4, R2
0x0DEE	0x7812    LDRB	R2, [R2, #0]
0x0DF0	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 322 :: 		
0x0DF2	0x1E49    SUBS	R1, R1, #1
0x0DF4	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 323 :: 		
; i end address is: 4 (R1)
0x0DF6	0xE7F4    B	L_LongToStr64
L_LongToStr65:
;__Lib_Conversions.c, 324 :: 		
0x0DF8	0x2220    MOVS	R2, #32
0x0DFA	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 325 :: 		
0x0DFC	0xB170    CBZ	R0, L_LongToStr66
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 326 :: 		
; i start address is: 0 (R0)
0x0DFE	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x0E00	0xB281    UXTH	R1, R0
0x0E02	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 327 :: 		
L_LongToStr67:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x0E04	0x1842    ADDS	R2, R0, R1
0x0E06	0x7812    LDRB	R2, [R2, #0]
0x0E08	0x2A20    CMP	R2, #32
0x0E0A	0xD102    BNE	L_LongToStr68
0x0E0C	0x1C49    ADDS	R1, R1, #1
0x0E0E	0xB289    UXTH	R1, R1
0x0E10	0xE7F8    B	L_LongToStr67
L_LongToStr68:
;__Lib_Conversions.c, 328 :: 		
0x0E12	0x1E4A    SUBS	R2, R1, #1
0x0E14	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 329 :: 		
0x0E16	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x0E18	0x222D    MOVS	R2, #45
0x0E1A	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 330 :: 		
L_LongToStr66:
;__Lib_Conversions.c, 331 :: 		
L_end_LongToStr:
0x0E1C	0xF8DDE000  LDR	LR, [SP, #0]
0x0E20	0xB001    ADD	SP, SP, #4
0x0E22	0x4770    BX	LR
; end of _LongToStr
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x1E38	0xB082    SUB	SP, SP, #8
0x1E3A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1E3E	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x1E40	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x1E42	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1E44	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1E46	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x1E48	0x2803    CMP	R0, #3
0x1E4A	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x1E4E	0x4893    LDR	R0, [PC, #588]
0x1E50	0x4281    CMP	R1, R0
0x1E52	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x1E54	0x4892    LDR	R0, [PC, #584]
0x1E56	0x6800    LDR	R0, [R0, #0]
0x1E58	0xF0400105  ORR	R1, R0, #5
0x1E5C	0x4890    LDR	R0, [PC, #576]
0x1E5E	0x6001    STR	R1, [R0, #0]
0x1E60	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1E62	0x4890    LDR	R0, [PC, #576]
0x1E64	0x4281    CMP	R1, R0
0x1E66	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x1E68	0x488D    LDR	R0, [PC, #564]
0x1E6A	0x6800    LDR	R0, [R0, #0]
0x1E6C	0xF0400104  ORR	R1, R0, #4
0x1E70	0x488B    LDR	R0, [PC, #556]
0x1E72	0x6001    STR	R1, [R0, #0]
0x1E74	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1E76	0x488C    LDR	R0, [PC, #560]
0x1E78	0x4281    CMP	R1, R0
0x1E7A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x1E7C	0x4888    LDR	R0, [PC, #544]
0x1E7E	0x6800    LDR	R0, [R0, #0]
0x1E80	0xF0400103  ORR	R1, R0, #3
0x1E84	0x4886    LDR	R0, [PC, #536]
0x1E86	0x6001    STR	R1, [R0, #0]
0x1E88	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1E8A	0xF64E2060  MOVW	R0, #60000
0x1E8E	0x4281    CMP	R1, R0
0x1E90	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x1E92	0x4883    LDR	R0, [PC, #524]
0x1E94	0x6800    LDR	R0, [R0, #0]
0x1E96	0xF0400102  ORR	R1, R0, #2
0x1E9A	0x4881    LDR	R0, [PC, #516]
0x1E9C	0x6001    STR	R1, [R0, #0]
0x1E9E	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1EA0	0xF2475030  MOVW	R0, #30000
0x1EA4	0x4281    CMP	R1, R0
0x1EA6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x1EA8	0x487D    LDR	R0, [PC, #500]
0x1EAA	0x6800    LDR	R0, [R0, #0]
0x1EAC	0xF0400101  ORR	R1, R0, #1
0x1EB0	0x487B    LDR	R0, [PC, #492]
0x1EB2	0x6001    STR	R1, [R0, #0]
0x1EB4	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x1EB6	0x487A    LDR	R0, [PC, #488]
0x1EB8	0x6801    LDR	R1, [R0, #0]
0x1EBA	0xF06F0007  MVN	R0, #7
0x1EBE	0x4001    ANDS	R1, R0
0x1EC0	0x4877    LDR	R0, [PC, #476]
0x1EC2	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x1EC4	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1EC6	0x2802    CMP	R0, #2
0x1EC8	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x1ECC	0x4877    LDR	R0, [PC, #476]
0x1ECE	0x4281    CMP	R1, R0
0x1ED0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x1ED2	0x4873    LDR	R0, [PC, #460]
0x1ED4	0x6800    LDR	R0, [R0, #0]
0x1ED6	0xF0400106  ORR	R1, R0, #6
0x1EDA	0x4871    LDR	R0, [PC, #452]
0x1EDC	0x6001    STR	R1, [R0, #0]
0x1EDE	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1EE0	0x4870    LDR	R0, [PC, #448]
0x1EE2	0x4281    CMP	R1, R0
0x1EE4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x1EE6	0x486E    LDR	R0, [PC, #440]
0x1EE8	0x6800    LDR	R0, [R0, #0]
0x1EEA	0xF0400105  ORR	R1, R0, #5
0x1EEE	0x486C    LDR	R0, [PC, #432]
0x1EF0	0x6001    STR	R1, [R0, #0]
0x1EF2	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1EF4	0x486E    LDR	R0, [PC, #440]
0x1EF6	0x4281    CMP	R1, R0
0x1EF8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x1EFA	0x4869    LDR	R0, [PC, #420]
0x1EFC	0x6800    LDR	R0, [R0, #0]
0x1EFE	0xF0400104  ORR	R1, R0, #4
0x1F02	0x4867    LDR	R0, [PC, #412]
0x1F04	0x6001    STR	R1, [R0, #0]
0x1F06	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F08	0x486A    LDR	R0, [PC, #424]
0x1F0A	0x4281    CMP	R1, R0
0x1F0C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x1F0E	0x4864    LDR	R0, [PC, #400]
0x1F10	0x6800    LDR	R0, [R0, #0]
0x1F12	0xF0400103  ORR	R1, R0, #3
0x1F16	0x4862    LDR	R0, [PC, #392]
0x1F18	0x6001    STR	R1, [R0, #0]
0x1F1A	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F1C	0xF64B3080  MOVW	R0, #48000
0x1F20	0x4281    CMP	R1, R0
0x1F22	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x1F24	0x485E    LDR	R0, [PC, #376]
0x1F26	0x6800    LDR	R0, [R0, #0]
0x1F28	0xF0400102  ORR	R1, R0, #2
0x1F2C	0x485C    LDR	R0, [PC, #368]
0x1F2E	0x6001    STR	R1, [R0, #0]
0x1F30	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F32	0xF64550C0  MOVW	R0, #24000
0x1F36	0x4281    CMP	R1, R0
0x1F38	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x1F3A	0x4859    LDR	R0, [PC, #356]
0x1F3C	0x6800    LDR	R0, [R0, #0]
0x1F3E	0xF0400101  ORR	R1, R0, #1
0x1F42	0x4857    LDR	R0, [PC, #348]
0x1F44	0x6001    STR	R1, [R0, #0]
0x1F46	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x1F48	0x4855    LDR	R0, [PC, #340]
0x1F4A	0x6801    LDR	R1, [R0, #0]
0x1F4C	0xF06F0007  MVN	R0, #7
0x1F50	0x4001    ANDS	R1, R0
0x1F52	0x4853    LDR	R0, [PC, #332]
0x1F54	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x1F56	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1F58	0x2801    CMP	R0, #1
0x1F5A	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x1F5E	0x4851    LDR	R0, [PC, #324]
0x1F60	0x4281    CMP	R1, R0
0x1F62	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x1F64	0x484E    LDR	R0, [PC, #312]
0x1F66	0x6800    LDR	R0, [R0, #0]
0x1F68	0xF0400107  ORR	R1, R0, #7
0x1F6C	0x484C    LDR	R0, [PC, #304]
0x1F6E	0x6001    STR	R1, [R0, #0]
0x1F70	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F72	0x4851    LDR	R0, [PC, #324]
0x1F74	0x4281    CMP	R1, R0
0x1F76	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x1F78	0x4849    LDR	R0, [PC, #292]
0x1F7A	0x6800    LDR	R0, [R0, #0]
0x1F7C	0xF0400106  ORR	R1, R0, #6
0x1F80	0x4847    LDR	R0, [PC, #284]
0x1F82	0x6001    STR	R1, [R0, #0]
0x1F84	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F86	0x4848    LDR	R0, [PC, #288]
0x1F88	0x4281    CMP	R1, R0
0x1F8A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x1F8C	0x4844    LDR	R0, [PC, #272]
0x1F8E	0x6800    LDR	R0, [R0, #0]
0x1F90	0xF0400105  ORR	R1, R0, #5
0x1F94	0x4842    LDR	R0, [PC, #264]
0x1F96	0x6001    STR	R1, [R0, #0]
0x1F98	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1F9A	0x4846    LDR	R0, [PC, #280]
0x1F9C	0x4281    CMP	R1, R0
0x1F9E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x1FA0	0x483F    LDR	R0, [PC, #252]
0x1FA2	0x6800    LDR	R0, [R0, #0]
0x1FA4	0xF0400104  ORR	R1, R0, #4
0x1FA8	0x483D    LDR	R0, [PC, #244]
0x1FAA	0x6001    STR	R1, [R0, #0]
0x1FAC	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1FAE	0xF24D20F0  MOVW	R0, #54000
0x1FB2	0x4281    CMP	R1, R0
0x1FB4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x1FB6	0x483A    LDR	R0, [PC, #232]
0x1FB8	0x6800    LDR	R0, [R0, #0]
0x1FBA	0xF0400103  ORR	R1, R0, #3
0x1FBE	0x4838    LDR	R0, [PC, #224]
0x1FC0	0x6001    STR	R1, [R0, #0]
0x1FC2	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1FC4	0xF64840A0  MOVW	R0, #36000
0x1FC8	0x4281    CMP	R1, R0
0x1FCA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x1FCC	0x4834    LDR	R0, [PC, #208]
0x1FCE	0x6800    LDR	R0, [R0, #0]
0x1FD0	0xF0400102  ORR	R1, R0, #2
0x1FD4	0x4832    LDR	R0, [PC, #200]
0x1FD6	0x6001    STR	R1, [R0, #0]
0x1FD8	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1FDA	0xF2446050  MOVW	R0, #18000
0x1FDE	0x4281    CMP	R1, R0
0x1FE0	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x1FE2	0x482F    LDR	R0, [PC, #188]
0x1FE4	0x6800    LDR	R0, [R0, #0]
0x1FE6	0xF0400101  ORR	R1, R0, #1
0x1FEA	0x482D    LDR	R0, [PC, #180]
0x1FEC	0x6001    STR	R1, [R0, #0]
0x1FEE	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x1FF0	0x482B    LDR	R0, [PC, #172]
0x1FF2	0x6801    LDR	R1, [R0, #0]
0x1FF4	0xF06F0007  MVN	R0, #7
0x1FF8	0x4001    ANDS	R1, R0
0x1FFA	0x4829    LDR	R0, [PC, #164]
0x1FFC	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x1FFE	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2000	0x2800    CMP	R0, #0
0x2002	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x2006	0x482D    LDR	R0, [PC, #180]
0x2008	0x4281    CMP	R1, R0
0x200A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x200C	0x4824    LDR	R0, [PC, #144]
0x200E	0x6800    LDR	R0, [R0, #0]
0x2010	0xF0400107  ORR	R1, R0, #7
0x2014	0x4822    LDR	R0, [PC, #136]
0x2016	0x6001    STR	R1, [R0, #0]
0x2018	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x201A	0x4825    LDR	R0, [PC, #148]
0x201C	0x4281    CMP	R1, R0
0x201E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x2020	0x481F    LDR	R0, [PC, #124]
0x2022	0x6800    LDR	R0, [R0, #0]
0x2024	0xF0400106  ORR	R1, R0, #6
0x2028	0x481D    LDR	R0, [PC, #116]
0x202A	0x6001    STR	R1, [R0, #0]
0x202C	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x202E	0x4824    LDR	R0, [PC, #144]
0x2030	0x4281    CMP	R1, R0
0x2032	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x2034	0x481A    LDR	R0, [PC, #104]
0x2036	0x6800    LDR	R0, [R0, #0]
0x2038	0xF0400105  ORR	R1, R0, #5
0x203C	0x4818    LDR	R0, [PC, #96]
0x203E	0x6001    STR	R1, [R0, #0]
0x2040	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2042	0xF5B14F7A  CMP	R1, #64000
0x2046	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x2048	0x4815    LDR	R0, [PC, #84]
0x204A	0x6800    LDR	R0, [R0, #0]
0x204C	0xF0400104  ORR	R1, R0, #4
0x2050	0x4813    LDR	R0, [PC, #76]
0x2052	0x6001    STR	R1, [R0, #0]
0x2054	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2056	0xF64B3080  MOVW	R0, #48000
0x205A	0x4281    CMP	R1, R0
0x205C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x205E	0x4810    LDR	R0, [PC, #64]
0x2060	0x6800    LDR	R0, [R0, #0]
0x2062	0xF0400103  ORR	R1, R0, #3
0x2066	0x480E    LDR	R0, [PC, #56]
0x2068	0x6001    STR	R1, [R0, #0]
0x206A	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x206C	0xF5B14FFA  CMP	R1, #32000
0x2070	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x2072	0x480B    LDR	R0, [PC, #44]
0x2074	0x6800    LDR	R0, [R0, #0]
0x2076	0xF0400102  ORR	R1, R0, #2
0x207A	0x4809    LDR	R0, [PC, #36]
0x207C	0x6001    STR	R1, [R0, #0]
0x207E	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2080	0xF5B15F7A  CMP	R1, #16000
0x2084	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x2086	0xE01D    B	#58
0x2088	0x00800101  	#16842880
0x208C	0x54190440  	#71324697
0x2090	0x00023D60  	#1029701634
0x2094	0x00030000  	#3
0x2098	0x90400002  	#168000
0x209C	0x49F00002  	#150000
0x20A0	0x3C004002  	FLASH_ACR+0
0x20A4	0xD4C00001  	#120000
0x20A8	0x5F900001  	#90000
0x20AC	0x32800002  	#144000
0x20B0	0x77000001  	#96000
0x20B4	0x19400001  	#72000
0x20B8	0xA5E00001  	#108000
0x20BC	0xB5800001  	#112000
0x20C0	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x20C4	0x482D    LDR	R0, [PC, #180]
0x20C6	0x6800    LDR	R0, [R0, #0]
0x20C8	0xF0400101  ORR	R1, R0, #1
0x20CC	0x482B    LDR	R0, [PC, #172]
0x20CE	0x6001    STR	R1, [R0, #0]
0x20D0	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x20D2	0x482A    LDR	R0, [PC, #168]
0x20D4	0x6801    LDR	R1, [R0, #0]
0x20D6	0xF06F0007  MVN	R0, #7
0x20DA	0x4001    ANDS	R1, R0
0x20DC	0x4827    LDR	R0, [PC, #156]
0x20DE	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x20E0	0x2101    MOVS	R1, #1
0x20E2	0xB249    SXTB	R1, R1
0x20E4	0x4826    LDR	R0, [PC, #152]
0x20E6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x20E8	0x4826    LDR	R0, [PC, #152]
0x20EA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x20EC	0xF7FFF85E  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x20F0	0x4825    LDR	R0, [PC, #148]
0x20F2	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x20F4	0x4825    LDR	R0, [PC, #148]
0x20F6	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x20F8	0x4825    LDR	R0, [PC, #148]
0x20FA	0xEA020100  AND	R1, R2, R0, LSL #0
0x20FE	0x4825    LDR	R0, [PC, #148]
0x2100	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x2102	0xF0020001  AND	R0, R2, #1
0x2106	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x2108	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x210A	0x4822    LDR	R0, [PC, #136]
0x210C	0x6800    LDR	R0, [R0, #0]
0x210E	0xF0000002  AND	R0, R0, #2
0x2112	0x2800    CMP	R0, #0
0x2114	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x2116	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x2118	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x211A	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x211C	0xF4023080  AND	R0, R2, #65536
0x2120	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x2122	0x481C    LDR	R0, [PC, #112]
0x2124	0x6800    LDR	R0, [R0, #0]
0x2126	0xF4003000  AND	R0, R0, #131072
0x212A	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x212C	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x212E	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x2130	0x460A    MOV	R2, R1
0x2132	0x9901    LDR	R1, [SP, #4]
0x2134	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x2136	0x9101    STR	R1, [SP, #4]
0x2138	0x4611    MOV	R1, R2
0x213A	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x213C	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x2140	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x2142	0x4814    LDR	R0, [PC, #80]
0x2144	0x6800    LDR	R0, [R0, #0]
0x2146	0xF0407180  ORR	R1, R0, #16777216
0x214A	0x4812    LDR	R0, [PC, #72]
0x214C	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x214E	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x2150	0x4810    LDR	R0, [PC, #64]
0x2152	0x6800    LDR	R0, [R0, #0]
0x2154	0xF0007000  AND	R0, R0, #33554432
0x2158	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x215A	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x215C	0x460A    MOV	R2, R1
0x215E	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x2160	0x480A    LDR	R0, [PC, #40]
0x2162	0x6800    LDR	R0, [R0, #0]
0x2164	0xF000010C  AND	R1, R0, #12
0x2168	0x0090    LSLS	R0, R2, #2
0x216A	0xF000000C  AND	R0, R0, #12
0x216E	0x4281    CMP	R1, R0
0x2170	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x2172	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x2174	0xF8DDE000  LDR	LR, [SP, #0]
0x2178	0xB002    ADD	SP, SP, #8
0x217A	0x4770    BX	LR
0x217C	0x3C004002  	FLASH_ACR+0
0x2180	0x80204247  	FLASH_ACR+0
0x2184	0x80244247  	FLASH_ACR+0
0x2188	0x38044002  	RCC_PLLCFGR+0
0x218C	0x38084002  	RCC_CFGR+0
0x2190	0xFFFF000F  	#1048575
0x2194	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x11AC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x11AE	0x480D    LDR	R0, [PC, #52]
0x11B0	0x6800    LDR	R0, [R0, #0]
0x11B2	0xF0400101  ORR	R1, R0, #1
0x11B6	0x480B    LDR	R0, [PC, #44]
0x11B8	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x11BA	0x2100    MOVS	R1, #0
0x11BC	0x480A    LDR	R0, [PC, #40]
0x11BE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x11C0	0x4808    LDR	R0, [PC, #32]
0x11C2	0x6801    LDR	R1, [R0, #0]
0x11C4	0x4809    LDR	R0, [PC, #36]
0x11C6	0x4001    ANDS	R1, R0
0x11C8	0x4806    LDR	R0, [PC, #24]
0x11CA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x11CC	0x4908    LDR	R1, [PC, #32]
0x11CE	0x4809    LDR	R0, [PC, #36]
0x11D0	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x11D2	0x4804    LDR	R0, [PC, #16]
0x11D4	0x6801    LDR	R1, [R0, #0]
0x11D6	0xF46F2080  MVN	R0, #262144
0x11DA	0x4001    ANDS	R1, R0
0x11DC	0x4801    LDR	R0, [PC, #4]
0x11DE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x11E0	0xB001    ADD	SP, SP, #4
0x11E2	0x4770    BX	LR
0x11E4	0x38004002  	RCC_CR+0
0x11E8	0x38084002  	RCC_CFGR+0
0x11EC	0xFFFFFEF6  	#-17367041
0x11F0	0x30102400  	#603992080
0x11F4	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x21A0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x21A2	0x4904    LDR	R1, [PC, #16]
0x21A4	0x4804    LDR	R0, [PC, #16]
0x21A6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x21A8	0x4904    LDR	R1, [PC, #16]
0x21AA	0x4805    LDR	R0, [PC, #20]
0x21AC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x21AE	0xB001    ADD	SP, SP, #4
0x21B0	0x4770    BX	LR
0x21B2	0xBF00    NOP
0x21B4	0x90400002  	#168000
0x21B8	0x03502000  	___System_CLOCK_IN_KHZ+0
0x21BC	0x00030000  	#3
0x21C0	0x03542000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x2198	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x219A	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x219C	0xB001    ADD	SP, SP, #4
0x219E	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x1AF4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x1AF6	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x1AFA	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x1AFE	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x1B00	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x1B04	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x1B06	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x1B08	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x1B0A	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x1B0C	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x1B0E	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x1B12	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x1B16	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x1B1A	0xB001    ADD	SP, SP, #4
0x1B1C	0x4770    BX	LR
; end of ___EnableFPU
0x2740	0xB500    PUSH	(R14)
0x2742	0xF8DFB024  LDR	R11, [PC, #36]
0x2746	0xF8DFA024  LDR	R10, [PC, #36]
0x274A	0xF8DFC024  LDR	R12, [PC, #36]
0x274E	0xF7FFF8D3  BL	6392
0x2752	0xF8DFB020  LDR	R11, [PC, #32]
0x2756	0xF8DFA020  LDR	R10, [PC, #32]
0x275A	0xF8DFC020  LDR	R12, [PC, #32]
0x275E	0xF7FFF8CB  BL	6392
0x2762	0xBD00    POP	(R15)
0x2764	0x4770    BX	LR
0x2766	0xBF00    NOP
0x2768	0x00002000  	#536870912
0x276C	0x003B2000  	#536870971
0x2770	0x27040000  	#9988
0x2774	0x003C2000  	#536870972
0x2778	0x01AF2000  	#536871343
0x277C	0x21C40000  	#8644
0x27DC	0xB500    PUSH	(R14)
0x27DE	0xF8DFB010  LDR	R11, [PC, #16]
0x27E2	0xF8DFA010  LDR	R10, [PC, #16]
0x27E6	0xF7FFF869  BL	6332
0x27EA	0xBD00    POP	(R15)
0x27EC	0x4770    BX	LR
0x27EE	0xBF00    NOP
0x27F0	0x00002000  	#536870912
0x27F4	0x03702000  	#536871792
_timer11_ISR:
;Input Capture Complete 5ch.c, 371 :: 		void timer11_ISR() iv IVT_INT_TIM1_TRG_COM_TIM11 {
;Input Capture Complete 5ch.c, 373 :: 		TIM11_SR.UIF = 0;                                                           // Clear timer 11 interrupt flag
0x1AD0	0x2100    MOVS	R1, #0
0x1AD2	0xB249    SXTB	R1, R1
0x1AD4	0x4804    LDR	R0, [PC, #16]
0x1AD6	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 374 :: 		poll_flag = 1;                                                              // Set poll flag for main loop
0x1AD8	0x2101    MOVS	R1, #1
0x1ADA	0x4804    LDR	R0, [PC, #16]
0x1ADC	0x8001    STRH	R1, [R0, #0]
;Input Capture Complete 5ch.c, 375 :: 		terminal_print_count++;                                                     // Increment the debug print counter
0x1ADE	0x4904    LDR	R1, [PC, #16]
0x1AE0	0x8808    LDRH	R0, [R1, #0]
0x1AE2	0x1C40    ADDS	R0, R0, #1
0x1AE4	0x8008    STRH	R0, [R1, #0]
;Input Capture Complete 5ch.c, 376 :: 		}
L_end_timer11_ISR:
0x1AE6	0x4770    BX	LR
0x1AE8	0x02004229  	TIM11_SR+0
0x1AEC	0x01BA2000  	_poll_flag+0
0x1AF0	0x034C2000  	_terminal_print_count+0
; end of _timer11_ISR
_timer3_ISR:
;Input Capture Complete 5ch.c, 319 :: 		void timer3_ISR() iv IVT_INT_TIM3 {
;Input Capture Complete 5ch.c, 322 :: 		if(TIM3_SR.UIF == 1) {
0x1B98	0x4937    LDR	R1, [PC, #220]
0x1B9A	0x6808    LDR	R0, [R1, #0]
0x1B9C	0xB138    CBZ	R0, L_timer3_ISR16
;Input Capture Complete 5ch.c, 323 :: 		TIM3_SR.UIF = 0;                                                        // Clear timer 3 interrupt bit
0x1B9E	0x2100    MOVS	R1, #0
0x1BA0	0xB249    SXTB	R1, R1
0x1BA2	0x4835    LDR	R0, [PC, #212]
0x1BA4	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 324 :: 		tim3_overflow_count++;                                                  // Increment timer 3 overflow counter
0x1BA6	0x4935    LDR	R1, [PC, #212]
0x1BA8	0x6808    LDR	R0, [R1, #0]
0x1BAA	0x1C40    ADDS	R0, R0, #1
0x1BAC	0x6008    STR	R0, [R1, #0]
;Input Capture Complete 5ch.c, 325 :: 		}
L_timer3_ISR16:
;Input Capture Complete 5ch.c, 328 :: 		if (TIM3_SR.CC1IF == 1) {
0x1BAE	0x4934    LDR	R1, [PC, #208]
0x1BB0	0x6808    LDR	R0, [R1, #0]
0x1BB2	0xB1A8    CBZ	R0, L_timer3_ISR17
;Input Capture Complete 5ch.c, 329 :: 		fngr_pointer.enc_start_time = fngr_pointer.enc_end_time;                // Store previous captured value for next calculation
0x1BB4	0x4A33    LDR	R2, [PC, #204]
0x1BB6	0x6811    LDR	R1, [R2, #0]
0x1BB8	0x4833    LDR	R0, [PC, #204]
0x1BBA	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 330 :: 		fngr_pointer.enc_end_time = TIM3_CCR1;                                  // Read stored input capture time
0x1BBC	0x4833    LDR	R0, [PC, #204]
0x1BBE	0x6800    LDR	R0, [R0, #0]
0x1BC0	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 331 :: 		fngr_pointer.enc_overflow_start = fngr_pointer.enc_overflow_end;        // Store previous overflow value for next calculation
0x1BC2	0x4A33    LDR	R2, [PC, #204]
0x1BC4	0x6811    LDR	R1, [R2, #0]
0x1BC6	0x4833    LDR	R0, [PC, #204]
0x1BC8	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 332 :: 		fngr_pointer.enc_overflow_end = tim3_overflow_count;                    // Store number of timer 3 overflows for Pointer finger
0x1BCA	0x482C    LDR	R0, [PC, #176]
0x1BCC	0x6800    LDR	R0, [R0, #0]
0x1BCE	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 333 :: 		fngr_pointer.enc_chan_b = FNGR_POINTER_ENC_B;                           // Sample the second encoder channel state (For direction)
0x1BD0	0x4831    LDR	R0, [PC, #196]
0x1BD2	0x6801    LDR	R1, [R0, #0]
0x1BD4	0x4831    LDR	R0, [PC, #196]
0x1BD6	0x8001    STRH	R1, [R0, #0]
;Input Capture Complete 5ch.c, 334 :: 		fngr_pointer.position_temp++;                                           // Increment total input capture event counter
0x1BD8	0x4931    LDR	R1, [PC, #196]
0x1BDA	0x6808    LDR	R0, [R1, #0]
0x1BDC	0x1C40    ADDS	R0, R0, #1
0x1BDE	0x6008    STR	R0, [R1, #0]
;Input Capture Complete 5ch.c, 335 :: 		}
L_timer3_ISR17:
;Input Capture Complete 5ch.c, 339 :: 		if (TIM3_SR.CC2IF == 1) {
0x1BE0	0x4930    LDR	R1, [PC, #192]
0x1BE2	0x6808    LDR	R0, [R1, #0]
0x1BE4	0xB1A8    CBZ	R0, L_timer3_ISR18
;Input Capture Complete 5ch.c, 340 :: 		fngr_middle.enc_start_time = fngr_middle.enc_end_time;                  // Store previous captured value for next calculation
0x1BE6	0x4A30    LDR	R2, [PC, #192]
0x1BE8	0x6811    LDR	R1, [R2, #0]
0x1BEA	0x4830    LDR	R0, [PC, #192]
0x1BEC	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 341 :: 		fngr_middle.enc_end_time = TIM3_CCR2;                                   // Read stored input capture time
0x1BEE	0x4830    LDR	R0, [PC, #192]
0x1BF0	0x6800    LDR	R0, [R0, #0]
0x1BF2	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 342 :: 		fngr_middle.enc_overflow_start = fngr_middle.enc_overflow_end;          // Store previous overflow value for next calculation
0x1BF4	0x4A2F    LDR	R2, [PC, #188]
0x1BF6	0x6811    LDR	R1, [R2, #0]
0x1BF8	0x482F    LDR	R0, [PC, #188]
0x1BFA	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 343 :: 		fngr_middle.enc_overflow_end = tim3_overflow_count;                     // Store number of timer 3 overflows for Middle finger
0x1BFC	0x481F    LDR	R0, [PC, #124]
0x1BFE	0x6800    LDR	R0, [R0, #0]
0x1C00	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 344 :: 		fngr_middle.enc_chan_b = FNGR_MIDDLE_ENC_B;                             // Sample the second encoder channel state (For direction)
0x1C02	0x482E    LDR	R0, [PC, #184]
0x1C04	0x6801    LDR	R1, [R0, #0]
0x1C06	0x482E    LDR	R0, [PC, #184]
0x1C08	0x8001    STRH	R1, [R0, #0]
;Input Capture Complete 5ch.c, 345 :: 		fngr_middle.position_temp++;                                            // Increment total input capture event counter
0x1C0A	0x492E    LDR	R1, [PC, #184]
0x1C0C	0x6808    LDR	R0, [R1, #0]
0x1C0E	0x1C40    ADDS	R0, R0, #1
0x1C10	0x6008    STR	R0, [R1, #0]
;Input Capture Complete 5ch.c, 346 :: 		}
L_timer3_ISR18:
;Input Capture Complete 5ch.c, 349 :: 		if (TIM3_SR.CC3IF == 1) {
0x1C12	0x492D    LDR	R1, [PC, #180]
0x1C14	0x6808    LDR	R0, [R1, #0]
0x1C16	0xB1A8    CBZ	R0, L_timer3_ISR19
;Input Capture Complete 5ch.c, 350 :: 		fngr_ring.enc_start_time = fngr_ring.enc_end_time;                      // Store previous captured value for next calculation
0x1C18	0x4A2C    LDR	R2, [PC, #176]
0x1C1A	0x6811    LDR	R1, [R2, #0]
0x1C1C	0x482C    LDR	R0, [PC, #176]
0x1C1E	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 351 :: 		fngr_ring.enc_end_time = TIM3_CCR3;                                     // Read stored input capture time
0x1C20	0x482C    LDR	R0, [PC, #176]
0x1C22	0x6800    LDR	R0, [R0, #0]
0x1C24	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 352 :: 		fngr_ring.enc_overflow_start = fngr_ring.enc_overflow_end;              // Store previous overflow value for next calculation
0x1C26	0x4A2C    LDR	R2, [PC, #176]
0x1C28	0x6811    LDR	R1, [R2, #0]
0x1C2A	0x482C    LDR	R0, [PC, #176]
0x1C2C	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 353 :: 		fngr_ring.enc_overflow_end = tim3_overflow_count;                       // Store number of timer 3 overflows for Ring finger
0x1C2E	0x4813    LDR	R0, [PC, #76]
0x1C30	0x6800    LDR	R0, [R0, #0]
0x1C32	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 354 :: 		fngr_ring.enc_chan_b = FNGR_RING_ENC_B;                                 // Sample the second encoder channel state (For direction)
0x1C34	0x482A    LDR	R0, [PC, #168]
0x1C36	0x6801    LDR	R1, [R0, #0]
0x1C38	0x482A    LDR	R0, [PC, #168]
0x1C3A	0x8001    STRH	R1, [R0, #0]
;Input Capture Complete 5ch.c, 355 :: 		fngr_ring.position_temp++;                                              // Increment total input capture event counter
0x1C3C	0x492A    LDR	R1, [PC, #168]
0x1C3E	0x6808    LDR	R0, [R1, #0]
0x1C40	0x1C40    ADDS	R0, R0, #1
0x1C42	0x6008    STR	R0, [R1, #0]
;Input Capture Complete 5ch.c, 356 :: 		}
L_timer3_ISR19:
;Input Capture Complete 5ch.c, 359 :: 		if (TIM3_SR.CC4IF == 1) {
0x1C44	0x4929    LDR	R1, [PC, #164]
0x1C46	0x6808    LDR	R0, [R1, #0]
0x1C48	0xB1A8    CBZ	R0, L_timer3_ISR20
;Input Capture Complete 5ch.c, 360 :: 		fngr_pinky.enc_start_time = fngr_pinky.enc_end_time;                    // Store previous captured value for next calculation
0x1C4A	0x4A29    LDR	R2, [PC, #164]
0x1C4C	0x6811    LDR	R1, [R2, #0]
0x1C4E	0x4829    LDR	R0, [PC, #164]
0x1C50	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 361 :: 		fngr_pinky.enc_end_time = TIM3_CCR4;                                    // Read stored input capture time
0x1C52	0x4829    LDR	R0, [PC, #164]
0x1C54	0x6800    LDR	R0, [R0, #0]
0x1C56	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 362 :: 		fngr_pinky.enc_overflow_start = fngr_pinky.enc_overflow_end;            // Store previous overflow value for next calculation
0x1C58	0x4A28    LDR	R2, [PC, #160]
0x1C5A	0x6811    LDR	R1, [R2, #0]
0x1C5C	0x4828    LDR	R0, [PC, #160]
0x1C5E	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 363 :: 		fngr_pinky.enc_overflow_end = tim3_overflow_count;                      // Store number of timer 3 overflows for Pinky
0x1C60	0x4806    LDR	R0, [PC, #24]
0x1C62	0x6800    LDR	R0, [R0, #0]
0x1C64	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 364 :: 		fngr_pinky.enc_chan_b = FNGR_PINKY_ENC_B;                               // Sample the second encoder channel state (For direction)
0x1C66	0x4827    LDR	R0, [PC, #156]
0x1C68	0x6801    LDR	R1, [R0, #0]
0x1C6A	0x4827    LDR	R0, [PC, #156]
0x1C6C	0x8001    STRH	R1, [R0, #0]
;Input Capture Complete 5ch.c, 365 :: 		fngr_pinky.position_temp++;                                             // Increment total input capture event counter
0x1C6E	0x4927    LDR	R1, [PC, #156]
0x1C70	0x6808    LDR	R0, [R1, #0]
0x1C72	0x1C40    ADDS	R0, R0, #1
0x1C74	0x6008    STR	R0, [R1, #0]
;Input Capture Complete 5ch.c, 366 :: 		}
L_timer3_ISR20:
;Input Capture Complete 5ch.c, 367 :: 		}
L_end_timer3_ISR:
0x1C76	0x4770    BX	LR
0x1C78	0x82004200  	TIM3_SR+0
0x1C7C	0x03682000  	_tim3_overflow_count+0
0x1C80	0x82044200  	TIM3_SR+0
0x1C84	0x01E42000  	_fngr_pointer+40
0x1C88	0x01E02000  	_fngr_pointer+36
0x1C8C	0x04344000  	TIM3_CCR1+0
0x1C90	0x01F02000  	_fngr_pointer+52
0x1C94	0x01EC2000  	_fngr_pointer+48
0x1C98	0x02304242  	GPIOE_IDR+0
0x1C9C	0x01DC2000  	_fngr_pointer+32
0x1CA0	0x01CC2000  	_fngr_pointer+16
0x1CA4	0x82084200  	TIM3_SR+0
0x1CA8	0x02342000  	_fngr_middle+40
0x1CAC	0x02302000  	_fngr_middle+36
0x1CB0	0x04384000  	TIM3_CCR2+0
0x1CB4	0x02402000  	_fngr_middle+52
0x1CB8	0x023C2000  	_fngr_middle+48
0x1CBC	0x022C4240  	GPIOA_IDR+0
0x1CC0	0x022C2000  	_fngr_middle+32
0x1CC4	0x021C2000  	_fngr_middle+16
0x1CC8	0x820C4200  	TIM3_SR+0
0x1CCC	0x02842000  	_fngr_ring+40
0x1CD0	0x02802000  	_fngr_ring+36
0x1CD4	0x043C4000  	TIM3_CCR3+0
0x1CD8	0x02902000  	_fngr_ring+52
0x1CDC	0x028C2000  	_fngr_ring+48
0x1CE0	0x823C4240  	GPIOB_IDR+0
0x1CE4	0x027C2000  	_fngr_ring+32
0x1CE8	0x026C2000  	_fngr_ring+16
0x1CEC	0x82104200  	TIM3_SR+0
0x1CF0	0x02D42000  	_fngr_pinky+40
0x1CF4	0x02D02000  	_fngr_pinky+36
0x1CF8	0x04404000  	TIM3_CCR4+0
0x1CFC	0x02E02000  	_fngr_pinky+52
0x1D00	0x02DC2000  	_fngr_pinky+48
0x1D04	0x82244241  	GPIOD_IDR+0
0x1D08	0x02CC2000  	_fngr_pinky+32
0x1D0C	0x02BC2000  	_fngr_pinky+16
; end of _timer3_ISR
_timer2_ISR:
;Input Capture Complete 5ch.c, 297 :: 		void timer2_ISR() iv IVT_INT_TIM2 {
;Input Capture Complete 5ch.c, 300 :: 		if(TIM2_SR.UIF == 1) {
0x1B20	0x4912    LDR	R1, [PC, #72]
0x1B22	0x6808    LDR	R0, [R1, #0]
0x1B24	0xB138    CBZ	R0, L_timer2_ISR14
;Input Capture Complete 5ch.c, 301 :: 		TIM2_SR.UIF = 0;                                                        // Clear timer 2 interrupt bit
0x1B26	0x2100    MOVS	R1, #0
0x1B28	0xB249    SXTB	R1, R1
0x1B2A	0x4810    LDR	R0, [PC, #64]
0x1B2C	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 302 :: 		tim2_overflow_count++;                                                  // Increment timer 2 overflow counter
0x1B2E	0x4910    LDR	R1, [PC, #64]
0x1B30	0x6808    LDR	R0, [R1, #0]
0x1B32	0x1C40    ADDS	R0, R0, #1
0x1B34	0x6008    STR	R0, [R1, #0]
;Input Capture Complete 5ch.c, 303 :: 		}
L_timer2_ISR14:
;Input Capture Complete 5ch.c, 307 :: 		if (TIM2_SR.CC1IF == 1) {
0x1B36	0x490F    LDR	R1, [PC, #60]
0x1B38	0x6808    LDR	R0, [R1, #0]
0x1B3A	0xB1A8    CBZ	R0, L_timer2_ISR15
;Input Capture Complete 5ch.c, 308 :: 		fngr_thumb.enc_start_time = fngr_thumb.enc_end_time;                    // Store previous captured value for next calculation
0x1B3C	0x4A0E    LDR	R2, [PC, #56]
0x1B3E	0x6811    LDR	R1, [R2, #0]
0x1B40	0x480E    LDR	R0, [PC, #56]
0x1B42	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 309 :: 		fngr_thumb.enc_end_time = TIM2_CCR1;                                    // Read stored input capture time
0x1B44	0x480E    LDR	R0, [PC, #56]
0x1B46	0x6800    LDR	R0, [R0, #0]
0x1B48	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 310 :: 		fngr_thumb.enc_overflow_start = fngr_thumb.enc_overflow_end;            // Store previous overflow value for next calculation
0x1B4A	0x4A0E    LDR	R2, [PC, #56]
0x1B4C	0x6811    LDR	R1, [R2, #0]
0x1B4E	0x480E    LDR	R0, [PC, #56]
0x1B50	0x6001    STR	R1, [R0, #0]
;Input Capture Complete 5ch.c, 311 :: 		fngr_thumb.enc_overflow_end = tim2_overflow_count;                      // Store number of timer 2 overflows for thumb
0x1B52	0x4807    LDR	R0, [PC, #28]
0x1B54	0x6800    LDR	R0, [R0, #0]
0x1B56	0x6010    STR	R0, [R2, #0]
;Input Capture Complete 5ch.c, 312 :: 		fngr_thumb.enc_chan_b = FNGR_THUMB_ENC_B;                               // Sample the second encoder channel (For direction)
0x1B58	0x480C    LDR	R0, [PC, #48]
0x1B5A	0x6801    LDR	R1, [R0, #0]
0x1B5C	0x480C    LDR	R0, [PC, #48]
0x1B5E	0x8001    STRH	R1, [R0, #0]
;Input Capture Complete 5ch.c, 313 :: 		fngr_thumb.position_temp++;                                             // Increment total input capture event counter
0x1B60	0x490C    LDR	R1, [PC, #48]
0x1B62	0x6808    LDR	R0, [R1, #0]
0x1B64	0x1C40    ADDS	R0, R0, #1
0x1B66	0x6008    STR	R0, [R1, #0]
;Input Capture Complete 5ch.c, 314 :: 		}
L_timer2_ISR15:
;Input Capture Complete 5ch.c, 315 :: 		}
L_end_timer2_ISR:
0x1B68	0x4770    BX	LR
0x1B6A	0xBF00    NOP
0x1B6C	0x02004200  	TIM2_SR+0
0x1B70	0x036C2000  	_tim2_overflow_count+0
0x1B74	0x02044200  	TIM2_SR+0
0x1B78	0x03242000  	_fngr_thumb+40
0x1B7C	0x03202000  	_fngr_thumb+36
0x1B80	0x00344000  	TIM2_CCR1+0
0x1B84	0x03302000  	_fngr_thumb+52
0x1B88	0x032C2000  	_fngr_thumb+48
0x1B8C	0x022C4241  	GPIOC_IDR+0
0x1B90	0x031C2000  	_fngr_thumb+32
0x1B94	0x030C2000  	_fngr_thumb+16
; end of _timer2_ISR
;Input Capture Complete 5ch.c,0 :: ?ICS_ENCODER_TIM_PSC [2]
0x21C4	0x0064 ;?ICS_ENCODER_TIM_PSC+0
; end of ?ICS_ENCODER_TIM_PSC
;Input Capture Complete 5ch.c,0 :: ?ICS_SAMPLE_TIM_PSC [2]
0x21C6	0x0117 ;?ICS_SAMPLE_TIM_PSC+0
; end of ?ICS_SAMPLE_TIM_PSC
;Input Capture Complete 5ch.c,0 :: ?ICS_ENCODER_TIM_RELOAD [4]
0x21C8	0x0000FFFF ;?ICS_ENCODER_TIM_RELOAD+0
; end of ?ICS_ENCODER_TIM_RELOAD
;Input Capture Complete 5ch.c,0 :: ?ICS_MCU_FREQUENCY [4]
0x21CC	0x0A037A00 ;?ICS_MCU_FREQUENCY+0
; end of ?ICS_MCU_FREQUENCY
;Input Capture Complete 5ch.c,0 :: ?ICS_SAMPLE_TIM_RELOAD [2]
0x21D0	0xEA5F ;?ICS_SAMPLE_TIM_RELOAD+0
; end of ?ICS_SAMPLE_TIM_RELOAD
;Input Capture Complete 5ch.c,0 :: ?ICS_NORMALIZATION_CONSTANT [2]
0x21D2	0x0001 ;?ICS_NORMALIZATION_CONSTANT+0
; end of ?ICS_NORMALIZATION_CONSTANT
;Input Capture Complete 5ch.c,0 :: ?ICS_EXTEND [2]
0x21D4	0x0001 ;?ICS_EXTEND+0
; end of ?ICS_EXTEND
;Input Capture Complete 5ch.c,0 :: ?ICS_TERMINAL_PRINT_THRESH [2]
0x21D6	0x0005 ;?ICS_TERMINAL_PRINT_THRESH+0
; end of ?ICS_TERMINAL_PRINT_THRESH
;Input Capture Complete 5ch.c,0 :: ?ICS_FULLY_EXTENDED [4]
0x21D8	0x00000000 ;?ICS_FULLY_EXTENDED+0
; end of ?ICS_FULLY_EXTENDED
;,0 :: _initBlock_9 [46]
; Containing: ?ICS?lstr15_Input_32Capture_32Complete_325ch [13]
;             ?ICS?lstr16_Input_32Capture_32Complete_325ch [12]
;             ?ICS?lstr17_Input_32Capture_32Complete_325ch [10]
;             ?ICS?lstr18_Input_32Capture_32Complete_325ch [11]
0x21DC	0x72676E66 ;_initBlock_9+0 : ?ICS?lstr15_Input_32Capture_32Complete_325ch at 0x21DC
0x21E0	0x696F705F ;_initBlock_9+4
0x21E4	0x7265746E ;_initBlock_9+8
0x21E8	0x676E6600 ;_initBlock_9+12 : ?ICS?lstr16_Input_32Capture_32Complete_325ch at 0x21E9
0x21EC	0x696D5F72 ;_initBlock_9+16
0x21F0	0x656C6464 ;_initBlock_9+20
0x21F4	0x676E6600 ;_initBlock_9+24 : ?ICS?lstr17_Input_32Capture_32Complete_325ch at 0x21F5
0x21F8	0x69725F72 ;_initBlock_9+28
0x21FC	0x6600676E ;_initBlock_9+32 : ?ICS?lstr18_Input_32Capture_32Complete_325ch at 0x21FF
0x2200	0x5F72676E ;_initBlock_9+36
0x2204	0x6B6E6970 ;_initBlock_9+40
0x2208	0x0079 ;_initBlock_9+44
; end of _initBlock_9
;,0 :: _initBlock_10 [14]
; Containing: ?ICS?lstr19_Input_32Capture_32Complete_325ch [11]
;             ?ICS?lstr21_Input_32Capture_32Complete_325ch [3]
0x220A	0x72676E66 ;_initBlock_10+0 : ?ICS?lstr19_Input_32Capture_32Complete_325ch at 0x220A
0x220E	0x7568745F ;_initBlock_10+4
0x2212	0x0A00626D ;_initBlock_10+8 : ?ICS?lstr21_Input_32Capture_32Complete_325ch at 0x2215
0x2216	0x000D ;_initBlock_10+12
; end of _initBlock_10
;Input Capture Complete 5ch.c,0 :: ?ICS_PWM_FREQ_HZ [4]
0x2218	0x00002710 ;?ICS_PWM_FREQ_HZ+0
; end of ?ICS_PWM_FREQ_HZ
;Input Capture Complete 5ch.c,0 :: ?ICS?lstr14_Input_32Capture_32Complete_325ch [22]
0x221C	0x5241550D ;?ICS?lstr14_Input_32Capture_32Complete_325ch+0
0x2220	0x6E492054 ;?ICS?lstr14_Input_32Capture_32Complete_325ch+4
0x2224	0x43207469 ;?ICS?lstr14_Input_32Capture_32Complete_325ch+8
0x2228	0x6C706D6F ;?ICS?lstr14_Input_32Capture_32Complete_325ch+12
0x222C	0x0D657465 ;?ICS?lstr14_Input_32Capture_32Complete_325ch+16
0x2230	0x000A ;?ICS?lstr14_Input_32Capture_32Complete_325ch+20
; end of ?ICS?lstr14_Input_32Capture_32Complete_325ch
;,0 :: _initBlock_13 [46]
; Containing: ?ICS?lstr1_Input_32Capture_32Complete_325ch [13]
;             ?ICS?lstr2_Input_32Capture_32Complete_325ch [12]
;             ?ICS?lstr3_Input_32Capture_32Complete_325ch [10]
;             ?ICS?lstr4_Input_32Capture_32Complete_325ch [11]
0x2232	0x72676E66 ;_initBlock_13+0 : ?ICS?lstr1_Input_32Capture_32Complete_325ch at 0x2232
0x2236	0x696F705F ;_initBlock_13+4
0x223A	0x7265746E ;_initBlock_13+8
0x223E	0x676E6600 ;_initBlock_13+12 : ?ICS?lstr2_Input_32Capture_32Complete_325ch at 0x223F
0x2242	0x696D5F72 ;_initBlock_13+16
0x2246	0x656C6464 ;_initBlock_13+20
0x224A	0x676E6600 ;_initBlock_13+24 : ?ICS?lstr3_Input_32Capture_32Complete_325ch at 0x224B
0x224E	0x69725F72 ;_initBlock_13+28
0x2252	0x6600676E ;_initBlock_13+32 : ?ICS?lstr4_Input_32Capture_32Complete_325ch at 0x2255
0x2256	0x5F72676E ;_initBlock_13+36
0x225A	0x6B6E6970 ;_initBlock_13+40
0x225E	0x0079 ;_initBlock_13+44
; end of _initBlock_13
;,0 :: _initBlock_14 [46]
; Containing: ?ICS?lstr5_Input_32Capture_32Complete_325ch [11]
;             ?ICS?lstr6_Input_32Capture_32Complete_325ch [26]
;             ?ICS?lstr7_Input_32Capture_32Complete_325ch [9]
0x2260	0x72676E66 ;_initBlock_14+0 : ?ICS?lstr5_Input_32Capture_32Complete_325ch at 0x2260
0x2264	0x7568745F ;_initBlock_14+4
0x2268	0x0A00626D ;_initBlock_14+8 : ?ICS?lstr6_Input_32Capture_32Complete_325ch at 0x226B
0x226C	0x72500D0A ;_initBlock_14+12
0x2270	0x6172676F ;_initBlock_14+16
0x2274	0x6148206D ;_initBlock_14+20
0x2278	0x74532073 ;_initBlock_14+24
0x227C	0x65747261 ;_initBlock_14+28
0x2280	0x0D0A2164 ;_initBlock_14+32
0x2284	0x0A0A0A00 ;_initBlock_14+36 : ?ICS?lstr7_Input_32Capture_32Complete_325ch at 0x2285
0x2288	0x0A0A0A0A ;_initBlock_14+40
0x228C	0x000D ;_initBlock_14+44
; end of _initBlock_14
;Input Capture Complete 5ch.c,0 :: ?ICS?lstr20_Input_32Capture_32Complete_325ch [16]
0x228E	0x69460D0A ;?ICS?lstr20_Input_32Capture_32Complete_325ch+0
0x2292	0x7265676E ;?ICS?lstr20_Input_32Capture_32Complete_325ch+4
0x2296	0x6D614E20 ;?ICS?lstr20_Input_32Capture_32Complete_325ch+8
0x229A	0x00203A65 ;?ICS?lstr20_Input_32Capture_32Complete_325ch+12
; end of ?ICS?lstr20_Input_32Capture_32Complete_325ch
;Input Capture Complete 5ch.c,0 :: ?ICS?lstr22_Input_32Capture_32Complete_325ch [36]
0x229E	0x71657246 ;?ICS?lstr22_Input_32Capture_32Complete_325ch+0
0x22A2	0x636E6575 ;?ICS?lstr22_Input_32Capture_32Complete_325ch+4
0x22A6	0x666F2079 ;?ICS?lstr22_Input_32Capture_32Complete_325ch+8
0x22AA	0x636E6920 ;?ICS?lstr22_Input_32Capture_32Complete_325ch+12
0x22AE	0x6E696D6F ;?ICS?lstr22_Input_32Capture_32Complete_325ch+16
0x22B2	0x69732067 ;?ICS?lstr22_Input_32Capture_32Complete_325ch+20
0x22B6	0x6C616E67 ;?ICS?lstr22_Input_32Capture_32Complete_325ch+24
0x22BA	0x7A482820 ;?ICS?lstr22_Input_32Capture_32Complete_325ch+28
0x22BE	0x00203A29 ;?ICS?lstr22_Input_32Capture_32Complete_325ch+32
; end of ?ICS?lstr22_Input_32Capture_32Complete_325ch
;,0 :: _initBlock_17 [60]
; Containing: ?ICS?lstr23_Input_32Capture_32Complete_325ch [3]
;             ?ICS?lstr24_Input_32Capture_32Complete_325ch [36]
;             ?ICS?lstr25_Input_32Capture_32Complete_325ch [8]
;             ?ICS?lstr26_Input_32Capture_32Complete_325ch [10]
;             ?ICS?lstr27_Input_32Capture_32Complete_325ch [3]
0x22C2	0x44000D0A ;_initBlock_17+0 : ?ICS?lstr23_Input_32Capture_32Complete_325ch at 0x22C2 : ?ICS?lstr24_Input_32Capture_32Complete_325ch at 0x22C5
0x22C6	0x63657269 ;_initBlock_17+4
0x22CA	0x6E6F6974 ;_initBlock_17+8
0x22CE	0x20666F20 ;_initBlock_17+12
0x22D2	0x65766F6D ;_initBlock_17+16
0x22D6	0x746E656D ;_initBlock_17+20
0x22DA	0x2020203A ;_initBlock_17+24
0x22DE	0x20202020 ;_initBlock_17+28
0x22E2	0x20202020 ;_initBlock_17+32
0x22E6	0x45002020 ;_initBlock_17+36 : ?ICS?lstr25_Input_32Capture_32Complete_325ch at 0x22E9
0x22EA	0x4E455458 ;_initBlock_17+40
0x22EE	0x43002044 ;_initBlock_17+44 : ?ICS?lstr26_Input_32Capture_32Complete_325ch at 0x22F1
0x22F2	0x52544E4F ;_initBlock_17+48
0x22F6	0x20544341 ;_initBlock_17+52
0x22FA	0x000D0A00 ;_initBlock_17+56 : ?ICS?lstr27_Input_32Capture_32Complete_325ch at 0x22FB
; end of _initBlock_17
;Input Capture Complete 5ch.c,0 :: ?ICS?lstr28_Input_32Capture_32Complete_325ch [36]
0x22FE	0x69736F50 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+0
0x2302	0x6E6F6974 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+4
0x2306	0x20666F20 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+8
0x230A	0x676E6966 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+12
0x230E	0x203A7265 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+16
0x2312	0x20202020 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+20
0x2316	0x20202020 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+24
0x231A	0x20202020 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+28
0x231E	0x00202020 ;?ICS?lstr28_Input_32Capture_32Complete_325ch+32
; end of ?ICS?lstr28_Input_32Capture_32Complete_325ch
;,0 :: _initBlock_19 [21]
; Containing: ?ICS?lstr29_Input_32Capture_32Complete_325ch [5]
;             ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
0x2322	0x0D0A0A0A ;_initBlock_19+0 : ?ICS?lstr29_Input_32Capture_32Complete_325ch at 0x2322
0x2326	0x00000000 ;_initBlock_19+4 : ?ICS__Lib_System_4XX_APBAHBPrescTable at 0x2327
0x232A	0x03020100 ;_initBlock_19+8
0x232E	0x03020104 ;_initBlock_19+12
0x2332	0x08070604 ;_initBlock_19+16
0x2336	0x09 ;_initBlock_19+20
; end of _initBlock_19
;__Lib_GPIO_32F4xx_Defs.c,460 :: __GPIO_MODULE_TIM1_CH4_PE14 [108]
0x2338	0x0000014E ;__GPIO_MODULE_TIM1_CH4_PE14+0
0x233C	0xFFFFFFFF ;__GPIO_MODULE_TIM1_CH4_PE14+4
0x2340	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+8
0x2344	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+12
0x2348	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+16
0x234C	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+20
0x2350	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+24
0x2354	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+28
0x2358	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+32
0x235C	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+36
0x2360	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+40
0x2364	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+44
0x2368	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+48
0x236C	0x00001018 ;__GPIO_MODULE_TIM1_CH4_PE14+52
0x2370	0xFFFFFFFF ;__GPIO_MODULE_TIM1_CH4_PE14+56
0x2374	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+60
0x2378	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+64
0x237C	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+68
0x2380	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+72
0x2384	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+76
0x2388	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+80
0x238C	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+84
0x2390	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+88
0x2394	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+92
0x2398	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+96
0x239C	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+100
0x23A0	0x00000000 ;__GPIO_MODULE_TIM1_CH4_PE14+104
; end of __GPIO_MODULE_TIM1_CH4_PE14
;__Lib_GPIO_32F4xx_Defs.c,448 :: __GPIO_MODULE_TIM1_CH1_PE9 [108]
0x23A4	0x00000149 ;__GPIO_MODULE_TIM1_CH1_PE9+0
0x23A8	0xFFFFFFFF ;__GPIO_MODULE_TIM1_CH1_PE9+4
0x23AC	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+8
0x23B0	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+12
0x23B4	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+16
0x23B8	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+20
0x23BC	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+24
0x23C0	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+28
0x23C4	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+32
0x23C8	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+36
0x23CC	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+40
0x23D0	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+44
0x23D4	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+48
0x23D8	0x00001018 ;__GPIO_MODULE_TIM1_CH1_PE9+52
0x23DC	0xFFFFFFFF ;__GPIO_MODULE_TIM1_CH1_PE9+56
0x23E0	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+60
0x23E4	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+64
0x23E8	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+68
0x23EC	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+72
0x23F0	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+76
0x23F4	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+80
0x23F8	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+84
0x23FC	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+88
0x2400	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+92
0x2404	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+96
0x2408	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+100
0x240C	0x00000000 ;__GPIO_MODULE_TIM1_CH1_PE9+104
; end of __GPIO_MODULE_TIM1_CH1_PE9
;__Lib_GPIO_32F4xx_Defs.c,789 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x2410	0x00000709 ;__GPIO_MODULE_USART1_PA9_10+0
0x2414	0x0000070A ;__GPIO_MODULE_USART1_PA9_10+4
0x2418	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x241C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x2420	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x2424	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x2428	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x242C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x2430	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x2434	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x2438	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x243C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x2440	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x2444	0x00001018 ;__GPIO_MODULE_USART1_PA9_10+52
0x2448	0x00001018 ;__GPIO_MODULE_USART1_PA9_10+56
0x244C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2450	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x2454	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2458	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x245C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2460	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2464	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2468	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x246C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2470	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2474	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2478	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F4xx_Defs.c,452 :: __GPIO_MODULE_TIM1_CH2_PE11 [108]
0x247C	0x0000014B ;__GPIO_MODULE_TIM1_CH2_PE11+0
0x2480	0xFFFFFFFF ;__GPIO_MODULE_TIM1_CH2_PE11+4
0x2484	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+8
0x2488	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+12
0x248C	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+16
0x2490	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+20
0x2494	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+24
0x2498	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+28
0x249C	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+32
0x24A0	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+36
0x24A4	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+40
0x24A8	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+44
0x24AC	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+48
0x24B0	0x00001018 ;__GPIO_MODULE_TIM1_CH2_PE11+52
0x24B4	0xFFFFFFFF ;__GPIO_MODULE_TIM1_CH2_PE11+56
0x24B8	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+60
0x24BC	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+64
0x24C0	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+68
0x24C4	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+72
0x24C8	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+76
0x24CC	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+80
0x24D0	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+84
0x24D4	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+88
0x24D8	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+92
0x24DC	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+96
0x24E0	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+100
0x24E4	0x00000000 ;__GPIO_MODULE_TIM1_CH2_PE11+104
; end of __GPIO_MODULE_TIM1_CH2_PE11
;__Lib_GPIO_32F4xx_Defs.c,524 :: __GPIO_MODULE_TIM3_CH2_PC7 [108]
0x24E8	0x00000227 ;__GPIO_MODULE_TIM3_CH2_PC7+0
0x24EC	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH2_PC7+4
0x24F0	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+8
0x24F4	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+12
0x24F8	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+16
0x24FC	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+20
0x2500	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+24
0x2504	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+28
0x2508	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+32
0x250C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+36
0x2510	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+40
0x2514	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+44
0x2518	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+48
0x251C	0x00001018 ;__GPIO_MODULE_TIM3_CH2_PC7+52
0x2520	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH2_PC7+56
0x2524	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+60
0x2528	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+64
0x252C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+68
0x2530	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+72
0x2534	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+76
0x2538	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+80
0x253C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+84
0x2540	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+88
0x2544	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+92
0x2548	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+96
0x254C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+100
0x2550	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+104
; end of __GPIO_MODULE_TIM3_CH2_PC7
;__Lib_GPIO_32F4xx_Defs.c,520 :: __GPIO_MODULE_TIM3_CH1_PC6 [108]
0x2554	0x00000226 ;__GPIO_MODULE_TIM3_CH1_PC6+0
0x2558	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH1_PC6+4
0x255C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+8
0x2560	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+12
0x2564	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+16
0x2568	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+20
0x256C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+24
0x2570	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+28
0x2574	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+32
0x2578	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+36
0x257C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+40
0x2580	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+44
0x2584	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+48
0x2588	0x00001018 ;__GPIO_MODULE_TIM3_CH1_PC6+52
0x258C	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH1_PC6+56
0x2590	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+60
0x2594	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+64
0x2598	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+68
0x259C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+72
0x25A0	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+76
0x25A4	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+80
0x25A8	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+84
0x25AC	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+88
0x25B0	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+92
0x25B4	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+96
0x25B8	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+100
0x25BC	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PC6+104
; end of __GPIO_MODULE_TIM3_CH1_PC6
;__Lib_GPIO_32F4xx_Defs.c,528 :: __GPIO_MODULE_TIM3_CH3_PC8 [108]
0x25C0	0x00000228 ;__GPIO_MODULE_TIM3_CH3_PC8+0
0x25C4	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH3_PC8+4
0x25C8	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+8
0x25CC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+12
0x25D0	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+16
0x25D4	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+20
0x25D8	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+24
0x25DC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+28
0x25E0	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+32
0x25E4	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+36
0x25E8	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+40
0x25EC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+44
0x25F0	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+48
0x25F4	0x00001018 ;__GPIO_MODULE_TIM3_CH3_PC8+52
0x25F8	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH3_PC8+56
0x25FC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+60
0x2600	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+64
0x2604	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+68
0x2608	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+72
0x260C	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+76
0x2610	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+80
0x2614	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+84
0x2618	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+88
0x261C	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+92
0x2620	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+96
0x2624	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+100
0x2628	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PC8+104
; end of __GPIO_MODULE_TIM3_CH3_PC8
;__Lib_GPIO_32F4xx_Defs.c,480 :: __GPIO_MODULE_TIM2_CH1_PA5 [108]
0x262C	0x00000105 ;__GPIO_MODULE_TIM2_CH1_PA5+0
0x2630	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH1_PA5+4
0x2634	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+8
0x2638	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+12
0x263C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+16
0x2640	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+20
0x2644	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+24
0x2648	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+28
0x264C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+32
0x2650	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+36
0x2654	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+40
0x2658	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+44
0x265C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+48
0x2660	0x00001018 ;__GPIO_MODULE_TIM2_CH1_PA5+52
0x2664	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH1_PA5+56
0x2668	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+60
0x266C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+64
0x2670	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+68
0x2674	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+72
0x2678	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+76
0x267C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+80
0x2680	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+84
0x2684	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+88
0x2688	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+92
0x268C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+96
0x2690	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+100
0x2694	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+104
; end of __GPIO_MODULE_TIM2_CH1_PA5
;__Lib_GPIO_32F4xx_Defs.c,532 :: __GPIO_MODULE_TIM3_CH4_PC9 [108]
0x2698	0x00000229 ;__GPIO_MODULE_TIM3_CH4_PC9+0
0x269C	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH4_PC9+4
0x26A0	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+8
0x26A4	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+12
0x26A8	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+16
0x26AC	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+20
0x26B0	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+24
0x26B4	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+28
0x26B8	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+32
0x26BC	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+36
0x26C0	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+40
0x26C4	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+44
0x26C8	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+48
0x26CC	0x00001018 ;__GPIO_MODULE_TIM3_CH4_PC9+52
0x26D0	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH4_PC9+56
0x26D4	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+60
0x26D8	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+64
0x26DC	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+68
0x26E0	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+72
0x26E4	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+76
0x26E8	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+80
0x26EC	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+84
0x26F0	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+88
0x26F4	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+92
0x26F8	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+96
0x26FC	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+100
0x2700	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PC9+104
; end of __GPIO_MODULE_TIM3_CH4_PC9
;Input Capture Complete 5ch.c,0 :: ?ICS_CONTRACT [2]
0x2704	0x0000 ;?ICS_CONTRACT+0
; end of ?ICS_CONTRACT
;,0 :: _initBlock_30 [46]
; Containing: ?ICS?lstr9_Input_32Capture_32Complete_325ch [13]
;             ?ICS?lstr10_Input_32Capture_32Complete_325ch [12]
;             ?ICS?lstr11_Input_32Capture_32Complete_325ch [10]
;             ?ICS?lstr12_Input_32Capture_32Complete_325ch [11]
0x2706	0x72676E66 ;_initBlock_30+0 : ?ICS?lstr9_Input_32Capture_32Complete_325ch at 0x2706
0x270A	0x696F705F ;_initBlock_30+4
0x270E	0x7265746E ;_initBlock_30+8
0x2712	0x676E6600 ;_initBlock_30+12 : ?ICS?lstr10_Input_32Capture_32Complete_325ch at 0x2713
0x2716	0x696D5F72 ;_initBlock_30+16
0x271A	0x656C6464 ;_initBlock_30+20
0x271E	0x676E6600 ;_initBlock_30+24 : ?ICS?lstr11_Input_32Capture_32Complete_325ch at 0x271F
0x2722	0x69725F72 ;_initBlock_30+28
0x2726	0x6600676E ;_initBlock_30+32 : ?ICS?lstr12_Input_32Capture_32Complete_325ch at 0x2729
0x272A	0x5F72676E ;_initBlock_30+36
0x272E	0x6B6E6970 ;_initBlock_30+40
0x2732	0x0079 ;_initBlock_30+44
; end of _initBlock_30
;Input Capture Complete 5ch.c,0 :: ?ICS?lstr13_Input_32Capture_32Complete_325ch [11]
0x2734	0x72676E66 ;?ICS?lstr13_Input_32Capture_32Complete_325ch+0
0x2738	0x7568745F ;?ICS?lstr13_Input_32Capture_32Complete_325ch+4
0x273C	0x00626D ;?ICS?lstr13_Input_32Capture_32Complete_325ch+8
; end of ?ICS?lstr13_Input_32Capture_32Complete_325ch
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188     [168]    _GPIO_Clk_Enable
0x0230     [560]    _GPIO_Config
0x0460      [16]    _Get_Fosc_kHz
0x0470     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x056C      [30]    __Lib_UART_123_45_6_UARTx_Write
0x058C      [28]    _UART1_Write
0x05A8      [28]    _UART2_Write
0x05C4      [28]    _UART4_Write
0x05E0      [28]    _UART3_Write
0x05FC      [28]    _UART5_Write
0x0618      [28]    _UART6_Write
0x0634      [70]    _GPIO_Alternate_Function_Enable
0x067C     [132]    _RCC_GetClocksFrequency
0x0700     [142]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start
0x0790      [82]    __LongDoubleToSignedIntegral
0x07E4     [380]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init
0x0960      [70]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty
0x09A8     [660]    __Lib_UART_123_45_6_UARTx_Init_Advanced
0x0C3C      [24]    _UART_Write
0x0C54     [120]    _NVIC_IntEnable
0x0CCC      [38]    __UnsignedIntegralToLongDouble
0x0CF4      [50]    __Lib_UART_123_45_6_UARTx_Write_Text
0x0D28      [28]    _PWM_TIM1_Start
0x0D44      [38]    _strcmp
0x0D6C      [76]    _LongWordToStr
0x0DB8     [108]    _LongToStr
0x0E24      [88]    __LongDoubleToUnsignedIntegral
0x0E7C     [330]    __Div_DP
0x0FC8     [262]    __Mul_DP
0x10D0      [32]    _PWM_TIM1_Set_Duty
0x10F0      [24]    _GPIO_Digital_Input
0x1108      [28]    _PWM_TIM1_Init
0x1124      [28]    _GPIO_Digital_Output
0x1140      [52]    _UART1_Init
0x1174      [54]    _UART_Write_Text
0x11AC      [76]    __Lib_System_4XX_SystemClockSetDefault
0x11F8      [68]    _init_pointer_PWM
0x123C     [144]    _init_GPIO
0x12CC     [228]    _print_finger_info
0x13B0     [564]    _calc_finger_state
0x15E4     [592]    _init_input_capture
0x1834      [68]    _init_middle_PWM
0x1878      [68]    _init_pinky_PWM
0x18BC      [58]    ___FillZeros
0x18F8      [20]    ___CC2DW
0x190C      [40]    _strcpy
0x1938      [56]    _init_UART
0x1970      [96]    _init_timer11
0x19D0      [28]    _UART1_Write_Text
0x19EC     [228]    _init_finger
0x1AD0      [36]    _timer11_ISR
0x1AF4      [42]    ___EnableFPU
0x1B20     [120]    _timer2_ISR
0x1B98     [376]    _timer3_ISR
0x1D10     [296]    _main
0x1E38     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x2198       [8]    ___GenExcept
0x21A0      [36]    __Lib_System_4XX_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x0000       [4]    FARG_FloatToStr_fnum
0x20000000       [2]    _CONTRACT
0x20000002      [13]    ?lstr9_Input_32Capture_32Complete_325ch
0x2000000F      [12]    ?lstr10_Input_32Capture_32Complete_325ch
0x2000001B      [10]    ?lstr11_Input_32Capture_32Complete_325ch
0x20000025      [11]    ?lstr12_Input_32Capture_32Complete_325ch
0x20000030      [11]    ?lstr13_Input_32Capture_32Complete_325ch
0x2000003C       [2]    _ENCODER_TIM_PSC
0x2000003E       [2]    _SAMPLE_TIM_PSC
0x20000040       [4]    _ENCODER_TIM_RELOAD
0x20000044       [4]    _MCU_FREQUENCY
0x20000048       [2]    _SAMPLE_TIM_RELOAD
0x2000004A       [2]    _NORMALIZATION_CONSTANT
0x2000004C       [2]    _EXTEND
0x2000004E       [2]    _TERMINAL_PRINT_THRESH
0x20000050       [4]    _FULLY_EXTENDED
0x20000054      [13]    ?lstr15_Input_32Capture_32Complete_325ch
0x20000061      [12]    ?lstr16_Input_32Capture_32Complete_325ch
0x2000006D      [10]    ?lstr17_Input_32Capture_32Complete_325ch
0x20000077      [11]    ?lstr18_Input_32Capture_32Complete_325ch
0x20000082      [11]    ?lstr19_Input_32Capture_32Complete_325ch
0x2000008D       [3]    ?lstr21_Input_32Capture_32Complete_325ch
0x20000090       [4]    _PWM_FREQ_HZ
0x20000094      [22]    ?lstr14_Input_32Capture_32Complete_325ch
0x200000AA      [13]    ?lstr1_Input_32Capture_32Complete_325ch
0x200000B7      [12]    ?lstr2_Input_32Capture_32Complete_325ch
0x200000C3      [10]    ?lstr3_Input_32Capture_32Complete_325ch
0x200000CD      [11]    ?lstr4_Input_32Capture_32Complete_325ch
0x200000D8      [11]    ?lstr5_Input_32Capture_32Complete_325ch
0x200000E3      [26]    ?lstr6_Input_32Capture_32Complete_325ch
0x200000FD       [9]    ?lstr7_Input_32Capture_32Complete_325ch
0x20000106      [16]    ?lstr20_Input_32Capture_32Complete_325ch
0x20000116      [36]    ?lstr22_Input_32Capture_32Complete_325ch
0x2000013A       [3]    ?lstr23_Input_32Capture_32Complete_325ch
0x2000013D      [36]    ?lstr24_Input_32Capture_32Complete_325ch
0x20000161       [8]    ?lstr25_Input_32Capture_32Complete_325ch
0x20000169      [10]    ?lstr26_Input_32Capture_32Complete_325ch
0x20000173       [3]    ?lstr27_Input_32Capture_32Complete_325ch
0x20000176      [36]    ?lstr28_Input_32Capture_32Complete_325ch
0x2000019A       [5]    ?lstr29_Input_32Capture_32Complete_325ch
0x2000019F      [16]    __Lib_System_4XX_APBAHBPrescTable
0x200001B0       [8]    _encoder_timer_period_ms
0x200001B8       [2]    _pwm_period
0x200001BA       [2]    _poll_flag
0x200001BC      [80]    _fngr_pointer
0x2000020C      [80]    _fngr_middle
0x2000025C      [80]    _fngr_ring
0x200002AC      [80]    _fngr_pinky
0x200002FC      [80]    _fngr_thumb
0x2000034C       [2]    _terminal_print_count
0x20000350       [4]    ___System_CLOCK_IN_KHZ
0x20000354       [4]    __VOLTAGE_RANGE
0x20000358       [4]    _UART_Wr_Ptr
0x2000035C       [4]    _UART_Rd_Ptr
0x20000360       [4]    _UART_Rdy_Ptr
0x20000364       [4]    _UART_Tx_Idle_Ptr
0x20000368       [4]    _tim3_overflow_count
0x2000036C       [4]    _tim2_overflow_count
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x21C4       [2]    ?ICS_ENCODER_TIM_PSC
0x21C6       [2]    ?ICS_SAMPLE_TIM_PSC
0x21C8       [4]    ?ICS_ENCODER_TIM_RELOAD
0x21CC       [4]    ?ICS_MCU_FREQUENCY
0x21D0       [2]    ?ICS_SAMPLE_TIM_RELOAD
0x21D2       [2]    ?ICS_NORMALIZATION_CONSTANT
0x21D4       [2]    ?ICS_EXTEND
0x21D6       [2]    ?ICS_TERMINAL_PRINT_THRESH
0x21D8       [4]    ?ICS_FULLY_EXTENDED
0x21DC      [13]    ?ICS?lstr15_Input_32Capture_32Complete_325ch
0x21E9      [12]    ?ICS?lstr16_Input_32Capture_32Complete_325ch
0x21F5      [10]    ?ICS?lstr17_Input_32Capture_32Complete_325ch
0x21FF      [11]    ?ICS?lstr18_Input_32Capture_32Complete_325ch
0x220A      [11]    ?ICS?lstr19_Input_32Capture_32Complete_325ch
0x2215       [3]    ?ICS?lstr21_Input_32Capture_32Complete_325ch
0x2218       [4]    ?ICS_PWM_FREQ_HZ
0x221C      [22]    ?ICS?lstr14_Input_32Capture_32Complete_325ch
0x2232      [13]    ?ICS?lstr1_Input_32Capture_32Complete_325ch
0x223F      [12]    ?ICS?lstr2_Input_32Capture_32Complete_325ch
0x224B      [10]    ?ICS?lstr3_Input_32Capture_32Complete_325ch
0x2255      [11]    ?ICS?lstr4_Input_32Capture_32Complete_325ch
0x2260      [11]    ?ICS?lstr5_Input_32Capture_32Complete_325ch
0x226B      [26]    ?ICS?lstr6_Input_32Capture_32Complete_325ch
0x2285       [9]    ?ICS?lstr7_Input_32Capture_32Complete_325ch
0x228E      [16]    ?ICS?lstr20_Input_32Capture_32Complete_325ch
0x229E      [36]    ?ICS?lstr22_Input_32Capture_32Complete_325ch
0x22C2       [3]    ?ICS?lstr23_Input_32Capture_32Complete_325ch
0x22C5      [36]    ?ICS?lstr24_Input_32Capture_32Complete_325ch
0x22E9       [8]    ?ICS?lstr25_Input_32Capture_32Complete_325ch
0x22F1      [10]    ?ICS?lstr26_Input_32Capture_32Complete_325ch
0x22FB       [3]    ?ICS?lstr27_Input_32Capture_32Complete_325ch
0x22FE      [36]    ?ICS?lstr28_Input_32Capture_32Complete_325ch
0x2322       [5]    ?ICS?lstr29_Input_32Capture_32Complete_325ch
0x2327      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x2338     [108]    __GPIO_MODULE_TIM1_CH4_PE14
0x23A4     [108]    __GPIO_MODULE_TIM1_CH1_PE9
0x2410     [108]    __GPIO_MODULE_USART1_PA9_10
0x247C     [108]    __GPIO_MODULE_TIM1_CH2_PE11
0x24E8     [108]    __GPIO_MODULE_TIM3_CH2_PC7
0x2554     [108]    __GPIO_MODULE_TIM3_CH1_PC6
0x25C0     [108]    __GPIO_MODULE_TIM3_CH3_PC8
0x262C     [108]    __GPIO_MODULE_TIM2_CH1_PA5
0x2698     [108]    __GPIO_MODULE_TIM3_CH4_PC9
0x2704       [2]    ?ICS_CONTRACT
0x2706      [13]    ?ICS?lstr9_Input_32Capture_32Complete_325ch
0x2713      [12]    ?ICS?lstr10_Input_32Capture_32Complete_325ch
0x271F      [10]    ?ICS?lstr11_Input_32Capture_32Complete_325ch
0x2729      [11]    ?ICS?lstr12_Input_32Capture_32Complete_325ch
0x2734      [11]    ?ICS?lstr13_Input_32Capture_32Complete_325ch
