;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12/2/2016 4:37:02 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x1CF90000  	7417
0x0008	0x198D0000  	6541
0x000C	0x198D0000  	6541
0x0010	0x198D0000  	6541
0x0014	0x198D0000  	6541
0x0018	0x198D0000  	6541
0x001C	0x198D0000  	6541
0x0020	0x198D0000  	6541
0x0024	0x198D0000  	6541
0x0028	0x198D0000  	6541
0x002C	0x198D0000  	6541
0x0030	0x198D0000  	6541
0x0034	0x198D0000  	6541
0x0038	0x198D0000  	6541
0x003C	0x198D0000  	6541
0x0040	0x198D0000  	6541
0x0044	0x198D0000  	6541
0x0048	0x198D0000  	6541
0x004C	0x198D0000  	6541
0x0050	0x198D0000  	6541
0x0054	0x198D0000  	6541
0x0058	0x198D0000  	6541
0x005C	0x198D0000  	6541
0x0060	0x198D0000  	6541
0x0064	0x198D0000  	6541
0x0068	0x198D0000  	6541
0x006C	0x198D0000  	6541
0x0070	0x198D0000  	6541
0x0074	0x198D0000  	6541
0x0078	0x198D0000  	6541
0x007C	0x198D0000  	6541
0x0080	0x198D0000  	6541
0x0084	0x198D0000  	6541
0x0088	0x198D0000  	6541
0x008C	0x198D0000  	6541
0x0090	0x198D0000  	6541
0x0094	0x198D0000  	6541
0x0098	0x198D0000  	6541
0x009C	0x198D0000  	6541
0x00A0	0x198D0000  	6541
0x00A4	0x198D0000  	6541
0x00A8	0x198D0000  	6541
0x00AC	0x198D0000  	6541
0x00B0	0x19150000  	6421
0x00B4	0x17890000  	6025
0x00B8	0x198D0000  	6541
0x00BC	0x198D0000  	6541
0x00C0	0x198D0000  	6541
0x00C4	0x198D0000  	6541
0x00C8	0x198D0000  	6541
0x00CC	0x198D0000  	6541
0x00D0	0x198D0000  	6541
0x00D4	0x198D0000  	6541
0x00D8	0x198D0000  	6541
0x00DC	0x198D0000  	6541
0x00E0	0x198D0000  	6541
0x00E4	0x198D0000  	6541
0x00E8	0x198D0000  	6541
0x00EC	0x198D0000  	6541
0x00F0	0x198D0000  	6541
0x00F4	0x198D0000  	6541
0x00F8	0x198D0000  	6541
0x00FC	0x198D0000  	6541
0x0100	0x198D0000  	6541
0x0104	0x198D0000  	6541
0x0108	0x198D0000  	6541
0x010C	0x198D0000  	6541
0x0110	0x198D0000  	6541
0x0114	0x198D0000  	6541
0x0118	0x198D0000  	6541
0x011C	0x198D0000  	6541
0x0120	0x198D0000  	6541
0x0124	0x198D0000  	6541
0x0128	0x198D0000  	6541
0x012C	0x198D0000  	6541
0x0130	0x198D0000  	6541
0x0134	0x198D0000  	6541
0x0138	0x198D0000  	6541
0x013C	0x198D0000  	6541
0x0140	0x198D0000  	6541
0x0144	0x198D0000  	6541
0x0148	0x198D0000  	6541
0x014C	0x198D0000  	6541
0x0150	0x198D0000  	6541
0x0154	0x198D0000  	6541
0x0158	0x198D0000  	6541
0x015C	0x198D0000  	6541
0x0160	0x198D0000  	6541
0x0164	0x198D0000  	6541
0x0168	0x198D0000  	6541
0x016C	0x198D0000  	6541
0x0170	0x198D0000  	6541
0x0174	0x198D0000  	6541
0x0178	0x198D0000  	6541
0x017C	0x198D0000  	6541
0x0180	0x198D0000  	6541
0x0184	0x198D0000  	6541
; end of ____SysVT
_main:
;Input Capture Four Channel Demo.c, 128 :: 		void main() {
0x1CF8	0xB081    SUB	SP, SP, #4
0x1CFA	0xF7FFFE4B  BL	6548
0x1CFE	0xF7FFFD2D  BL	5980
0x1D02	0xF000FAC3  BL	8844
0x1D06	0xF000F86D  BL	7652
0x1D0A	0xF000FA7F  BL	8716
;Input Capture Four Channel Demo.c, 131 :: 		init_GPIO();                                                            // Configure MCU I/O
0x1D0E	0xF7FFFD05  BL	_init_GPIO+0
;Input Capture Four Channel Demo.c, 134 :: 		strcpy(fngr_pointer.name, "Pointer");
0x1D12	0x4827    LDR	R0, [PC, #156]
0x1D14	0x4601    MOV	R1, R0
0x1D16	0x4827    LDR	R0, [PC, #156]
0x1D18	0xF7FFFB70  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 135 :: 		strcpy(fngr_middle.name, "Middle");
0x1D1C	0x4826    LDR	R0, [PC, #152]
0x1D1E	0x4601    MOV	R1, R0
0x1D20	0x4826    LDR	R0, [PC, #152]
0x1D22	0xF7FFFB6B  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 136 :: 		strcpy(fngr_ring.name, "Ring");
0x1D26	0x4826    LDR	R0, [PC, #152]
0x1D28	0x4601    MOV	R1, R0
0x1D2A	0x4826    LDR	R0, [PC, #152]
0x1D2C	0xF7FFFB66  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 137 :: 		strcpy(fngr_pinky.name, "Pinky");
0x1D30	0x4825    LDR	R0, [PC, #148]
0x1D32	0x4601    MOV	R1, R0
0x1D34	0x4825    LDR	R0, [PC, #148]
0x1D36	0xF7FFFB61  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 138 :: 		strcpy(fngr_thumb.name, "Thumb");
0x1D3A	0x4825    LDR	R0, [PC, #148]
0x1D3C	0x4601    MOV	R1, R0
0x1D3E	0x4825    LDR	R0, [PC, #148]
0x1D40	0xF7FFFB5C  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 142 :: 		motor_1_pwm_init();                                                // Initialize PWM for thumb
0x1D44	0xF7FFFB40  BL	_motor_1_pwm_init+0
;Input Capture Four Channel Demo.c, 143 :: 		init_input_capture();                                                   // Initialize input capture channels
0x1D48	0xF7FFFB6C  BL	_init_input_capture+0
;Input Capture Four Channel Demo.c, 146 :: 		PWM_TIM4_Set_Duty(80*(PWM_PERIOD/100), _PWM_NON_INVERTED, _PWM_CHANNEL1);          // PWM duty cycle to "current_duty" on Timer 1, channel 1
0x1D4C	0x4822    LDR	R0, [PC, #136]
0x1D4E	0x8801    LDRH	R1, [R0, #0]
0x1D50	0x2064    MOVS	R0, #100
0x1D52	0xFBB1F1F0  UDIV	R1, R1, R0
0x1D56	0xB289    UXTH	R1, R1
0x1D58	0x2050    MOVS	R0, #80
0x1D5A	0x4348    MULS	R0, R1, R0
0x1D5C	0x2200    MOVS	R2, #0
0x1D5E	0x2100    MOVS	R1, #0
0x1D60	0xF7FFF90A  BL	_PWM_TIM4_Set_Duty+0
;Input Capture Four Channel Demo.c, 149 :: 		init_UART();                                                            // Configure and Initialize UART serial communications
0x1D64	0xF7FFFC88  BL	_init_UART+0
;Input Capture Four Channel Demo.c, 150 :: 		UART1_Write_Text("\n\n\rProgram Has Started!\n\r");
0x1D68	0x481C    LDR	R0, [PC, #112]
0x1D6A	0xF7FFFCAB  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 151 :: 		delay_ms(500);
0x1D6E	0xF64367FE  MOVW	R7, #16126
0x1D72	0xF2C017AB  MOVT	R7, #427
0x1D76	0xBF00    NOP
0x1D78	0xBF00    NOP
L_main0:
0x1D7A	0x1E7F    SUBS	R7, R7, #1
0x1D7C	0xD1FD    BNE	L_main0
0x1D7E	0xBF00    NOP
0x1D80	0xBF00    NOP
0x1D82	0xBF00    NOP
;Input Capture Four Channel Demo.c, 155 :: 		while(1) {
L_main2:
;Input Capture Four Channel Demo.c, 156 :: 		Delay_ms(1000);                                                        // Print once per second
0x1D84	0xF64757FE  MOVW	R7, #32254
0x1D88	0xF2C03756  MOVT	R7, #854
0x1D8C	0xBF00    NOP
0x1D8E	0xBF00    NOP
L_main4:
0x1D90	0x1E7F    SUBS	R7, R7, #1
0x1D92	0xD1FD    BNE	L_main4
0x1D94	0xBF00    NOP
0x1D96	0xBF00    NOP
0x1D98	0xBF00    NOP
;Input Capture Four Channel Demo.c, 159 :: 		calc_finger_state(&fngr_pointer);                                 // Call state calculation function for each finger
0x1D9A	0x4806    LDR	R0, [PC, #24]
0x1D9C	0xF7FFF9F2  BL	_calc_finger_state+0
;Input Capture Four Channel Demo.c, 168 :: 		print_finger_info(&fngr_pointer);                                 // Print statistics to terminal for each finger
0x1DA0	0x4804    LDR	R0, [PC, #16]
0x1DA2	0xF7FFFA7B  BL	_print_finger_info+0
;Input Capture Four Channel Demo.c, 173 :: 		UART1_Write_Text("\n\n\n\n\n\n\n\r");
0x1DA6	0x480E    LDR	R0, [PC, #56]
0x1DA8	0xF7FFFC8C  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 180 :: 		}
0x1DAC	0xE7EA    B	L_main2
;Input Capture Four Channel Demo.c, 181 :: 		} // **************************** Main ends here
L_end_main:
L__main_end_loop:
0x1DAE	0xE7FE    B	L__main_end_loop
0x1DB0	0x00202000  	?lstr1_Input_32Capture_32Four_32Channel_32Demo+0
0x1DB4	0x011C2000  	_fngr_pointer+0
0x1DB8	0x00282000  	?lstr2_Input_32Capture_32Four_32Channel_32Demo+0
0x1DBC	0x01642000  	_fngr_middle+0
0x1DC0	0x002F2000  	?lstr3_Input_32Capture_32Four_32Channel_32Demo+0
0x1DC4	0x01AC2000  	_fngr_ring+0
0x1DC8	0x00342000  	?lstr4_Input_32Capture_32Four_32Channel_32Demo+0
0x1DCC	0x01F42000  	_fngr_pinky+0
0x1DD0	0x003A2000  	?lstr5_Input_32Capture_32Four_32Channel_32Demo+0
0x1DD4	0x023C2000  	_fngr_thumb+0
0x1DD8	0x01182000  	_PWM_PERIOD+0
0x1DDC	0x00402000  	?lstr6_Input_32Capture_32Four_32Channel_32Demo+0
0x1DE0	0x005A2000  	?lstr7_Input_32Capture_32Four_32Channel_32Demo+0
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x16B0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x16B2	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x16B6	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x16BA	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x16BE	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x16C0	0xB001    ADD	SP, SP, #4
0x16C2	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x16E0	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x16E2	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x16E6	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x16EA	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x16EE	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x16F0	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x16F4	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x16F6	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x16F8	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x16FA	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x16FE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x1702	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x1704	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x1708	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x170A	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x170C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x1710	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x1714	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x1716	0xB001    ADD	SP, SP, #4
0x1718	0x4770    BX	LR
; end of ___FillZeros
_init_GPIO:
;Input Capture Four Channel Demo.c, 281 :: 		void init_GPIO() {
0x171C	0xB081    SUB	SP, SP, #4
0x171E	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Four Channel Demo.c, 284 :: 		GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_0 | _GPIO_PINMASK_1 | _GPIO_PINMASK_2 | _GPIO_PINMASK_3 | _GPIO_PINMASK_4);
0x1722	0x211F    MOVS	R1, #31
0x1724	0x480A    LDR	R0, [PC, #40]
0x1726	0xF7FFFB83  BL	_GPIO_Digital_Input+0
;Input Capture Four Channel Demo.c, 285 :: 		GPIO_Digital_Output(&GPIOD_Base, _GPIO_PINMASK_5);                          // **DEBUG** For timing interrupt handler
0x172A	0xF2400120  MOVW	R1, #32
0x172E	0x4808    LDR	R0, [PC, #32]
0x1730	0xF7FFFA90  BL	_GPIO_Digital_Output+0
;Input Capture Four Channel Demo.c, 287 :: 		GPIO_Digital_Output(&GPIOE_BASE, _GPIO_PINMASK_10);
0x1734	0xF2404100  MOVW	R1, #1024
0x1738	0x4806    LDR	R0, [PC, #24]
0x173A	0xF7FFFA8B  BL	_GPIO_Digital_Output+0
;Input Capture Four Channel Demo.c, 288 :: 		GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12);
0x173E	0xF2410100  MOVW	R1, #4096
0x1742	0x4805    LDR	R0, [PC, #20]
0x1744	0xF7FFFA86  BL	_GPIO_Digital_Output+0
;Input Capture Four Channel Demo.c, 289 :: 		}
L_end_init_GPIO:
0x1748	0xF8DDE000  LDR	LR, [SP, #0]
0x174C	0xB001    ADD	SP, SP, #4
0x174E	0x4770    BX	LR
0x1750	0x0C004002  	GPIOD_BASE+0
0x1754	0x10004002  	GPIOE_BASE+0
0x1758	0x08004002  	GPIOC_BASE+0
; end of _init_GPIO
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0E30	0xB081    SUB	SP, SP, #4
0x0E32	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0x0E36	0xF04F0242  MOV	R2, #66
0x0E3A	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0E3C	0xF7FFFD10  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0x0E40	0xF8DDE000  LDR	LR, [SP, #0]
0x0E44	0xB001    ADD	SP, SP, #4
0x0E46	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0860	0xB084    SUB	SP, SP, #16
0x0862	0xF8CDE000  STR	LR, [SP, #0]
0x0866	0xB28D    UXTH	R5, R1
0x0868	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x086A	0x4B86    LDR	R3, [PC, #536]
0x086C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x0870	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x0872	0x4618    MOV	R0, R3
0x0874	0xF7FFFDCA  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x0878	0xF1B50FFF  CMP	R5, #255
0x087C	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x087E	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x0880	0x4B81    LDR	R3, [PC, #516]
0x0882	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x0886	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x0888	0x4B80    LDR	R3, [PC, #512]
0x088A	0x429E    CMP	R6, R3
0x088C	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x088E	0xF2455355  MOVW	R3, #21845
0x0892	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x0896	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x0898	0x1D3D    ADDS	R5, R7, #4
0x089A	0x682C    LDR	R4, [R5, #0]
0x089C	0xF06F03FF  MVN	R3, #255
0x08A0	0xEA040303  AND	R3, R4, R3, LSL #0
0x08A4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x08A6	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x08AA	0x682C    LDR	R4, [R5, #0]
0x08AC	0xF64F73FF  MOVW	R3, #65535
0x08B0	0xEA440303  ORR	R3, R4, R3, LSL #0
0x08B4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x08B6	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x08B8	0x2E42    CMP	R6, #66
0x08BA	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x08BC	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x08BE	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x08C0	0xF64F73FF  MOVW	R3, #65535
0x08C4	0x429D    CMP	R5, R3
0x08C6	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x08C8	0x4B70    LDR	R3, [PC, #448]
0x08CA	0x429E    CMP	R6, R3
0x08CC	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x08CE	0xF04F3355  MOV	R3, #1431655765
0x08D2	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x08D4	0x1D3C    ADDS	R4, R7, #4
0x08D6	0x2300    MOVS	R3, #0
0x08D8	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x08DA	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x08DE	0xF04F33FF  MOV	R3, #-1
0x08E2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x08E4	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x08E6	0x2E42    CMP	R6, #66
0x08E8	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x08EA	0x2300    MOVS	R3, #0
0x08EC	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x08EE	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x08F0	0xF0060301  AND	R3, R6, #1
0x08F4	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x08F6	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x08F8	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x08FA	0xF0060308  AND	R3, R6, #8
0x08FE	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x0900	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x0902	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x0904	0xF0060304  AND	R3, R6, #4
0x0908	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x090A	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x090C	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x090E	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x0910	0xF4062301  AND	R3, R6, #528384
0x0914	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x0916	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x0918	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x091A	0xF4066300  AND	R3, R6, #2048
0x091E	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x0920	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x0922	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x0924	0xF4066380  AND	R3, R6, #1024
0x0928	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x092A	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x092C	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x092E	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x0930	0xF0060320  AND	R3, R6, #32
0x0934	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x0936	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x0938	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x093A	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x093C	0xF4067380  AND	R3, R6, #256
0x0940	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x0942	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x0944	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x0946	0xF0060380  AND	R3, R6, #128
0x094A	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x094C	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x094E	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x0950	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x0952	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x0956	0x9201    STR	R2, [SP, #4]
0x0958	0xFA1FF985  UXTH	R9, R5
0x095C	0x46B0    MOV	R8, R6
0x095E	0x4606    MOV	R6, R0
0x0960	0x4618    MOV	R0, R3
0x0962	0x460A    MOV	R2, R1
0x0964	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x0966	0xF1BA0F10  CMP	R10, #16
0x096A	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x096E	0xF04F0301  MOV	R3, #1
0x0972	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x0976	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x097A	0x42A3    CMP	R3, R4
0x097C	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x0980	0xEA4F044A  LSL	R4, R10, #1
0x0984	0xF04F0303  MOV	R3, #3
0x0988	0x40A3    LSLS	R3, R4
0x098A	0x43DC    MVN	R4, R3
0x098C	0x683B    LDR	R3, [R7, #0]
0x098E	0x4023    ANDS	R3, R4
0x0990	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x0992	0xEA4F034A  LSL	R3, R10, #1
0x0996	0xFA06F403  LSL	R4, R6, R3
0x099A	0x683B    LDR	R3, [R7, #0]
0x099C	0x4323    ORRS	R3, R4
0x099E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x09A0	0xF008030C  AND	R3, R8, #12
0x09A4	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x09A6	0xF2070508  ADDW	R5, R7, #8
0x09AA	0xEA4F044A  LSL	R4, R10, #1
0x09AE	0xF04F0303  MOV	R3, #3
0x09B2	0x40A3    LSLS	R3, R4
0x09B4	0x43DC    MVN	R4, R3
0x09B6	0x682B    LDR	R3, [R5, #0]
0x09B8	0x4023    ANDS	R3, R4
0x09BA	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x09BC	0xF2070508  ADDW	R5, R7, #8
0x09C0	0xEA4F034A  LSL	R3, R10, #1
0x09C4	0xFA02F403  LSL	R4, R2, R3
0x09C8	0x682B    LDR	R3, [R5, #0]
0x09CA	0x4323    ORRS	R3, R4
0x09CC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x09CE	0x1D3D    ADDS	R5, R7, #4
0x09D0	0xFA1FF48A  UXTH	R4, R10
0x09D4	0xF04F0301  MOV	R3, #1
0x09D8	0x40A3    LSLS	R3, R4
0x09DA	0x43DC    MVN	R4, R3
0x09DC	0x682B    LDR	R3, [R5, #0]
0x09DE	0x4023    ANDS	R3, R4
0x09E0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x09E2	0x1D3D    ADDS	R5, R7, #4
0x09E4	0xFA1FF48A  UXTH	R4, R10
0x09E8	0xB28B    UXTH	R3, R1
0x09EA	0xFA03F404  LSL	R4, R3, R4
0x09EE	0xB2A4    UXTH	R4, R4
0x09F0	0x682B    LDR	R3, [R5, #0]
0x09F2	0x4323    ORRS	R3, R4
0x09F4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x09F6	0xF207050C  ADDW	R5, R7, #12
0x09FA	0xFA1FF38A  UXTH	R3, R10
0x09FE	0x005C    LSLS	R4, R3, #1
0x0A00	0xB2A4    UXTH	R4, R4
0x0A02	0xF04F0303  MOV	R3, #3
0x0A06	0x40A3    LSLS	R3, R4
0x0A08	0x43DC    MVN	R4, R3
0x0A0A	0x682B    LDR	R3, [R5, #0]
0x0A0C	0x4023    ANDS	R3, R4
0x0A0E	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x0A10	0xF207050C  ADDW	R5, R7, #12
0x0A14	0xEA4F034A  LSL	R3, R10, #1
0x0A18	0xFA00F403  LSL	R4, R0, R3
0x0A1C	0x682B    LDR	R3, [R5, #0]
0x0A1E	0x4323    ORRS	R3, R4
0x0A20	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x0A22	0xF0080308  AND	R3, R8, #8
0x0A26	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x0A28	0xF4080370  AND	R3, R8, #15728640
0x0A2C	0x0D1B    LSRS	R3, R3, #20
0x0A2E	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x0A32	0xF1BA0F07  CMP	R10, #7
0x0A36	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x0A38	0xF2070324  ADDW	R3, R7, #36
0x0A3C	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x0A3E	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x0A42	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x0A44	0xF2070320  ADDW	R3, R7, #32
0x0A48	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x0A4A	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x0A4C	0x00AC    LSLS	R4, R5, #2
0x0A4E	0xF04F030F  MOV	R3, #15
0x0A52	0x40A3    LSLS	R3, R4
0x0A54	0x43DC    MVN	R4, R3
0x0A56	0x9B02    LDR	R3, [SP, #8]
0x0A58	0x681B    LDR	R3, [R3, #0]
0x0A5A	0xEA030404  AND	R4, R3, R4, LSL #0
0x0A5E	0x9B02    LDR	R3, [SP, #8]
0x0A60	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x0A62	0xF89D400C  LDRB	R4, [SP, #12]
0x0A66	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x0A68	0x409C    LSLS	R4, R3
0x0A6A	0x9B02    LDR	R3, [SP, #8]
0x0A6C	0x681B    LDR	R3, [R3, #0]
0x0A6E	0xEA430404  ORR	R4, R3, R4, LSL #0
0x0A72	0x9B02    LDR	R3, [SP, #8]
0x0A74	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x0A76	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x0A7A	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x0A7C	0xF8DDE000  LDR	LR, [SP, #0]
0x0A80	0xB004    ADD	SP, SP, #16
0x0A82	0x4770    BX	LR
0x0A84	0xFC00FFFF  	#-1024
0x0A88	0x0000FFFF  	#-65536
0x0A8C	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x040C	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x040E	0x491E    LDR	R1, [PC, #120]
0x0410	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0414	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x0416	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0418	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x041A	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x041C	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x041E	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x0420	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0422	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0424	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0426	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0428	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x042A	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x042C	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x042E	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0430	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0432	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0434	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x0436	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0438	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x043A	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x043E	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0440	0x4912    LDR	R1, [PC, #72]
0x0442	0x4288    CMP	R0, R1
0x0444	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x0446	0x4912    LDR	R1, [PC, #72]
0x0448	0x4288    CMP	R0, R1
0x044A	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x044C	0x4911    LDR	R1, [PC, #68]
0x044E	0x4288    CMP	R0, R1
0x0450	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x0452	0x4911    LDR	R1, [PC, #68]
0x0454	0x4288    CMP	R0, R1
0x0456	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x0458	0x4910    LDR	R1, [PC, #64]
0x045A	0x4288    CMP	R0, R1
0x045C	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x045E	0x4910    LDR	R1, [PC, #64]
0x0460	0x4288    CMP	R0, R1
0x0462	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x0464	0x490F    LDR	R1, [PC, #60]
0x0466	0x4288    CMP	R0, R1
0x0468	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x046A	0x490F    LDR	R1, [PC, #60]
0x046C	0x4288    CMP	R0, R1
0x046E	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x0470	0x490E    LDR	R1, [PC, #56]
0x0472	0x4288    CMP	R0, R1
0x0474	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x0476	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x0478	0x490D    LDR	R1, [PC, #52]
0x047A	0x6809    LDR	R1, [R1, #0]
0x047C	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0480	0x490B    LDR	R1, [PC, #44]
0x0482	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x0484	0xB001    ADD	SP, SP, #4
0x0486	0x4770    BX	LR
0x0488	0xFC00FFFF  	#-1024
0x048C	0x00004002  	#1073872896
0x0490	0x04004002  	#1073873920
0x0494	0x08004002  	#1073874944
0x0498	0x0C004002  	#1073875968
0x049C	0x10004002  	#1073876992
0x04A0	0x14004002  	#1073878016
0x04A4	0x18004002  	#1073879040
0x04A8	0x1C004002  	#1073880064
0x04AC	0x20004002  	#1073881088
0x04B0	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0C54	0xB081    SUB	SP, SP, #4
0x0C56	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x0C5A	0x4A04    LDR	R2, [PC, #16]
0x0C5C	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0C5E	0xF7FFFDFF  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x0C62	0xF8DDE000  LDR	LR, [SP, #0]
0x0C66	0xB001    ADD	SP, SP, #4
0x0C68	0x4770    BX	LR
0x0C6A	0xBF00    NOP
0x0C6C	0x00140008  	#524308
; end of _GPIO_Digital_Output
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x13FC	0xB081    SUB	SP, SP, #4
0x13FE	0x9100    STR	R1, [SP, #0]
0x1400	0x4601    MOV	R1, R0
0x1402	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x1404	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x1406	0x461C    MOV	R4, R3
0x1408	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x140A	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x140C	0x4603    MOV	R3, R0
0x140E	0x1C42    ADDS	R2, R0, #1
0x1410	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x1412	0x781A    LDRB	R2, [R3, #0]
0x1414	0x7022    STRB	R2, [R4, #0]
0x1416	0x7822    LDRB	R2, [R4, #0]
0x1418	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x141A	0x462B    MOV	R3, R5
0x141C	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x141E	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x1420	0xB001    ADD	SP, SP, #4
0x1422	0x4770    BX	LR
; end of _strcpy
_motor_1_pwm_init:
;Input Capture Four Channel Demo.c, 302 :: 		void motor_1_pwm_init() {
0x13C8	0xB081    SUB	SP, SP, #4
0x13CA	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Four Channel Demo.c, 303 :: 		PWM_PERIOD = PWM_TIM4_Init(10000);                               // Set PWM base frequency
0x13CE	0xF2427010  MOVW	R0, #10000
0x13D2	0xF7FFFD65  BL	_PWM_TIM4_Init+0
0x13D6	0x4907    LDR	R1, [PC, #28]
0x13D8	0x8008    STRH	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 304 :: 		PWM_TIM4_Set_Duty(0, _PWM_NON_INVERTED, _PWM_CHANNEL1);          // PWM duty cycle to "current_duty" on Timer 1, channel 1
0x13DA	0x2200    MOVS	R2, #0
0x13DC	0x2100    MOVS	R1, #0
0x13DE	0x2000    MOVS	R0, #0
0x13E0	0xF7FFFDCA  BL	_PWM_TIM4_Set_Duty+0
;Input Capture Four Channel Demo.c, 305 :: 		PWM_TIM4_Start(_PWM_CHANNEL1, &_GPIO_MODULE_TIM4_CH1_PB6);       // Start PWM
0x13E4	0x4904    LDR	R1, [PC, #16]
0x13E6	0x2000    MOVS	R0, #0
0x13E8	0xF7FFFDB8  BL	_PWM_TIM4_Start+0
;Input Capture Four Channel Demo.c, 306 :: 		}
L_end_motor_1_pwm_init:
0x13EC	0xF8DDE000  LDR	LR, [SP, #0]
0x13F0	0xB001    ADD	SP, SP, #4
0x13F2	0x4770    BX	LR
0x13F4	0x01182000  	_PWM_PERIOD+0
0x13F8	0x1F840000  	__GPIO_MODULE_TIM4_CH1_PB6+0
; end of _motor_1_pwm_init
_PWM_TIM4_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 254 :: 		
; freq_hz start address is: 0 (R0)
0x0EA0	0xB081    SUB	SP, SP, #4
0x0EA2	0xF8CDE000  STR	LR, [SP, #0]
; freq_hz end address is: 0 (R0)
; freq_hz start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 255 :: 		
0x0EA6	0x4601    MOV	R1, R0
; freq_hz end address is: 0 (R0)
0x0EA8	0x4803    LDR	R0, [PC, #12]
0x0EAA	0xF7FFFE15  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 256 :: 		
L_end_PWM_TIM4_Init:
0x0EAE	0xF8DDE000  LDR	LR, [SP, #0]
0x0EB2	0xB001    ADD	SP, SP, #4
0x0EB4	0x4770    BX	LR
0x0EB6	0xBF00    NOP
0x0EB8	0x08004000  	TIM4_CR1+0
; end of _PWM_TIM4_Init
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init:
;__Lib_PWM_1234589_12_10_11_13_14.c, 35 :: 		
; freq_hz start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x0AD8	0xB081    SUB	SP, SP, #4
0x0ADA	0xF8CDE000  STR	LR, [SP, #0]
0x0ADE	0x460C    MOV	R4, R1
0x0AE0	0x4601    MOV	R1, R0
; freq_hz end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 4 (R1)
; freq_hz start address is: 16 (R4)
;__Lib_PWM_1234589_12_10_11_13_14.c, 39 :: 		
0x0AE2	0xF06F02FF  MVN	R2, #255
0x0AE6	0xEA010202  AND	R2, R1, R2, LSL #0
; _PWM_Base start address is: 0 (R0)
0x0AEA	0x4610    MOV	R0, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 41 :: 		
0x0AEC	0xE03B    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init0
; _PWM_Base end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 43 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init2:
;__Lib_PWM_1234589_12_10_11_13_14.c, 44 :: 		
0x0AEE	0x2301    MOVS	R3, #1
0x0AF0	0xB25B    SXTB	R3, R3
0x0AF2	0x4A41    LDR	R2, [PC, #260]
0x0AF4	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 45 :: 		
0x0AF6	0xE05A    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 48 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init3:
;__Lib_PWM_1234589_12_10_11_13_14.c, 49 :: 		
0x0AF8	0x2301    MOVS	R3, #1
0x0AFA	0xB25B    SXTB	R3, R3
0x0AFC	0x4A3F    LDR	R2, [PC, #252]
0x0AFE	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 50 :: 		
0x0B00	0xE055    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 53 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init4:
;__Lib_PWM_1234589_12_10_11_13_14.c, 54 :: 		
0x0B02	0x2301    MOVS	R3, #1
0x0B04	0xB25B    SXTB	R3, R3
0x0B06	0x4A3E    LDR	R2, [PC, #248]
0x0B08	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 55 :: 		
0x0B0A	0xE050    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 58 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init5:
;__Lib_PWM_1234589_12_10_11_13_14.c, 59 :: 		
0x0B0C	0x2301    MOVS	R3, #1
0x0B0E	0xB25B    SXTB	R3, R3
0x0B10	0x4A3C    LDR	R2, [PC, #240]
0x0B12	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 60 :: 		
0x0B14	0xE04B    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 63 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init6:
;__Lib_PWM_1234589_12_10_11_13_14.c, 64 :: 		
0x0B16	0x2301    MOVS	R3, #1
0x0B18	0xB25B    SXTB	R3, R3
0x0B1A	0x4A3B    LDR	R2, [PC, #236]
0x0B1C	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 65 :: 		
0x0B1E	0xE046    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 68 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init7:
;__Lib_PWM_1234589_12_10_11_13_14.c, 69 :: 		
0x0B20	0x2301    MOVS	R3, #1
0x0B22	0xB25B    SXTB	R3, R3
0x0B24	0x4A39    LDR	R2, [PC, #228]
0x0B26	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 70 :: 		
0x0B28	0xE041    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 73 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init8:
;__Lib_PWM_1234589_12_10_11_13_14.c, 74 :: 		
0x0B2A	0x2301    MOVS	R3, #1
0x0B2C	0xB25B    SXTB	R3, R3
0x0B2E	0x4A38    LDR	R2, [PC, #224]
0x0B30	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 75 :: 		
0x0B32	0xE03C    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 78 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init9:
;__Lib_PWM_1234589_12_10_11_13_14.c, 79 :: 		
0x0B34	0x2301    MOVS	R3, #1
0x0B36	0xB25B    SXTB	R3, R3
0x0B38	0x4A36    LDR	R2, [PC, #216]
0x0B3A	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 80 :: 		
0x0B3C	0xE037    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 83 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init10:
;__Lib_PWM_1234589_12_10_11_13_14.c, 84 :: 		
0x0B3E	0x2301    MOVS	R3, #1
0x0B40	0xB25B    SXTB	R3, R3
0x0B42	0x4A35    LDR	R2, [PC, #212]
0x0B44	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 85 :: 		
0x0B46	0xE032    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 88 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init11:
;__Lib_PWM_1234589_12_10_11_13_14.c, 89 :: 		
0x0B48	0x2301    MOVS	R3, #1
0x0B4A	0xB25B    SXTB	R3, R3
0x0B4C	0x4A33    LDR	R2, [PC, #204]
0x0B4E	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 90 :: 		
0x0B50	0xE02D    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 93 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init12:
;__Lib_PWM_1234589_12_10_11_13_14.c, 94 :: 		
0x0B52	0x2301    MOVS	R3, #1
0x0B54	0xB25B    SXTB	R3, R3
0x0B56	0x4A32    LDR	R2, [PC, #200]
0x0B58	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 95 :: 		
0x0B5A	0xE028    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 98 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init13:
;__Lib_PWM_1234589_12_10_11_13_14.c, 99 :: 		
0x0B5C	0x2301    MOVS	R3, #1
0x0B5E	0xB25B    SXTB	R3, R3
0x0B60	0x4A30    LDR	R2, [PC, #192]
0x0B62	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 100 :: 		
0x0B64	0xE023    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1
;__Lib_PWM_1234589_12_10_11_13_14.c, 102 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init0:
; _PWM_Base start address is: 0 (R0)
0x0B66	0x4A30    LDR	R2, [PC, #192]
0x0B68	0x4290    CMP	R0, R2
0x0B6A	0xD0C0    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init2
0x0B6C	0xF1B04F80  CMP	R0, #1073741824
0x0B70	0xD0C2    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init3
0x0B72	0x4A2E    LDR	R2, [PC, #184]
0x0B74	0x4290    CMP	R0, R2
0x0B76	0xD0C4    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init4
0x0B78	0x4A2D    LDR	R2, [PC, #180]
0x0B7A	0x4290    CMP	R0, R2
0x0B7C	0xD0C6    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init5
0x0B7E	0x4A2D    LDR	R2, [PC, #180]
0x0B80	0x4290    CMP	R0, R2
0x0B82	0xD0C8    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init6
0x0B84	0x4A2C    LDR	R2, [PC, #176]
0x0B86	0x4290    CMP	R0, R2
0x0B88	0xD0CA    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init7
0x0B8A	0x4A2C    LDR	R2, [PC, #176]
0x0B8C	0x4290    CMP	R0, R2
0x0B8E	0xD0CC    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init8
0x0B90	0x4A2B    LDR	R2, [PC, #172]
0x0B92	0x4290    CMP	R0, R2
0x0B94	0xD0CE    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init9
0x0B96	0x4A2B    LDR	R2, [PC, #172]
0x0B98	0x4290    CMP	R0, R2
0x0B9A	0xD0D0    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init10
0x0B9C	0x4A2A    LDR	R2, [PC, #168]
0x0B9E	0x4290    CMP	R0, R2
0x0BA0	0xD0D2    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init11
0x0BA2	0x4A2A    LDR	R2, [PC, #168]
0x0BA4	0x4290    CMP	R0, R2
0x0BA6	0xD0D4    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init12
0x0BA8	0x4A29    LDR	R2, [PC, #164]
0x0BAA	0x4290    CMP	R0, R2
0x0BAC	0xD0D6    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init13
; _PWM_Base end address is: 0 (R0)
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init1:
;__Lib_PWM_1234589_12_10_11_13_14.c, 104 :: 		
0x0BAE	0xF7FFFBFB  BL	_Get_Fosc_kHz+0
; clk start address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 106 :: 		
0x0BB2	0x680B    LDR	R3, [R1, #0]
0x0BB4	0xF06F0210  MVN	R2, #16
0x0BB8	0xEA030202  AND	R2, R3, R2, LSL #0
0x0BBC	0x600A    STR	R2, [R1, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 108 :: 		
0x0BBE	0xF24032E8  MOVW	R2, #1000
0x0BC2	0x4342    MULS	R2, R0, R2
; clk end address is: 0 (R0)
0x0BC4	0xFBB2F3F4  UDIV	R3, R2, R4
; freq_hz end address is: 16 (R4)
; per_reg start address is: 0 (R0)
0x0BC8	0x4618    MOV	R0, R3
;__Lib_PWM_1234589_12_10_11_13_14.c, 109 :: 		
0x0BCA	0xF64F72FF  MOVW	R2, #65535
0x0BCE	0xFBB3F2F2  UDIV	R2, R3, R2
; prescaler start address is: 16 (R4)
0x0BD2	0x4614    MOV	R4, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 110 :: 		
0x0BD4	0xF2010328  ADDW	R3, R1, #40
0x0BD8	0xB292    UXTH	R2, R2
0x0BDA	0x601A    STR	R2, [R3, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 112 :: 		
0x0BDC	0x1C62    ADDS	R2, R4, #1
; prescaler end address is: 16 (R4)
0x0BDE	0xFBB0F2F2  UDIV	R2, R0, R2
0x0BE2	0x4610    MOV	R0, R2
;__Lib_PWM_1234589_12_10_11_13_14.c, 114 :: 		
0x0BE4	0xF201032C  ADDW	R3, R1, #44
; PWM_Base end address is: 4 (R1)
0x0BE8	0xB292    UXTH	R2, R2
0x0BEA	0x601A    STR	R2, [R3, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 116 :: 		
0x0BEC	0xB280    UXTH	R0, R0
; per_reg end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 117 :: 		
L_end_PWM_TIMx_Init:
0x0BEE	0xF8DDE000  LDR	LR, [SP, #0]
0x0BF2	0xB001    ADD	SP, SP, #4
0x0BF4	0x4770    BX	LR
0x0BF6	0xBF00    NOP
0x0BF8	0x08804247  	RCC_APB2ENR+0
0x0BFC	0x08004247  	RCC_APB1ENR+0
0x0C00	0x08044247  	RCC_APB1ENR+0
0x0C04	0x08084247  	RCC_APB1ENR+0
0x0C08	0x080C4247  	RCC_APB1ENR+0
0x0C0C	0x08844247  	RCC_APB2ENR+0
0x0C10	0x08C04247  	RCC_APB2ENR+0
0x0C14	0x08C44247  	RCC_APB2ENR+0
0x0C18	0x08C84247  	RCC_APB2ENR+0
0x0C1C	0x08184247  	RCC_APB1ENR+0
0x0C20	0x081C4247  	RCC_APB1ENR+0
0x0C24	0x08204247  	RCC_APB1ENR+0
0x0C28	0x00004001  	#1073807360
0x0C2C	0x04004000  	#1073742848
0x0C30	0x08004000  	#1073743872
0x0C34	0x0C004000  	#1073744896
0x0C38	0x04004001  	#1073808384
0x0C3C	0x40004001  	#1073823744
0x0C40	0x44004001  	#1073824768
0x0C44	0x48004001  	#1073825792
0x0C48	0x18004000  	#1073747968
0x0C4C	0x1C004000  	#1073748992
0x0C50	0x20004000  	#1073750016
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
0x03A8	0xB081    SUB	SP, SP, #4
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x03AA	0x4802    LDR	R0, [PC, #8]
0x03AC	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x03AE	0xB001    ADD	SP, SP, #4
0x03B0	0x4770    BX	LR
0x03B2	0xBF00    NOP
0x03B4	0x02842000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_PWM_TIM4_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 258 :: 		
; channel start address is: 8 (R2)
; inverted start address is: 4 (R1)
; duty_ratio start address is: 0 (R0)
0x0F78	0xB081    SUB	SP, SP, #4
0x0F7A	0xF8CDE000  STR	LR, [SP, #0]
; channel end address is: 8 (R2)
; inverted end address is: 4 (R1)
; duty_ratio end address is: 0 (R0)
; duty_ratio start address is: 0 (R0)
; inverted start address is: 4 (R1)
; channel start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 259 :: 		
0x0F7E	0xB2D3    UXTB	R3, R2
; channel end address is: 8 (R2)
0x0F80	0xB2CA    UXTB	R2, R1
; inverted end address is: 4 (R1)
0x0F82	0xB281    UXTH	R1, R0
; duty_ratio end address is: 0 (R0)
0x0F84	0x4803    LDR	R0, [PC, #12]
0x0F86	0xF7FFFD83  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 260 :: 		
L_end_PWM_TIM4_Set_Duty:
0x0F8A	0xF8DDE000  LDR	LR, [SP, #0]
0x0F8E	0xB001    ADD	SP, SP, #4
0x0F90	0x4770    BX	LR
0x0F92	0xBF00    NOP
0x0F94	0x08004000  	TIM4_CR1+0
; end of _PWM_TIM4_Set_Duty
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty:
;__Lib_PWM_1234589_12_10_11_13_14.c, 121 :: 		
; channel start address is: 12 (R3)
; inverted start address is: 8 (R2)
; duty_ratio start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x0A90	0xB081    SUB	SP, SP, #4
0x0A92	0xB2D5    UXTB	R5, R2
; channel end address is: 12 (R3)
; inverted end address is: 8 (R2)
; duty_ratio end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 0 (R0)
; duty_ratio start address is: 4 (R1)
; inverted start address is: 20 (R5)
; channel start address is: 12 (R3)
;__Lib_PWM_1234589_12_10_11_13_14.c, 126 :: 		
0x0A94	0xF2000420  ADDW	R4, R0, #32
0x0A98	0x6822    LDR	R2, [R4, #0]
; tmpLong start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 127 :: 		
0x0A9A	0x2D01    CMP	R5, #1
0x0A9C	0xD108    BNE	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty14
; inverted end address is: 20 (R5)
;__Lib_PWM_1234589_12_10_11_13_14.c, 128 :: 		
0x0A9E	0x009C    LSLS	R4, R3, #2
0x0AA0	0xB224    SXTH	R4, R4
0x0AA2	0x1C65    ADDS	R5, R4, #1
0x0AA4	0xB22D    SXTH	R5, R5
0x0AA6	0xF04F0401  MOV	R4, #1
0x0AAA	0x40AC    LSLS	R4, R5
0x0AAC	0x4322    ORRS	R2, R4
0x0AAE	0xE008    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty15
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty14:
;__Lib_PWM_1234589_12_10_11_13_14.c, 130 :: 		
0x0AB0	0x009C    LSLS	R4, R3, #2
0x0AB2	0xB224    SXTH	R4, R4
0x0AB4	0x1C65    ADDS	R5, R4, #1
0x0AB6	0xB22D    SXTH	R5, R5
0x0AB8	0xF04F0401  MOV	R4, #1
0x0ABC	0x40AC    LSLS	R4, R5
0x0ABE	0x43E4    MVN	R4, R4
0x0AC0	0x4022    ANDS	R2, R4
; tmpLong end address is: 8 (R2)
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty15:
;__Lib_PWM_1234589_12_10_11_13_14.c, 131 :: 		
; tmpLong start address is: 8 (R2)
0x0AC2	0xF2000420  ADDW	R4, R0, #32
0x0AC6	0x6022    STR	R2, [R4, #0]
; tmpLong end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 134 :: 		
0x0AC8	0xF2000534  ADDW	R5, R0, #52
; PWM_Base end address is: 0 (R0)
0x0ACC	0x009C    LSLS	R4, R3, #2
; channel end address is: 12 (R3)
0x0ACE	0x192C    ADDS	R4, R5, R4
0x0AD0	0x6021    STR	R1, [R4, #0]
; duty_ratio end address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 135 :: 		
L_end_PWM_TIMx_Set_Duty:
0x0AD2	0xB001    ADD	SP, SP, #4
0x0AD4	0x4770    BX	LR
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty
_PWM_TIM4_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 262 :: 		
; module start address is: 4 (R1)
; channel start address is: 0 (R0)
0x0F5C	0xB081    SUB	SP, SP, #4
0x0F5E	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; channel end address is: 0 (R0)
; channel start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 263 :: 		
0x0F62	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x0F64	0xB2C1    UXTB	R1, R0
; channel end address is: 0 (R0)
0x0F66	0x4803    LDR	R0, [PC, #12]
0x0F68	0xF7FFFAB2  BL	__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start+0
;__Lib_PWM_1234589_12_10_11_13_14.c, 264 :: 		
L_end_PWM_TIM4_Start:
0x0F6C	0xF8DDE000  LDR	LR, [SP, #0]
0x0F70	0xB001    ADD	SP, SP, #4
0x0F72	0x4770    BX	LR
0x0F74	0x08004000  	TIM4_CR1+0
; end of _PWM_TIM4_Start
__Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start:
;__Lib_PWM_1234589_12_10_11_13_14.c, 139 :: 		
; module start address is: 8 (R2)
; channel start address is: 4 (R1)
; PWM_Base start address is: 0 (R0)
0x04D0	0xB083    SUB	SP, SP, #12
0x04D2	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 8 (R2)
; channel end address is: 4 (R1)
; PWM_Base end address is: 0 (R0)
; PWM_Base start address is: 0 (R0)
; channel start address is: 4 (R1)
; module start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 142 :: 		
0x04D6	0xF88D1004  STRB	R1, [SP, #4]
; module end address is: 8 (R2)
0x04DA	0x9002    STR	R0, [SP, #8]
0x04DC	0x4610    MOV	R0, R2
0x04DE	0xF7FFFF3F  BL	_GPIO_Alternate_Function_Enable+0
0x04E2	0x9802    LDR	R0, [SP, #8]
0x04E4	0xF89D1004  LDRB	R1, [SP, #4]
;__Lib_PWM_1234589_12_10_11_13_14.c, 145 :: 		
0x04E8	0xF2000320  ADDW	R3, R0, #32
0x04EC	0x681A    LDR	R2, [R3, #0]
; tmpLong start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 146 :: 		
0x04EE	0x008C    LSLS	R4, R1, #2
0x04F0	0xB224    SXTH	R4, R4
0x04F2	0xF04F0301  MOV	R3, #1
0x04F6	0x40A3    LSLS	R3, R4
0x04F8	0x431A    ORRS	R2, R3
;__Lib_PWM_1234589_12_10_11_13_14.c, 147 :: 		
0x04FA	0xF2000320  ADDW	R3, R0, #32
0x04FE	0x601A    STR	R2, [R3, #0]
; tmpLong end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 150 :: 		
0x0500	0xF2000444  ADDW	R4, R0, #68
0x0504	0x6823    LDR	R3, [R4, #0]
0x0506	0xF4434300  ORR	R3, R3, #32768
0x050A	0x6023    STR	R3, [R4, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 152 :: 		
0x050C	0xF2000218  ADDW	R2, R0, #24
; tmpLongPtr start address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 154 :: 		
0x0510	0x2901    CMP	R1, #1
0x0512	0xD901    BLS	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start19
;__Lib_PWM_1234589_12_10_11_13_14.c, 155 :: 		
0x0514	0x1D12    ADDS	R2, R2, #4
; tmpLongPtr end address is: 8 (R2)
0x0516	0xE7FF    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start16
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start19:
;__Lib_PWM_1234589_12_10_11_13_14.c, 154 :: 		
;__Lib_PWM_1234589_12_10_11_13_14.c, 155 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start16:
;__Lib_PWM_1234589_12_10_11_13_14.c, 157 :: 		
; tmpLongPtr start address is: 8 (R2)
0x0518	0x084B    LSRS	R3, R1, #1
0x051A	0xB2DB    UXTB	R3, R3
0x051C	0x005B    LSLS	R3, R3, #1
0x051E	0xB21B    SXTH	R3, R3
0x0520	0x428B    CMP	R3, R1
0x0522	0xD00A    BEQ	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start17
; channel end address is: 4 (R1)
;__Lib_PWM_1234589_12_10_11_13_14.c, 159 :: 		
0x0524	0x6814    LDR	R4, [R2, #0]
0x0526	0xF46F53D8  MVN	R3, #6912
0x052A	0xEA040303  AND	R3, R4, R3, LSL #0
0x052E	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 161 :: 		
0x0530	0x6813    LDR	R3, [R2, #0]
0x0532	0xF44343C0  ORR	R3, R3, #24576
0x0536	0x6013    STR	R3, [R2, #0]
; tmpLongPtr end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 162 :: 		
0x0538	0xE009    B	L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start18
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start17:
;__Lib_PWM_1234589_12_10_11_13_14.c, 165 :: 		
; tmpLongPtr start address is: 8 (R2)
0x053A	0x6814    LDR	R4, [R2, #0]
0x053C	0xF06F031B  MVN	R3, #27
0x0540	0xEA040303  AND	R3, R4, R3, LSL #0
0x0544	0x6013    STR	R3, [R2, #0]
;__Lib_PWM_1234589_12_10_11_13_14.c, 167 :: 		
0x0546	0x6813    LDR	R3, [R2, #0]
0x0548	0xF0430360  ORR	R3, R3, #96
0x054C	0x6013    STR	R3, [R2, #0]
; tmpLongPtr end address is: 8 (R2)
;__Lib_PWM_1234589_12_10_11_13_14.c, 168 :: 		
L___Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start18:
;__Lib_PWM_1234589_12_10_11_13_14.c, 171 :: 		
0x054E	0x6803    LDR	R3, [R0, #0]
0x0550	0xF0430301  ORR	R3, R3, #1
0x0554	0x6003    STR	R3, [R0, #0]
; PWM_Base end address is: 0 (R0)
;__Lib_PWM_1234589_12_10_11_13_14.c, 172 :: 		
L_end_PWM_TIMx_Start:
0x0556	0xF8DDE000  LDR	LR, [SP, #0]
0x055A	0xB003    ADD	SP, SP, #12
0x055C	0x4770    BX	LR
; end of __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x0360	0xB083    SUB	SP, SP, #12
0x0362	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x0366	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x0368	0x00A1    LSLS	R1, R4, #2
0x036A	0x1841    ADDS	R1, R0, R1
0x036C	0x6809    LDR	R1, [R1, #0]
0x036E	0xF1B13FFF  CMP	R1, #-1
0x0372	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x0374	0xF2000134  ADDW	R1, R0, #52
0x0378	0x00A3    LSLS	R3, R4, #2
0x037A	0x18C9    ADDS	R1, R1, R3
0x037C	0x6809    LDR	R1, [R1, #0]
0x037E	0x460A    MOV	R2, R1
0x0380	0x18C1    ADDS	R1, R0, R3
0x0382	0x6809    LDR	R1, [R1, #0]
0x0384	0x9001    STR	R0, [SP, #4]
0x0386	0xF8AD4008  STRH	R4, [SP, #8]
0x038A	0x4608    MOV	R0, R1
0x038C	0x4611    MOV	R1, R2
0x038E	0xF7FFFF0B  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x0392	0xF8BD4008  LDRH	R4, [SP, #8]
0x0396	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x0398	0x1C64    ADDS	R4, R4, #1
0x039A	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x039C	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x039E	0xF8DDE000  LDR	LR, [SP, #0]
0x03A2	0xB003    ADD	SP, SP, #12
0x03A4	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x01A8	0xB083    SUB	SP, SP, #12
0x01AA	0xF8CDE000  STR	LR, [SP, #0]
0x01AE	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x01B0	0xF00403FF  AND	R3, R4, #255
0x01B4	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x01B6	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x01B8	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x01BC	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x01BE	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x01C0	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x01C4	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x01C6	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x01C8	0x4A2D    LDR	R2, [PC, #180]
0x01CA	0x9202    STR	R2, [SP, #8]
0x01CC	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x01CE	0x4A2D    LDR	R2, [PC, #180]
0x01D0	0x9202    STR	R2, [SP, #8]
0x01D2	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x01D4	0x4A2C    LDR	R2, [PC, #176]
0x01D6	0x9202    STR	R2, [SP, #8]
0x01D8	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x01DA	0x4A2C    LDR	R2, [PC, #176]
0x01DC	0x9202    STR	R2, [SP, #8]
0x01DE	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x01E0	0x4A2B    LDR	R2, [PC, #172]
0x01E2	0x9202    STR	R2, [SP, #8]
0x01E4	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x01E6	0x4A2B    LDR	R2, [PC, #172]
0x01E8	0x9202    STR	R2, [SP, #8]
0x01EA	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x01EC	0x4A2A    LDR	R2, [PC, #168]
0x01EE	0x9202    STR	R2, [SP, #8]
0x01F0	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x01F2	0x4A2A    LDR	R2, [PC, #168]
0x01F4	0x9202    STR	R2, [SP, #8]
0x01F6	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x01F8	0x4A29    LDR	R2, [PC, #164]
0x01FA	0x9202    STR	R2, [SP, #8]
0x01FC	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x01FE	0x2800    CMP	R0, #0
0x0200	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x0202	0x2801    CMP	R0, #1
0x0204	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x0206	0x2802    CMP	R0, #2
0x0208	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x020A	0x2803    CMP	R0, #3
0x020C	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x020E	0x2804    CMP	R0, #4
0x0210	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x0212	0x2805    CMP	R0, #5
0x0214	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x0216	0x2806    CMP	R0, #6
0x0218	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x021A	0x2807    CMP	R0, #7
0x021C	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x021E	0x2808    CMP	R0, #8
0x0220	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x0222	0x2201    MOVS	R2, #1
0x0224	0xB212    SXTH	R2, R2
0x0226	0xFA02F20C  LSL	R2, R2, R12
0x022A	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x022E	0x9802    LDR	R0, [SP, #8]
0x0230	0x460A    MOV	R2, R1
0x0232	0xF8BD1004  LDRH	R1, [SP, #4]
0x0236	0xF000FB13  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x023A	0x9A02    LDR	R2, [SP, #8]
0x023C	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x0240	0xF1BC0F07  CMP	R12, #7
0x0244	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x0246	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x0248	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x024A	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x024E	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x0250	0x9101    STR	R1, [SP, #4]
0x0252	0x4601    MOV	R1, R0
0x0254	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x0256	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x0258	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x025A	0x0083    LSLS	R3, R0, #2
0x025C	0xF04F020F  MOV	R2, #15
0x0260	0x409A    LSLS	R2, R3
0x0262	0x43D3    MVN	R3, R2
0x0264	0x680A    LDR	R2, [R1, #0]
0x0266	0x401A    ANDS	R2, R3
0x0268	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x026A	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x026C	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x0270	0x680A    LDR	R2, [R1, #0]
0x0272	0x431A    ORRS	R2, R3
0x0274	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x0276	0xF8DDE000  LDR	LR, [SP, #0]
0x027A	0xB003    ADD	SP, SP, #12
0x027C	0x4770    BX	LR
0x027E	0xBF00    NOP
0x0280	0x00004002  	#1073872896
0x0284	0x04004002  	#1073873920
0x0288	0x08004002  	#1073874944
0x028C	0x0C004002  	#1073875968
0x0290	0x10004002  	#1073876992
0x0294	0x14004002  	#1073878016
0x0298	0x18004002  	#1073879040
0x029C	0x1C004002  	#1073880064
0x02A0	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_init_input_capture:
;Input Capture Four Channel Demo.c, 310 :: 		void init_input_capture() {
0x1424	0xB086    SUB	SP, SP, #24
0x1426	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Four Channel Demo.c, 314 :: 		RCC_APB1ENR.TIM3EN = 1;                                                     // Enable clock gating for timer module 3
0x142A	0x2101    MOVS	R1, #1
0x142C	0xB249    SXTB	R1, R1
0x142E	0x4864    LDR	R0, [PC, #400]
0x1430	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 315 :: 		TIM3_CR1.CEN = 0;                                                           // Disable timer/counter
0x1432	0x2100    MOVS	R1, #0
0x1434	0xB249    SXTB	R1, R1
0x1436	0x4863    LDR	R0, [PC, #396]
0x1438	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 316 :: 		TIM3_CR2.TI1S = 0;                                                          // TIM3_CH1 connected to TI1 Input (1 would be Ch1, 2, 3 XOR to TI1)
0x143A	0x4863    LDR	R0, [PC, #396]
0x143C	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 317 :: 		TIM3_PSC = ENCODER_TIM_PSC;                                                 // Set timer 3 prescaler
0x143E	0x4863    LDR	R0, [PC, #396]
0x1440	0x9005    STR	R0, [SP, #20]
0x1442	0x8801    LDRH	R1, [R0, #0]
0x1444	0x4862    LDR	R0, [PC, #392]
0x1446	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 318 :: 		TIM3_ARR = ENCODER_TIM_RELOAD;                                              // Set timer 3 Auto Reload value
0x1448	0x4862    LDR	R0, [PC, #392]
0x144A	0x9003    STR	R0, [SP, #12]
0x144C	0x6801    LDR	R1, [R0, #0]
0x144E	0x4862    LDR	R0, [PC, #392]
0x1450	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 319 :: 		TIM3_CR1 |= 0;                                                              // Set counter direction as upcounting (DIR bit)
0x1452	0x4862    LDR	R0, [PC, #392]
0x1454	0x6801    LDR	R1, [R0, #0]
0x1456	0x4861    LDR	R0, [PC, #388]
0x1458	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 322 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM3_CH1_PA6);                 // Configure alternate function for A6 as Timer 3 Channel 1
0x145A	0x4861    LDR	R0, [PC, #388]
0x145C	0xF7FEFF80  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 323 :: 		TIM3_CCMR1_Input |= 0x01;                                                   // Set capture channel 1 as input on TI1 (CC1S = 01)
0x1460	0x4860    LDR	R0, [PC, #384]
0x1462	0x6800    LDR	R0, [R0, #0]
0x1464	0xF0400101  ORR	R1, R0, #1
0x1468	0x485E    LDR	R0, [PC, #376]
0x146A	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 324 :: 		TIM3_CCER.CC1P = 0;                                                         // Set capture on rising edge event
0x146C	0x2100    MOVS	R1, #0
0x146E	0xB249    SXTB	R1, R1
0x1470	0x485D    LDR	R0, [PC, #372]
0x1472	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 325 :: 		TIM3_CCER.CC1NP = 0;                                                        // ^^ Continuation of above
0x1474	0x485D    LDR	R0, [PC, #372]
0x1476	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 326 :: 		TIM3_CCER.CC1E = 1;                                                         // Enable capture on channel 1
0x1478	0x2101    MOVS	R1, #1
0x147A	0xB249    SXTB	R1, R1
0x147C	0x485C    LDR	R0, [PC, #368]
0x147E	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 327 :: 		TIM3_DIER.CC1IE = 1;                                                        // Enable interrupt on capture channel 1
0x1480	0x485C    LDR	R0, [PC, #368]
0x1482	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 330 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM3_CH2_PC7);                 // Configure alternate function for pin C7 as Timer 3 Channel 2
0x1484	0x485C    LDR	R0, [PC, #368]
0x1486	0xF7FEFF6B  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 331 :: 		TIM3_CCMR1_Input |= 0x100;                                                  // Set capture channel 2 as input on TI2 (CC2S = 01)
0x148A	0x4856    LDR	R0, [PC, #344]
0x148C	0x6800    LDR	R0, [R0, #0]
0x148E	0xF4407180  ORR	R1, R0, #256
0x1492	0x4854    LDR	R0, [PC, #336]
0x1494	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 332 :: 		TIM3_CCER.CC2P = 0;                                                         // Set capture on rising edge event
0x1496	0x2100    MOVS	R1, #0
0x1498	0xB249    SXTB	R1, R1
0x149A	0x4858    LDR	R0, [PC, #352]
0x149C	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 333 :: 		TIM3_CCER.CC2NP = 0;                                                        // ^^ Continuation of above
0x149E	0x4858    LDR	R0, [PC, #352]
0x14A0	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 334 :: 		TIM3_CCER.CC2E = 1;                                                         // Enable capture on channel 2
0x14A2	0x2101    MOVS	R1, #1
0x14A4	0xB249    SXTB	R1, R1
0x14A6	0x4857    LDR	R0, [PC, #348]
0x14A8	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 335 :: 		TIM3_DIER.CC2IE = 1;                                                        // Enable interrupt on capture channel 2
0x14AA	0x4857    LDR	R0, [PC, #348]
0x14AC	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 338 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM3_CH3_PB0);                 // Configure alternate function for pin B0 as Timer 3 Channel 3
0x14AE	0x4857    LDR	R0, [PC, #348]
0x14B0	0xF7FEFF56  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 339 :: 		TIM3_CCMR2_Input |= 0x01;                                                   // Set capture channel 3 as input on TI3 (CC3S = 01)
0x14B4	0x4856    LDR	R0, [PC, #344]
0x14B6	0x6800    LDR	R0, [R0, #0]
0x14B8	0xF0400101  ORR	R1, R0, #1
0x14BC	0x4854    LDR	R0, [PC, #336]
0x14BE	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 340 :: 		TIM3_CCER.CC3P = 0;                                                         // Set capture on rising edge event
0x14C0	0x2100    MOVS	R1, #0
0x14C2	0xB249    SXTB	R1, R1
0x14C4	0x4853    LDR	R0, [PC, #332]
0x14C6	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 341 :: 		TIM3_CCER.CC3NP = 0;                                                         // ^^ Continuation of above
0x14C8	0x4853    LDR	R0, [PC, #332]
0x14CA	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 342 :: 		TIM3_CCER.CC3E = 1;                                                         // Enable capture on channel 3
0x14CC	0x2101    MOVS	R1, #1
0x14CE	0xB249    SXTB	R1, R1
0x14D0	0x4852    LDR	R0, [PC, #328]
0x14D2	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 343 :: 		TIM3_DIER.CC3IE = 1;                                                        // Enable interrupt on capture channel 3
0x14D4	0x4852    LDR	R0, [PC, #328]
0x14D6	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 346 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM3_CH4_PB1);                 // Configure alternate function for pin B1 as Timer 3 Channel 4
0x14D8	0x4852    LDR	R0, [PC, #328]
0x14DA	0xF7FEFF41  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 347 :: 		TIM3_CCMR2_Input |= 0x100;                                                  // Set capture channel 4 as input on TI4 (CC4S = 01)
0x14DE	0x484C    LDR	R0, [PC, #304]
0x14E0	0x6800    LDR	R0, [R0, #0]
0x14E2	0xF4407180  ORR	R1, R0, #256
0x14E6	0x484A    LDR	R0, [PC, #296]
0x14E8	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 348 :: 		TIM3_CCER.CC3P = 0;                                                         // Set capture on rising edge event
0x14EA	0x2200    MOVS	R2, #0
0x14EC	0xB252    SXTB	R2, R2
0x14EE	0x4849    LDR	R0, [PC, #292]
0x14F0	0x6002    STR	R2, [R0, #0]
;Input Capture Four Channel Demo.c, 349 :: 		TIM3_CCER.CC3NP = 0;                                                        // ^^ Continuation of above
0x14F2	0x4849    LDR	R0, [PC, #292]
0x14F4	0x6002    STR	R2, [R0, #0]
;Input Capture Four Channel Demo.c, 350 :: 		TIM3_CCER.CC4E = 1;                                                         // Enable capture on channel 4
0x14F6	0x2101    MOVS	R1, #1
0x14F8	0xB249    SXTB	R1, R1
0x14FA	0x484B    LDR	R0, [PC, #300]
0x14FC	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 351 :: 		TIM3_DIER.CC4IE = 1;                                                        // Enable interrupt on capture channel 4
0x14FE	0x484B    LDR	R0, [PC, #300]
0x1500	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 355 :: 		RCC_APB1ENR.TIM2EN = 1;                                                     // Enable clock gating for timer module 5
0x1502	0x484B    LDR	R0, [PC, #300]
0x1504	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 356 :: 		TIM2_CR1.CEN = 0;                                                           // Disable timer/counter
0x1506	0x484B    LDR	R0, [PC, #300]
0x1508	0x6002    STR	R2, [R0, #0]
;Input Capture Four Channel Demo.c, 357 :: 		TIM2_CR2.TI1S = 0;                                                          // TIM3_CH1 connected to TI1 Input (1 would be Ch1, 2, 3 XOR to TI1)
0x150A	0x484B    LDR	R0, [PC, #300]
0x150C	0x6002    STR	R2, [R0, #0]
;Input Capture Four Channel Demo.c, 358 :: 		TIM2_PSC = ENCODER_TIM_PSC;                                                 // Set timer 3 prescaler
0x150E	0x9805    LDR	R0, [SP, #20]
0x1510	0x8801    LDRH	R1, [R0, #0]
0x1512	0x484A    LDR	R0, [PC, #296]
0x1514	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 359 :: 		TIM2_ARR = ENCODER_TIM_RELOAD;                                              // Set timer 3 Auto Reload value
0x1516	0x9803    LDR	R0, [SP, #12]
0x1518	0x6801    LDR	R1, [R0, #0]
0x151A	0x4849    LDR	R0, [PC, #292]
0x151C	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 360 :: 		TIM2_CR1 |= 0;                                                              // Set counter direction as upcounting (DIR bit)
0x151E	0x4849    LDR	R0, [PC, #292]
0x1520	0x6801    LDR	R1, [R0, #0]
0x1522	0x4848    LDR	R0, [PC, #288]
0x1524	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 363 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM2_CH1_PA5);                 // Configure alternate function for A5 as Timer 2 Channel 1
0x1526	0x4848    LDR	R0, [PC, #288]
0x1528	0xF7FEFF1A  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 364 :: 		TIM2_CCMR1_Input |= 0x01;                                                   // Set capture channel 1 as input on TI1 (CC1S = 01)
0x152C	0x4847    LDR	R0, [PC, #284]
0x152E	0x6800    LDR	R0, [R0, #0]
0x1530	0xF0400101  ORR	R1, R0, #1
0x1534	0x4845    LDR	R0, [PC, #276]
0x1536	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 365 :: 		TIM2_CCER.CC1P = 0;                                                         // Set capture on rising edge event
0x1538	0x2100    MOVS	R1, #0
0x153A	0xB249    SXTB	R1, R1
0x153C	0x4844    LDR	R0, [PC, #272]
0x153E	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 366 :: 		TIM2_CCER.CC1NP = 0;                                                        // ^^ Continuation of above
0x1540	0x4844    LDR	R0, [PC, #272]
0x1542	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 367 :: 		TIM2_CCER.CC1E = 1;                                                         // Enable capture on channel 1
0x1544	0x2101    MOVS	R1, #1
0x1546	0xB249    SXTB	R1, R1
0x1548	0x4843    LDR	R0, [PC, #268]
0x154A	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 368 :: 		TIM2_DIER.CC1IE = 1;                                                        // Enable interrupt on capture channel 1
0x154C	0x4843    LDR	R0, [PC, #268]
0x154E	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 372 :: 		TIM3_DIER.UIE = 1;                                                          // Enable overflow interrupt Timer 3
0x1550	0x4843    LDR	R0, [PC, #268]
0x1552	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 373 :: 		TIM2_DIER.UIE = 1;                                                          // Enable overflow interrupt for Timer 2
0x1554	0x4843    LDR	R0, [PC, #268]
0x1556	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 374 :: 		NVIC_IntEnable(IVT_INT_TIM3);                                               // Enable timer 3 ISR
0x1558	0xF240002D  MOVW	R0, #45
0x155C	0xF7FFFCAE  BL	_NVIC_IntEnable+0
;Input Capture Four Channel Demo.c, 375 :: 		NVIC_IntEnable(IVT_INT_TIM2);                                               // Enable timer 2 ISR
0x1560	0xF240002C  MOVW	R0, #44
0x1564	0xF7FFFCAA  BL	_NVIC_IntEnable+0
;Input Capture Four Channel Demo.c, 376 :: 		TIM3_CR1.CEN = 1;                                                           // Enable timer 3
0x1568	0x2101    MOVS	R1, #1
0x156A	0xB249    SXTB	R1, R1
0x156C	0x4815    LDR	R0, [PC, #84]
0x156E	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 377 :: 		TIM2_CR1.CEN = 1;                                                           // Enable Timer 2
0x1570	0x4830    LDR	R0, [PC, #192]
0x1572	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 381 :: 		timer3_period_ms = (long double) 1000.0 / (MCU_FREQUENCY / (ENCODER_TIM_PSC + 1));
0x1574	0x9805    LDR	R0, [SP, #20]
0x1576	0x8800    LDRH	R0, [R0, #0]
0x1578	0x1C41    ADDS	R1, R0, #1
0x157A	0xB289    UXTH	R1, R1
0x157C	0x483A    LDR	R0, [PC, #232]
0x157E	0x6800    LDR	R0, [R0, #0]
0x1580	0xFBB0F0F1  UDIV	R0, R0, R1
0x1584	0xF7FFFCD6  BL	__UnsignedIntegralToLongDouble+0
0x1588	0xE9CD0103  STRD	R0, R1, [SP, #12]
0x158C	0xF04F0000  MOV	R0, #0
0x1590	0x4936    LDR	R1, [PC, #216]
0x1592	0xEE000A10  VMOV	S0, R0
0x1596	0xEE001A90  VMOV	S1, R1
0x159A	0xE9CD2301  STRD	R2, R3, [SP, #4]
0x159E	0xE9DD2303  LDRD	R2, R3, [SP, #12]
0x15A2	0xEE100A10  VMOV	R0, S0
0x15A6	0xEE101A90  VMOV	R1, S1
0x15AA	0xF7FFFD45  BL	__Div_DP+0
0x15AE	0xE9DD2301  LDRD	R2, R3, [SP, #4]
0x15B2	0x4A2F    LDR	R2, [PC, #188]
0x15B4	0xE9C20100  STRD	R0, R1, [R2, #0]
;Input Capture Four Channel Demo.c, 382 :: 		}
L_end_init_input_capture:
0x15B8	0xF8DDE000  LDR	LR, [SP, #0]
0x15BC	0xB006    ADD	SP, SP, #24
0x15BE	0x4770    BX	LR
0x15C0	0x08044247  	RCC_APB1ENR+0
0x15C4	0x80004200  	TIM3_CR1+0
0x15C8	0x809C4200  	TIM3_CR2+0
0x15CC	0x00162000  	_ENCODER_TIM_PSC+0
0x15D0	0x04284000  	TIM3_PSC+0
0x15D4	0x00182000  	_ENCODER_TIM_RELOAD+0
0x15D8	0x042C4000  	TIM3_ARR+0
0x15DC	0x04004000  	TIM3_CR1+0
0x15E0	0x20C80000  	__GPIO_MODULE_TIM3_CH1_PA6+0
0x15E4	0x04184000  	TIM3_CCMR1_Input+0
0x15E8	0x84044200  	TIM3_CCER+0
0x15EC	0x840C4200  	TIM3_CCER+0
0x15F0	0x84004200  	TIM3_CCER+0
0x15F4	0x81844200  	TIM3_DIER+0
0x15F8	0x205C0000  	__GPIO_MODULE_TIM3_CH2_PC7+0
0x15FC	0x84144200  	TIM3_CCER+0
0x1600	0x841C4200  	TIM3_CCER+0
0x1604	0x84104200  	TIM3_CCER+0
0x1608	0x81884200  	TIM3_DIER+0
0x160C	0x21A00000  	__GPIO_MODULE_TIM3_CH3_PB0+0
0x1610	0x041C4000  	TIM3_CCMR2_Input+0
0x1614	0x84244200  	TIM3_CCER+0
0x1618	0x842C4200  	TIM3_CCER+0
0x161C	0x84204200  	TIM3_CCER+0
0x1620	0x818C4200  	TIM3_DIER+0
0x1624	0x21340000  	__GPIO_MODULE_TIM3_CH4_PB1+0
0x1628	0x84304200  	TIM3_CCER+0
0x162C	0x81904200  	TIM3_DIER+0
0x1630	0x08004247  	RCC_APB1ENR+0
0x1634	0x00004200  	TIM2_CR1+0
0x1638	0x009C4200  	TIM2_CR2+0
0x163C	0x00284000  	TIM2_PSC+0
0x1640	0x002C4000  	TIM2_ARR+0
0x1644	0x00004000  	TIM2_CR1+0
0x1648	0x1F180000  	__GPIO_MODULE_TIM2_CH1_PA5+0
0x164C	0x00184000  	TIM2_CCMR1_Input+0
0x1650	0x04044200  	TIM2_CCER+0
0x1654	0x040C4200  	TIM2_CCER+0
0x1658	0x04004200  	TIM2_CCER+0
0x165C	0x01844200  	TIM2_DIER+0
0x1660	0x81804200  	TIM3_DIER+0
0x1664	0x01804200  	TIM2_DIER+0
0x1668	0x001C2000  	_MCU_FREQUENCY+0
0x166C	0x4000408F  	#1083129856
0x1670	0x01102000  	_timer3_period_ms+0
; end of _init_input_capture
_NVIC_IntEnable:
;__Lib_System_4XX.c, 171 :: 		
; ivt start address is: 0 (R0)
0x0EBC	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 183 :: 		
0x0EBE	0x2804    CMP	R0, #4
0x0EC0	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 188 :: 		
0x0EC2	0x4919    LDR	R1, [PC, #100]
0x0EC4	0x6809    LDR	R1, [R1, #0]
0x0EC6	0xF4413280  ORR	R2, R1, #65536
0x0ECA	0x4917    LDR	R1, [PC, #92]
0x0ECC	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 189 :: 		
0x0ECE	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 190 :: 		
; ivt start address is: 0 (R0)
0x0ED0	0x2805    CMP	R0, #5
0x0ED2	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 195 :: 		
0x0ED4	0x4914    LDR	R1, [PC, #80]
0x0ED6	0x6809    LDR	R1, [R1, #0]
0x0ED8	0xF4413200  ORR	R2, R1, #131072
0x0EDC	0x4912    LDR	R1, [PC, #72]
0x0EDE	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 196 :: 		
0x0EE0	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 197 :: 		
; ivt start address is: 0 (R0)
0x0EE2	0x2806    CMP	R0, #6
0x0EE4	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 202 :: 		
0x0EE6	0x4910    LDR	R1, [PC, #64]
0x0EE8	0x6809    LDR	R1, [R1, #0]
0x0EEA	0xF4412280  ORR	R2, R1, #262144
0x0EEE	0x490E    LDR	R1, [PC, #56]
0x0EF0	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 203 :: 		
0x0EF2	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 204 :: 		
; ivt start address is: 0 (R0)
0x0EF4	0x280F    CMP	R0, #15
0x0EF6	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 209 :: 		
0x0EF8	0x490C    LDR	R1, [PC, #48]
0x0EFA	0x6809    LDR	R1, [R1, #0]
0x0EFC	0xF0410202  ORR	R2, R1, #2
0x0F00	0x490A    LDR	R1, [PC, #40]
0x0F02	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 210 :: 		
0x0F04	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 211 :: 		
; ivt start address is: 0 (R0)
0x0F06	0x2810    CMP	R0, #16
0x0F08	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 216 :: 		
0x0F0A	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x0F0E	0x0961    LSRS	R1, R4, #5
0x0F10	0x008A    LSLS	R2, R1, #2
0x0F12	0x4907    LDR	R1, [PC, #28]
0x0F14	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 217 :: 		
0x0F16	0xF004021F  AND	R2, R4, #31
0x0F1A	0xF04F0101  MOV	R1, #1
0x0F1E	0x4091    LSLS	R1, R2
0x0F20	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 218 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 219 :: 		
L_end_NVIC_IntEnable:
0x0F22	0xB001    ADD	SP, SP, #4
0x0F24	0x4770    BX	LR
0x0F26	0xBF00    NOP
0x0F28	0xED24E000  	SCB_SHCRS+0
0x0F2C	0xE010E000  	STK_CTRL+0
0x0F30	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
__UnsignedIntegralToLongDouble:
;__Lib_MathDouble.c, 295 :: 		
0x0F34	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 297 :: 		
0x0F36	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 298 :: 		
0x0F38	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 299 :: 		
0x0F3A	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 301 :: 		
0x0F3E	0xE00A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 303 :: 		
0x0F40	0x0001    MOVS	R1, R0
;__Lib_MathDouble.c, 304 :: 		
0x0F42	0x211F    MOVS	R1, #31
;__Lib_MathDouble.c, 305 :: 		
0x0F44	0xF5116180  ADDS	R1, R1, #1024
;__Lib_MathDouble.c, 307 :: 		
__me_loop:
0x0F48	0x1E49    SUBS	R1, R1, #1
;__Lib_MathDouble.c, 308 :: 		
0x0F4A	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 311 :: 		
0x0F4C	0xD3FC    BCC	__me_loop
;__Lib_MathDouble.c, 313 :: 		
0x0F4E	0x0509    LSLS	R1, R1, #20
;__Lib_MathDouble.c, 314 :: 		
0x0F50	0xEA413110  ORR	R1, R1, R0, LSR #12
;__Lib_MathDouble.c, 315 :: 		
0x0F54	0x0500    LSLS	R0, R0, #20
;__Lib_MathDouble.c, 316 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 319 :: 		
L_end__UnsignedIntegralToLongDouble:
0x0F56	0xB001    ADD	SP, SP, #4
0x0F58	0x4770    BX	LR
; end of __UnsignedIntegralToLongDouble
__Div_DP:
;__Lib_MathDouble.c, 1385 :: 		
0x1038	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1387 :: 		
0x103A	0xE92D41FC  PUSH	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1389 :: 		
0x103E	0xEA910803  EORS	R8, R1, R3, LSL #0
;__Lib_MathDouble.c, 1390 :: 		
0x1042	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1391 :: 		
0x1044	0xF04F4800  MOVMI	R8, #-2147483648
;__Lib_MathDouble.c, 1392 :: 		
0x1048	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 1394 :: 		
0x104C	0xEA4F3503  LSL	R5, R3, #12
;__Lib_MathDouble.c, 1395 :: 		
0x1050	0xEA4F3515  LSR	R5, R5, #12
;__Lib_MathDouble.c, 1396 :: 		
0x1054	0x0056    LSLS	R6, R2, #1
;__Lib_MathDouble.c, 1397 :: 		
0x1056	0x416D    ADCS	R5, R5
;__Lib_MathDouble.c, 1398 :: 		
0x1058	0xEA4F0743  LSL	R7, R3, #1
;__Lib_MathDouble.c, 1399 :: 		
0x105C	0xEA5F5757  LSRS	R7, R7, #21
;__Lib_MathDouble.c, 1402 :: 		
0x1060	0xBF1C    ITT	NE
;__Lib_MathDouble.c, 1403 :: 		
0x1062	0xF4451500  ORRNE	R5, R5, #2097152
;__Lib_MathDouble.c, 1404 :: 		
0x1066	0xE008    BNE	__me_jump
;__Lib_MathDouble.c, 1405 :: 		
0x1068	0xF2400100  MOVW	R1, #0
;__Lib_MathDouble.c, 1406 :: 		
0x106C	0xF6C771F0  MOVT	R1, #32752
;__Lib_MathDouble.c, 1407 :: 		
0x1070	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1408 :: 		
0x1074	0xF04F0000  MOV	R0, #0
;__Lib_MathDouble.c, 1410 :: 		
0x1078	0xE07F    B	__me_lab_end
;__Lib_MathDouble.c, 1412 :: 		
__me_jump:
;__Lib_MathDouble.c, 1413 :: 		
0x107A	0xF44F6EE0  MOV	LR, #1792
;__Lib_MathDouble.c, 1414 :: 		
0x107E	0xF11E0EFF  ADDS	LR, LR, #255
;__Lib_MathDouble.c, 1415 :: 		
0x1082	0x4577    CMP	R7, LR
;__Lib_MathDouble.c, 1416 :: 		
0x1084	0xD070    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1418 :: 		
0x1086	0xEA4F3301  LSL	R3, R1, #12
;__Lib_MathDouble.c, 1419 :: 		
0x108A	0xEA4F3313  LSR	R3, R3, #12
;__Lib_MathDouble.c, 1420 :: 		
0x108E	0x0042    LSLS	R2, R0, #1
;__Lib_MathDouble.c, 1421 :: 		
0x1090	0x415B    ADCS	R3, R3
;__Lib_MathDouble.c, 1422 :: 		
0x1092	0xEA4F0441  LSL	R4, R1, #1
;__Lib_MathDouble.c, 1423 :: 		
0x1096	0x0D64    LSRS	R4, R4, #21
;__Lib_MathDouble.c, 1424 :: 		
0x1098	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1425 :: 		
0x109A	0xF4431300  ORRNE	R3, R3, #2097152
;__Lib_MathDouble.c, 1426 :: 		
0x109E	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1427 :: 		
0x10A2	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1429 :: 		
0x10A6	0xE068    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1431 :: 		
0x10A8	0x4574    CMP	R4, LR
;__Lib_MathDouble.c, 1432 :: 		
0x10AA	0xD05D    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1434 :: 		
0x10AC	0x1BE4    SUBS	R4, R4, R7
;__Lib_MathDouble.c, 1437 :: 		
0x10AE	0x2100    MOVS	R1, #0
;__Lib_MathDouble.c, 1438 :: 		
0x10B0	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1439 :: 		
0x10B2	0xF05F0E36  MOVS	LR, #54
;__Lib_MathDouble.c, 1441 :: 		
__me_fdivb:
0x10B6	0x42AB    CMP	R3, R5
;__Lib_MathDouble.c, 1442 :: 		
0x10B8	0xD100    BNE	__me_lab1
;__Lib_MathDouble.c, 1443 :: 		
0x10BA	0x42B2    CMP	R2, R6
;__Lib_MathDouble.c, 1444 :: 		
__me_lab1:
0x10BC	0xD305    BCC	__me_lab2
;__Lib_MathDouble.c, 1445 :: 		
0x10BE	0x4140    ADCS	R0, R0
;__Lib_MathDouble.c, 1446 :: 		
0x10C0	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1447 :: 		
0x10C2	0x1B92    SUBS	R2, R2, R6
;__Lib_MathDouble.c, 1448 :: 		
0x10C4	0xEB630305  SBC	R3, R3, R5, LSL #0
;__Lib_MathDouble.c, 1449 :: 		
0x10C8	0xE001    B	__me_lab3
;__Lib_MathDouble.c, 1450 :: 		
__me_lab2:
0x10CA	0x4140    ADCS	R0, R0
;__Lib_MathDouble.c, 1451 :: 		
0x10CC	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1452 :: 		
__me_lab3:
0x10CE	0xF1BE0E01  SUBS	LR, LR, #1
;__Lib_MathDouble.c, 1453 :: 		
0x10D2	0xD005    BEQ	__me_fdive
;__Lib_MathDouble.c, 1454 :: 		
0x10D4	0xEA530702  ORRS	R7, R3, R2, LSL #0
;__Lib_MathDouble.c, 1455 :: 		
0x10D8	0xD002    BEQ	__me_fdive
;__Lib_MathDouble.c, 1456 :: 		
0x10DA	0x0052    LSLS	R2, R2, #1
;__Lib_MathDouble.c, 1457 :: 		
0x10DC	0x415B    ADCS	R3, R3
;__Lib_MathDouble.c, 1458 :: 		
0x10DE	0xE7EA    B	__me_fdivb
;__Lib_MathDouble.c, 1460 :: 		
__me_fdive:
0x10E0	0xF1BE0F20  CMP	LR, #32
;__Lib_MathDouble.c, 1461 :: 		
0x10E4	0xD209    BCS	__me_low
;__Lib_MathDouble.c, 1462 :: 		
0x10E6	0xF1BE0F16  CMP	LR, #22
;__Lib_MathDouble.c, 1463 :: 		
0x10EA	0xD30C    BCC	__me_high
;__Lib_MathDouble.c, 1465 :: 		
__me_mid:
0x10EC	0xF1CE0720  RSB	R7, LR, #32
;__Lib_MathDouble.c, 1466 :: 		
0x10F0	0xFA20F107  LSR	R1, R0, R7
;__Lib_MathDouble.c, 1467 :: 		
0x10F4	0xFA00F00E  LSL	R0, R0, LR
;__Lib_MathDouble.c, 1468 :: 		
0x10F8	0xE00F    B	__me_cont
;__Lib_MathDouble.c, 1470 :: 		
__me_low:
0x10FA	0xF1AE0E20  SUB	LR, LR, #32
;__Lib_MathDouble.c, 1471 :: 		
0x10FE	0xFA00F10E  LSL	R1, R0, LR
;__Lib_MathDouble.c, 1472 :: 		
0x1102	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1473 :: 		
0x1104	0xE009    B	__me_cont
;__Lib_MathDouble.c, 1475 :: 		
__me_high:
0x1106	0xFA01F10E  LSL	R1, R1, LR
;__Lib_MathDouble.c, 1476 :: 		
0x110A	0xF1CE0720  RSB	R7, LR, #32
;__Lib_MathDouble.c, 1477 :: 		
0x110E	0xFA20F707  LSR	R7, R0, R7
;__Lib_MathDouble.c, 1478 :: 		
0x1112	0xEA410107  ORR	R1, R1, R7, LSL #0
;__Lib_MathDouble.c, 1479 :: 		
0x1116	0xFA00F00E  LSL	R0, R0, LR
;__Lib_MathDouble.c, 1481 :: 		
__me_cont:
0x111A	0xF4111F00  TST	R1, #2097152
;__Lib_MathDouble.c, 1482 :: 		
0x111E	0xD102    BNE	__me_lab4
;__Lib_MathDouble.c, 1483 :: 		
0x1120	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1484 :: 		
0x1122	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1485 :: 		
0x1124	0x1E64    SUBS	R4, R4, #1
;__Lib_MathDouble.c, 1487 :: 		
__me_lab4:
0x1126	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 1488 :: 		
0x1128	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1489 :: 		
0x112C	0xF4110F80  TST	R1, #4194304
;__Lib_MathDouble.c, 1490 :: 		
0x1130	0xBF1A    ITTE	NE
;__Lib_MathDouble.c, 1491 :: 		
0x1132	0x1C64    ADDNE	R4, R4, #1
;__Lib_MathDouble.c, 1492 :: 		
0x1134	0xF4210180  BICNE	R1, R1, #4194304
;__Lib_MathDouble.c, 1493 :: 		
0x1138	0xF4211100  BICEQ	R1, R1, #2097152
;__Lib_MathDouble.c, 1495 :: 		
0x113C	0xF44F7740  MOV	R7, #768
;__Lib_MathDouble.c, 1496 :: 		
0x1140	0x37FF    ADDS	R7, #255
;__Lib_MathDouble.c, 1497 :: 		
0x1142	0x19E4    ADDS	R4, R4, R7
;__Lib_MathDouble.c, 1498 :: 		
0x1144	0xBFDE    ITTT	LE
;__Lib_MathDouble.c, 1499 :: 		
0x1146	0xF04F0100  MOVLE	R1, #0
;__Lib_MathDouble.c, 1500 :: 		
0x114A	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 1502 :: 		
0x114E	0xE014    BLE	__me_lab_end
;__Lib_MathDouble.c, 1504 :: 		
0x1150	0xF5076780  ADD	R7, R7, #1024
;__Lib_MathDouble.c, 1505 :: 		
0x1154	0x42BC    CMP	R4, R7
;__Lib_MathDouble.c, 1506 :: 		
0x1156	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 1508 :: 		
0x1158	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 1509 :: 		
0x115A	0xEA4F0030  RRX	R0, R0
;__Lib_MathDouble.c, 1510 :: 		
0x115E	0xEA415104  ORR	R1, R1, R4, LSL #20
;__Lib_MathDouble.c, 1511 :: 		
0x1162	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1514 :: 		
0x1166	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 1516 :: 		
__me_ovfl:
0x1168	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1517 :: 		
0x116A	0x21FF    MOVS	R1, #255
;__Lib_MathDouble.c, 1518 :: 		
0x116C	0xEA4F01C1  LSL	R1, R1, #3
;__Lib_MathDouble.c, 1519 :: 		
0x1170	0x1DC9    ADDS	R1, R1, #7
;__Lib_MathDouble.c, 1520 :: 		
0x1172	0xEA4F5101  LSL	R1, R1, #20
;__Lib_MathDouble.c, 1521 :: 		
0x1176	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1522 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 1523 :: 		
0x117A	0xE8BD41FC  POP	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1525 :: 		
L_end__Div_DP:
0x117E	0xB001    ADD	SP, SP, #4
0x1180	0x4770    BX	LR
; end of __Div_DP
_init_UART:
;Input Capture Four Channel Demo.c, 294 :: 		void init_UART() {
0x1678	0xB081    SUB	SP, SP, #4
0x167A	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Four Channel Demo.c, 296 :: 		UART1_Init(UART_BAUD_RATE);                                                 // Configure UART 1
0x167E	0xF44F30E1  MOV	R0, #115200
0x1682	0xF7FFFCBF  BL	_UART1_Init+0
;Input Capture Four Channel Demo.c, 297 :: 		Delay_ms(200);                                                              // Wait for UART to stabilize
0x1686	0xF24E57FE  MOVW	R7, #58878
0x168A	0xF2C007AA  MOVT	R7, #170
0x168E	0xBF00    NOP
0x1690	0xBF00    NOP
L_init_UART13:
0x1692	0x1E7F    SUBS	R7, R7, #1
0x1694	0xD1FD    BNE	L_init_UART13
0x1696	0xBF00    NOP
0x1698	0xBF00    NOP
0x169A	0xBF00    NOP
;Input Capture Four Channel Demo.c, 298 :: 		UART_Write_Text("\rUART Init Complete\r\n");                                // *** DEBUG *** Print test statement to terminal
0x169C	0x4803    LDR	R0, [PC, #12]
0x169E	0xF7FFFAE7  BL	_UART_Write_Text+0
;Input Capture Four Channel Demo.c, 299 :: 		}
L_end_init_UART:
0x16A2	0xF8DDE000  LDR	LR, [SP, #0]
0x16A6	0xB001    ADD	SP, SP, #4
0x16A8	0x4770    BX	LR
0x16AA	0xBF00    NOP
0x16AC	0x00002000  	?lstr8_Input_32Capture_32Four_32Channel_32Demo+0
; end of _init_UART
_UART1_Init:
;__Lib_UART_123_45_6.c, 439 :: 		
; baud_rate start address is: 0 (R0)
0x1004	0xB081    SUB	SP, SP, #4
0x1006	0xF8CDE000  STR	LR, [SP, #0]
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 440 :: 		
0x100A	0x4A09    LDR	R2, [PC, #36]
0x100C	0xF2400100  MOVW	R1, #0
0x1010	0xB404    PUSH	(R2)
0x1012	0xB402    PUSH	(R1)
0x1014	0xF2400300  MOVW	R3, #0
0x1018	0xF2400200  MOVW	R2, #0
0x101C	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x101E	0x4805    LDR	R0, [PC, #20]
0x1020	0xF7FFFAD4  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x1024	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 441 :: 		
L_end_UART1_Init:
0x1026	0xF8DDE000  LDR	LR, [SP, #0]
0x102A	0xB001    ADD	SP, SP, #4
0x102C	0x4770    BX	LR
0x102E	0xBF00    NOP
0x1030	0x1FF00000  	__GPIO_MODULE_USART1_PA9_10+0
0x1034	0x10004001  	USART1_SR+0
; end of _UART1_Init
__Lib_UART_123_45_6_UARTx_Init_Advanced:
;__Lib_UART_123_45_6.c, 319 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x05CC	0xB08B    SUB	SP, SP, #44
0x05CE	0xF8CDE000  STR	LR, [SP, #0]
0x05D2	0xB29A    UXTH	R2, R3
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; baud_rate start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
0x05D4	0xF8BD302C  LDRH	R3, [SP, #44]
; module start address is: 24 (R6)
0x05D8	0x9E0C    LDR	R6, [SP, #48]
;__Lib_UART_123_45_6.c, 323 :: 		
0x05DA	0xAC06    ADD	R4, SP, #24
0x05DC	0xF8AD3004  STRH	R3, [SP, #4]
0x05E0	0xF8AD2008  STRH	R2, [SP, #8]
0x05E4	0x9103    STR	R1, [SP, #12]
0x05E6	0x9004    STR	R0, [SP, #16]
0x05E8	0x4620    MOV	R0, R4
0x05EA	0xF7FFFE77  BL	_RCC_GetClocksFrequency+0
0x05EE	0x9804    LDR	R0, [SP, #16]
0x05F0	0x9903    LDR	R1, [SP, #12]
0x05F2	0xF8BD2008  LDRH	R2, [SP, #8]
0x05F6	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 325 :: 		
0x05FA	0x4C71    LDR	R4, [PC, #452]
0x05FC	0x42A0    CMP	R0, R4
0x05FE	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced15
;__Lib_UART_123_45_6.c, 326 :: 		
0x0600	0x2501    MOVS	R5, #1
0x0602	0xB26D    SXTB	R5, R5
0x0604	0x4C6F    LDR	R4, [PC, #444]
0x0606	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 327 :: 		
0x0608	0x4D6F    LDR	R5, [PC, #444]
0x060A	0x4C70    LDR	R4, [PC, #448]
0x060C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 328 :: 		
0x060E	0x4D70    LDR	R5, [PC, #448]
0x0610	0x4C70    LDR	R4, [PC, #448]
0x0612	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 329 :: 		
0x0614	0x4D70    LDR	R5, [PC, #448]
0x0616	0x4C71    LDR	R4, [PC, #452]
0x0618	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 330 :: 		
0x061A	0x4D71    LDR	R5, [PC, #452]
0x061C	0x4C71    LDR	R4, [PC, #452]
0x061E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 331 :: 		
0x0620	0x9C09    LDR	R4, [SP, #36]
0x0622	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 332 :: 		
0x0624	0xE06C    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced16
L___Lib_UART_123_45_6_UARTx_Init_Advanced15:
;__Lib_UART_123_45_6.c, 333 :: 		
0x0626	0x4C70    LDR	R4, [PC, #448]
0x0628	0x42A0    CMP	R0, R4
0x062A	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced17
;__Lib_UART_123_45_6.c, 334 :: 		
0x062C	0x2501    MOVS	R5, #1
0x062E	0xB26D    SXTB	R5, R5
0x0630	0x4C6E    LDR	R4, [PC, #440]
0x0632	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 335 :: 		
0x0634	0x4D6E    LDR	R5, [PC, #440]
0x0636	0x4C65    LDR	R4, [PC, #404]
0x0638	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 336 :: 		
0x063A	0x4D6E    LDR	R5, [PC, #440]
0x063C	0x4C65    LDR	R4, [PC, #404]
0x063E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 337 :: 		
0x0640	0x4D6D    LDR	R5, [PC, #436]
0x0642	0x4C66    LDR	R4, [PC, #408]
0x0644	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 338 :: 		
0x0646	0x4D6D    LDR	R5, [PC, #436]
0x0648	0x4C66    LDR	R4, [PC, #408]
0x064A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 339 :: 		
0x064C	0x9C08    LDR	R4, [SP, #32]
0x064E	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 340 :: 		
0x0650	0xE056    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced18
L___Lib_UART_123_45_6_UARTx_Init_Advanced17:
;__Lib_UART_123_45_6.c, 341 :: 		
0x0652	0x4C6B    LDR	R4, [PC, #428]
0x0654	0x42A0    CMP	R0, R4
0x0656	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced19
;__Lib_UART_123_45_6.c, 342 :: 		
0x0658	0x2501    MOVS	R5, #1
0x065A	0xB26D    SXTB	R5, R5
0x065C	0x4C69    LDR	R4, [PC, #420]
0x065E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 343 :: 		
0x0660	0x4D69    LDR	R5, [PC, #420]
0x0662	0x4C5A    LDR	R4, [PC, #360]
0x0664	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 344 :: 		
0x0666	0x4D69    LDR	R5, [PC, #420]
0x0668	0x4C5A    LDR	R4, [PC, #360]
0x066A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 345 :: 		
0x066C	0x4D68    LDR	R5, [PC, #416]
0x066E	0x4C5B    LDR	R4, [PC, #364]
0x0670	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 346 :: 		
0x0672	0x4D68    LDR	R5, [PC, #416]
0x0674	0x4C5B    LDR	R4, [PC, #364]
0x0676	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 347 :: 		
0x0678	0x9C08    LDR	R4, [SP, #32]
0x067A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 348 :: 		
0x067C	0xE040    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced20
L___Lib_UART_123_45_6_UARTx_Init_Advanced19:
;__Lib_UART_123_45_6.c, 349 :: 		
0x067E	0x4C66    LDR	R4, [PC, #408]
0x0680	0x42A0    CMP	R0, R4
0x0682	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced21
;__Lib_UART_123_45_6.c, 350 :: 		
0x0684	0x2501    MOVS	R5, #1
0x0686	0xB26D    SXTB	R5, R5
0x0688	0x4C64    LDR	R4, [PC, #400]
0x068A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 351 :: 		
0x068C	0x4D64    LDR	R5, [PC, #400]
0x068E	0x4C4F    LDR	R4, [PC, #316]
0x0690	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 352 :: 		
0x0692	0x4D64    LDR	R5, [PC, #400]
0x0694	0x4C4F    LDR	R4, [PC, #316]
0x0696	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 353 :: 		
0x0698	0x4D63    LDR	R5, [PC, #396]
0x069A	0x4C50    LDR	R4, [PC, #320]
0x069C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 354 :: 		
0x069E	0x4D63    LDR	R5, [PC, #396]
0x06A0	0x4C50    LDR	R4, [PC, #320]
0x06A2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 355 :: 		
0x06A4	0x9C08    LDR	R4, [SP, #32]
0x06A6	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 356 :: 		
0x06A8	0xE02A    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced22
L___Lib_UART_123_45_6_UARTx_Init_Advanced21:
;__Lib_UART_123_45_6.c, 357 :: 		
0x06AA	0x4C61    LDR	R4, [PC, #388]
0x06AC	0x42A0    CMP	R0, R4
0x06AE	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced23
;__Lib_UART_123_45_6.c, 358 :: 		
0x06B0	0x2501    MOVS	R5, #1
0x06B2	0xB26D    SXTB	R5, R5
0x06B4	0x4C5F    LDR	R4, [PC, #380]
0x06B6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 359 :: 		
0x06B8	0x4D5F    LDR	R5, [PC, #380]
0x06BA	0x4C44    LDR	R4, [PC, #272]
0x06BC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 360 :: 		
0x06BE	0x4D5F    LDR	R5, [PC, #380]
0x06C0	0x4C44    LDR	R4, [PC, #272]
0x06C2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 361 :: 		
0x06C4	0x4D5E    LDR	R5, [PC, #376]
0x06C6	0x4C45    LDR	R4, [PC, #276]
0x06C8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 362 :: 		
0x06CA	0x4D5E    LDR	R5, [PC, #376]
0x06CC	0x4C45    LDR	R4, [PC, #276]
0x06CE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 363 :: 		
0x06D0	0x9C08    LDR	R4, [SP, #32]
0x06D2	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 364 :: 		
0x06D4	0xE014    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced24
L___Lib_UART_123_45_6_UARTx_Init_Advanced23:
;__Lib_UART_123_45_6.c, 365 :: 		
0x06D6	0x4C5C    LDR	R4, [PC, #368]
0x06D8	0x42A0    CMP	R0, R4
0x06DA	0xD111    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced25
;__Lib_UART_123_45_6.c, 366 :: 		
0x06DC	0x2501    MOVS	R5, #1
0x06DE	0xB26D    SXTB	R5, R5
0x06E0	0x4C5A    LDR	R4, [PC, #360]
0x06E2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 367 :: 		
0x06E4	0x4D5A    LDR	R5, [PC, #360]
0x06E6	0x4C39    LDR	R4, [PC, #228]
0x06E8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 368 :: 		
0x06EA	0x4D5A    LDR	R5, [PC, #360]
0x06EC	0x4C39    LDR	R4, [PC, #228]
0x06EE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 369 :: 		
0x06F0	0x4D59    LDR	R5, [PC, #356]
0x06F2	0x4C3A    LDR	R4, [PC, #232]
0x06F4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 370 :: 		
0x06F6	0x4D59    LDR	R5, [PC, #356]
0x06F8	0x4C3A    LDR	R4, [PC, #232]
0x06FA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 371 :: 		
0x06FC	0x9C09    LDR	R4, [SP, #36]
0x06FE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 372 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced25:
L___Lib_UART_123_45_6_UARTx_Init_Advanced24:
L___Lib_UART_123_45_6_UARTx_Init_Advanced22:
L___Lib_UART_123_45_6_UARTx_Init_Advanced20:
L___Lib_UART_123_45_6_UARTx_Init_Advanced18:
L___Lib_UART_123_45_6_UARTx_Init_Advanced16:
;__Lib_UART_123_45_6.c, 374 :: 		
0x0700	0xF8AD3004  STRH	R3, [SP, #4]
; module end address is: 24 (R6)
0x0704	0xF8AD2008  STRH	R2, [SP, #8]
0x0708	0x9103    STR	R1, [SP, #12]
0x070A	0x9004    STR	R0, [SP, #16]
0x070C	0x4630    MOV	R0, R6
0x070E	0xF7FFFE27  BL	_GPIO_Alternate_Function_Enable+0
0x0712	0x9804    LDR	R0, [SP, #16]
0x0714	0x9903    LDR	R1, [SP, #12]
0x0716	0xF8BD2008  LDRH	R2, [SP, #8]
0x071A	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 376 :: 		
0x071E	0xF2000510  ADDW	R5, R0, #16
0x0722	0x2400    MOVS	R4, #0
0x0724	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 377 :: 		
0x0726	0xF2000510  ADDW	R5, R0, #16
0x072A	0x682C    LDR	R4, [R5, #0]
0x072C	0x431C    ORRS	R4, R3
; stop_bits end address is: 12 (R3)
0x072E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 378 :: 		
0x0730	0xF200050C  ADDW	R5, R0, #12
0x0734	0x2400    MOVS	R4, #0
0x0736	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 380 :: 		
0x0738	0xB11A    CBZ	R2, L___Lib_UART_123_45_6_UARTx_Init_Advanced40
;__Lib_UART_123_45_6.c, 381 :: 		
0x073A	0xF4426280  ORR	R2, R2, #1024
0x073E	0xB292    UXTH	R2, R2
; parity end address is: 8 (R2)
;__Lib_UART_123_45_6.c, 382 :: 		
0x0740	0xE7FF    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced26
L___Lib_UART_123_45_6_UARTx_Init_Advanced40:
;__Lib_UART_123_45_6.c, 380 :: 		
;__Lib_UART_123_45_6.c, 382 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced26:
;__Lib_UART_123_45_6.c, 384 :: 		
; parity start address is: 8 (R2)
0x0742	0xF200050C  ADDW	R5, R0, #12
0x0746	0x682C    LDR	R4, [R5, #0]
0x0748	0x4314    ORRS	R4, R2
; parity end address is: 8 (R2)
0x074A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 386 :: 		
0x074C	0xF200060C  ADDW	R6, R0, #12
0x0750	0x2501    MOVS	R5, #1
0x0752	0x6834    LDR	R4, [R6, #0]
0x0754	0xF365344D  BFI	R4, R5, #13, #1
0x0758	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 387 :: 		
0x075A	0xF200060C  ADDW	R6, R0, #12
0x075E	0x2501    MOVS	R5, #1
0x0760	0x6834    LDR	R4, [R6, #0]
0x0762	0xF36504C3  BFI	R4, R5, #3, #1
0x0766	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 388 :: 		
0x0768	0xF200060C  ADDW	R6, R0, #12
0x076C	0x2501    MOVS	R5, #1
0x076E	0x6834    LDR	R4, [R6, #0]
0x0770	0xF3650482  BFI	R4, R5, #2, #1
0x0774	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 389 :: 		
0x0776	0xF2000514  ADDW	R5, R0, #20
0x077A	0x2400    MOVS	R4, #0
0x077C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 394 :: 		
0x077E	0x9D05    LDR	R5, [SP, #20]
0x0780	0x2419    MOVS	R4, #25
0x0782	0x4365    MULS	R5, R4, R5
0x0784	0x008C    LSLS	R4, R1, #2
; baud_rate end address is: 4 (R1)
0x0786	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45_6.c, 395 :: 		
0x078A	0x2464    MOVS	R4, #100
0x078C	0xFBB7F4F4  UDIV	R4, R7, R4
0x0790	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45_6.c, 397 :: 		
0x0792	0x0935    LSRS	R5, R6, #4
0x0794	0x2464    MOVS	R4, #100
0x0796	0x436C    MULS	R4, R5, R4
0x0798	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45_6.c, 398 :: 		
0x079A	0x0124    LSLS	R4, R4, #4
0x079C	0xF2040532  ADDW	R5, R4, #50
0x07A0	0x2464    MOVS	R4, #100
0x07A2	0xFBB5F4F4  UDIV	R4, R5, R4
0x07A6	0xF004040F  AND	R4, R4, #15
0x07AA	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45_6.c, 400 :: 		
0x07AE	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x07B2	0xB2A4    UXTH	R4, R4
0x07B4	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 401 :: 		
L_end_UARTx_Init_Advanced:
0x07B6	0xF8DDE000  LDR	LR, [SP, #0]
0x07BA	0xB00B    ADD	SP, SP, #44
0x07BC	0x4770    BX	LR
0x07BE	0xBF00    NOP
0x07C0	0x10004001  	USART1_SR+0
0x07C4	0x08904247  	RCC_APB2ENR+0
0x07C8	0x02A50000  	_UART1_Write+0
0x07CC	0x028C2000  	_UART_Wr_Ptr+0
0x07D0	0xFFFFFFFF  	_UART1_Read+0
0x07D4	0x02902000  	_UART_Rd_Ptr+0
0x07D8	0xFFFFFFFF  	_UART1_Data_Ready+0
0x07DC	0x02942000  	_UART_Rdy_Ptr+0
0x07E0	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x07E4	0x02982000  	_UART_Tx_Idle_Ptr+0
0x07E8	0x44004000  	USART2_SR+0
0x07EC	0x08444247  	RCC_APB1ENR+0
0x07F0	0x04B50000  	_UART2_Write+0
0x07F4	0xFFFFFFFF  	_UART2_Read+0
0x07F8	0xFFFFFFFF  	_UART2_Data_Ready+0
0x07FC	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0800	0x48004000  	USART3_SR+0
0x0804	0x08484247  	RCC_APB1ENR+0
0x0808	0x03B90000  	_UART3_Write+0
0x080C	0xFFFFFFFF  	_UART3_Read+0
0x0810	0xFFFFFFFF  	_UART3_Data_Ready+0
0x0814	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0818	0x4C004000  	UART4_SR+0
0x081C	0x084C4247  	RCC_APB1ENR+0
0x0820	0x03F10000  	_UART4_Write+0
0x0824	0xFFFFFFFF  	_UART4_Read+0
0x0828	0xFFFFFFFF  	_UART4_Data_Ready+0
0x082C	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0830	0x50004000  	UART5_SR+0
0x0834	0x08504247  	RCC_APB1ENR+0
0x0838	0x03D50000  	_UART5_Write+0
0x083C	0xFFFFFFFF  	_UART5_Read+0
0x0840	0xFFFFFFFF  	_UART5_Data_Ready+0
0x0844	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x0848	0x14004001  	USART6_SR+0
0x084C	0x08944247  	RCC_APB2ENR+0
0x0850	0x02C10000  	_UART6_Write+0
0x0854	0xFFFFFFFF  	_UART6_Read+0
0x0858	0xFFFFFFFF  	_UART6_Data_Ready+0
0x085C	0xFFFFFFFF  	_UART6_Tx_Idle+0
; end of __Lib_UART_123_45_6_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 389 :: 		
; RCC_Clocks start address is: 0 (R0)
0x02DC	0xB082    SUB	SP, SP, #8
0x02DE	0xF8CDE000  STR	LR, [SP, #0]
0x02E2	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 391 :: 		
;__Lib_System_4XX.c, 393 :: 		
0x02E4	0x4619    MOV	R1, R3
0x02E6	0x9101    STR	R1, [SP, #4]
0x02E8	0xF000F85E  BL	_Get_Fosc_kHz+0
0x02EC	0xF24031E8  MOVW	R1, #1000
0x02F0	0xFB00F201  MUL	R2, R0, R1
0x02F4	0x9901    LDR	R1, [SP, #4]
0x02F6	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 396 :: 		
0x02F8	0x4917    LDR	R1, [PC, #92]
0x02FA	0x6809    LDR	R1, [R1, #0]
0x02FC	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 397 :: 		
0x0300	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 398 :: 		
0x0302	0x4916    LDR	R1, [PC, #88]
0x0304	0x1889    ADDS	R1, R1, R2
0x0306	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0308	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 400 :: 		
0x030A	0x1D1A    ADDS	R2, R3, #4
0x030C	0x6819    LDR	R1, [R3, #0]
0x030E	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0310	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 403 :: 		
0x0312	0x4911    LDR	R1, [PC, #68]
0x0314	0x6809    LDR	R1, [R1, #0]
0x0316	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 404 :: 		
0x031A	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 405 :: 		
0x031C	0x490F    LDR	R1, [PC, #60]
0x031E	0x1889    ADDS	R1, R1, R2
0x0320	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0322	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 407 :: 		
0x0324	0xF2030208  ADDW	R2, R3, #8
0x0328	0x1D19    ADDS	R1, R3, #4
0x032A	0x6809    LDR	R1, [R1, #0]
0x032C	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x032E	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 410 :: 		
0x0330	0x4909    LDR	R1, [PC, #36]
0x0332	0x6809    LDR	R1, [R1, #0]
0x0334	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 411 :: 		
0x0338	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 412 :: 		
0x033A	0x4908    LDR	R1, [PC, #32]
0x033C	0x1889    ADDS	R1, R1, R2
0x033E	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0340	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 414 :: 		
0x0342	0xF203020C  ADDW	R2, R3, #12
0x0346	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x0348	0x6809    LDR	R1, [R1, #0]
0x034A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x034C	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 415 :: 		
L_end_RCC_GetClocksFrequency:
0x034E	0xF8DDE000  LDR	LR, [SP, #0]
0x0352	0xB002    ADD	SP, SP, #8
0x0354	0x4770    BX	LR
0x0356	0xBF00    NOP
0x0358	0x38084002  	RCC_CFGR+0
0x035C	0x00FF2000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_UART_Write_Text:
;__Lib_UART_123_45_6.c, 476 :: 		
; uart_text start address is: 0 (R0)
0x0C70	0xB083    SUB	SP, SP, #12
0x0C72	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 477 :: 		
; counter start address is: 8 (R2)
0x0C76	0x2200    MOVS	R2, #0
;__Lib_UART_123_45_6.c, 479 :: 		
0x0C78	0x7801    LDRB	R1, [R0, #0]
; data_ start address is: 12 (R3)
0x0C7A	0xB2CB    UXTB	R3, R1
; data_ end address is: 12 (R3)
; counter end address is: 8 (R2)
0x0C7C	0xB2D9    UXTB	R1, R3
;__Lib_UART_123_45_6.c, 480 :: 		
L_UART_Write_Text27:
; data_ start address is: 4 (R1)
; counter start address is: 8 (R2)
; uart_text start address is: 0 (R0)
; uart_text end address is: 0 (R0)
0x0C7E	0xB171    CBZ	R1, L_UART_Write_Text28
; uart_text end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 481 :: 		
; uart_text start address is: 0 (R0)
0x0C80	0x9001    STR	R0, [SP, #4]
; data_ end address is: 4 (R1)
0x0C82	0xF88D2008  STRB	R2, [SP, #8]
0x0C86	0xB2C8    UXTB	R0, R1
0x0C88	0xF7FFFC94  BL	_UART_Write+0
0x0C8C	0xF89D2008  LDRB	R2, [SP, #8]
0x0C90	0x9801    LDR	R0, [SP, #4]
;__Lib_UART_123_45_6.c, 482 :: 		
0x0C92	0x1C51    ADDS	R1, R2, #1
0x0C94	0xB2C9    UXTB	R1, R1
0x0C96	0xB2CA    UXTB	R2, R1
;__Lib_UART_123_45_6.c, 483 :: 		
0x0C98	0x1841    ADDS	R1, R0, R1
0x0C9A	0x7809    LDRB	R1, [R1, #0]
; data_ start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 484 :: 		
; uart_text end address is: 0 (R0)
; counter end address is: 8 (R2)
; data_ end address is: 4 (R1)
0x0C9C	0xE7EF    B	L_UART_Write_Text27
L_UART_Write_Text28:
;__Lib_UART_123_45_6.c, 485 :: 		
L_end_UART_Write_Text:
0x0C9E	0xF8DDE000  LDR	LR, [SP, #0]
0x0CA2	0xB003    ADD	SP, SP, #12
0x0CA4	0x4770    BX	LR
; end of _UART_Write_Text
_UART_Write:
;__Lib_UART_123_45_6.c, 472 :: 		
; _data start address is: 0 (R0)
0x05B4	0xB081    SUB	SP, SP, #4
0x05B6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 473 :: 		
; _data end address is: 0 (R0)
0x05BA	0x4C03    LDR	R4, [PC, #12]
0x05BC	0x6824    LDR	R4, [R4, #0]
0x05BE	0x47A0    BLX	R4
;__Lib_UART_123_45_6.c, 474 :: 		
L_end_UART_Write:
0x05C0	0xF8DDE000  LDR	LR, [SP, #0]
0x05C4	0xB001    ADD	SP, SP, #4
0x05C6	0x4770    BX	LR
0x05C8	0x028C2000  	_UART_Wr_Ptr+0
; end of _UART_Write
_UART1_Write:
;__Lib_UART_123_45_6.c, 41 :: 		
; _data start address is: 0 (R0)
0x02A4	0xB081    SUB	SP, SP, #4
0x02A6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 42 :: 		
0x02AA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x02AC	0x4803    LDR	R0, [PC, #12]
0x02AE	0xF7FFFF6B  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 43 :: 		
L_end_UART1_Write:
0x02B2	0xF8DDE000  LDR	LR, [SP, #0]
0x02B6	0xB001    ADD	SP, SP, #4
0x02B8	0x4770    BX	LR
0x02BA	0xBF00    NOP
0x02BC	0x10004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x018A	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x018E	0x4601    MOV	R1, R0
0x0190	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0194	0x680B    LDR	R3, [R1, #0]
0x0196	0xF3C312C0  UBFX	R2, R3, #7, #1
0x019A	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x019C	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x019E	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x01A0	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x01A2	0xB001    ADD	SP, SP, #4
0x01A4	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45_6.c, 45 :: 		
; _data start address is: 0 (R0)
0x04B4	0xB081    SUB	SP, SP, #4
0x04B6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 46 :: 		
0x04BA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x04BC	0x4803    LDR	R0, [PC, #12]
0x04BE	0xF7FFFE63  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 47 :: 		
L_end_UART2_Write:
0x04C2	0xF8DDE000  LDR	LR, [SP, #0]
0x04C6	0xB001    ADD	SP, SP, #4
0x04C8	0x4770    BX	LR
0x04CA	0xBF00    NOP
0x04CC	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45_6.c, 49 :: 		
; _data start address is: 0 (R0)
0x03B8	0xB081    SUB	SP, SP, #4
0x03BA	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 50 :: 		
0x03BE	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03C0	0x4803    LDR	R0, [PC, #12]
0x03C2	0xF7FFFEE1  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 51 :: 		
L_end_UART3_Write:
0x03C6	0xF8DDE000  LDR	LR, [SP, #0]
0x03CA	0xB001    ADD	SP, SP, #4
0x03CC	0x4770    BX	LR
0x03CE	0xBF00    NOP
0x03D0	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45_6.c, 53 :: 		
; _data start address is: 0 (R0)
0x03F0	0xB081    SUB	SP, SP, #4
0x03F2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 54 :: 		
0x03F6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03F8	0x4803    LDR	R0, [PC, #12]
0x03FA	0xF7FFFEC5  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 55 :: 		
L_end_UART4_Write:
0x03FE	0xF8DDE000  LDR	LR, [SP, #0]
0x0402	0xB001    ADD	SP, SP, #4
0x0404	0x4770    BX	LR
0x0406	0xBF00    NOP
0x0408	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45_6.c, 57 :: 		
; _data start address is: 0 (R0)
0x03D4	0xB081    SUB	SP, SP, #4
0x03D6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 58 :: 		
0x03DA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x03DC	0x4803    LDR	R0, [PC, #12]
0x03DE	0xF7FFFED3  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 59 :: 		
L_end_UART5_Write:
0x03E2	0xF8DDE000  LDR	LR, [SP, #0]
0x03E6	0xB001    ADD	SP, SP, #4
0x03E8	0x4770    BX	LR
0x03EA	0xBF00    NOP
0x03EC	0x50004000  	UART5_SR+0
; end of _UART5_Write
_UART6_Write:
;__Lib_UART_123_45_6.c, 61 :: 		
; _data start address is: 0 (R0)
0x02C0	0xB081    SUB	SP, SP, #4
0x02C2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 62 :: 		
0x02C6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x02C8	0x4803    LDR	R0, [PC, #12]
0x02CA	0xF7FFFF5D  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 63 :: 		
L_end_UART6_Write:
0x02CE	0xF8DDE000  LDR	LR, [SP, #0]
0x02D2	0xB001    ADD	SP, SP, #4
0x02D4	0x4770    BX	LR
0x02D6	0xBF00    NOP
0x02D8	0x14004001  	USART6_SR+0
; end of _UART6_Write
_UART1_Write_Text:
;__Lib_UART_123_45_6.c, 78 :: 		
; uart_text start address is: 0 (R0)
0x16C4	0xB081    SUB	SP, SP, #4
0x16C6	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 79 :: 		
0x16CA	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x16CC	0x4803    LDR	R0, [PC, #12]
0x16CE	0xF7FFFB95  BL	__Lib_UART_123_45_6_UARTx_Write_Text+0
;__Lib_UART_123_45_6.c, 80 :: 		
L_end_UART1_Write_Text:
0x16D2	0xF8DDE000  LDR	LR, [SP, #0]
0x16D6	0xB001    ADD	SP, SP, #4
0x16D8	0x4770    BX	LR
0x16DA	0xBF00    NOP
0x16DC	0x10004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_6_UARTx_Write_Text:
;__Lib_UART_123_45_6.c, 67 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0DFC	0xB081    SUB	SP, SP, #4
0x0DFE	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 68 :: 		
; counter start address is: 24 (R6)
0x0E02	0x2600    MOVS	R6, #0
;__Lib_UART_123_45_6.c, 70 :: 		
0x0E04	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x0E06	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x0E08	0x4605    MOV	R5, R0
0x0E0A	0xB2D8    UXTB	R0, R3
0x0E0C	0x460C    MOV	R4, R1
;__Lib_UART_123_45_6.c, 71 :: 		
L___Lib_UART_123_45_6_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x0E0E	0xB150    CBZ	R0, L___Lib_UART_123_45_6_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45_6.c, 72 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x0E10	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x0E12	0x4628    MOV	R0, R5
0x0E14	0xF7FFF9B8  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 73 :: 		
0x0E18	0x1C72    ADDS	R2, R6, #1
0x0E1A	0xB2D2    UXTB	R2, R2
0x0E1C	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45_6.c, 74 :: 		
0x0E1E	0x18A2    ADDS	R2, R4, R2
0x0E20	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x0E22	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45_6.c, 75 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x0E24	0xE7F3    B	L___Lib_UART_123_45_6_UARTx_Write_Text2
L___Lib_UART_123_45_6_UARTx_Write_Text3:
;__Lib_UART_123_45_6.c, 76 :: 		
L_end_UARTx_Write_Text:
0x0E26	0xF8DDE000  LDR	LR, [SP, #0]
0x0E2A	0xB001    ADD	SP, SP, #4
0x0E2C	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write_Text
_calc_finger_state:
;Input Capture Four Channel Demo.c, 403 :: 		void calc_finger_state( struct finger *fngr) {
; fngr start address is: 0 (R0)
0x1184	0xB083    SUB	SP, SP, #12
0x1186	0xF8CDE000  STR	LR, [SP, #0]
0x118A	0x4681    MOV	R9, R0
; fngr end address is: 0 (R0)
; fngr start address is: 36 (R9)
;Input Capture Four Channel Demo.c, 406 :: 		fngr->enc_overflow_delta = (unsigned long) fngr->enc_overflow_end - fngr->enc_overflow_start;
0x118C	0xF1090330  ADD	R3, R9, #48
0x1190	0xF109012C  ADD	R1, R9, #44
0x1194	0x680A    LDR	R2, [R1, #0]
0x1196	0xF1090128  ADD	R1, R9, #40
0x119A	0x6809    LDR	R1, [R1, #0]
0x119C	0x1A51    SUB	R1, R2, R1
0x119E	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 409 :: 		fngr->enc_overflow_ticks = (unsigned long) fngr->enc_overflow_delta * (ENCODER_TIM_RELOAD - 3);
0x11A0	0xF1090334  ADD	R3, R9, #52
0x11A4	0xF1090130  ADD	R1, R9, #48
0x11A8	0x680A    LDR	R2, [R1, #0]
0x11AA	0x493A    LDR	R1, [PC, #232]
0x11AC	0x6809    LDR	R1, [R1, #0]
0x11AE	0x1EC9    SUBS	R1, R1, #3
0x11B0	0x4351    MULS	R1, R2, R1
0x11B2	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 412 :: 		fngr->enc_delta_ticks = (unsigned long) fngr->enc_end_time - fngr->enc_start_time;
0x11B4	0xF1090324  ADD	R3, R9, #36
0x11B8	0xF1090120  ADD	R1, R9, #32
0x11BC	0x680A    LDR	R2, [R1, #0]
0x11BE	0xF109011C  ADD	R1, R9, #28
0x11C2	0x6809    LDR	R1, [R1, #0]
0x11C4	0x1A51    SUB	R1, R2, R1
0x11C6	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 415 :: 		fngr->enc_total_ticks = (unsigned long) fngr->enc_overflow_ticks + fngr->enc_delta_ticks;
0x11C8	0xF1090338  ADD	R3, R9, #56
0x11CC	0xF1090134  ADD	R1, R9, #52
0x11D0	0x680A    LDR	R2, [R1, #0]
0x11D2	0xF1090124  ADD	R1, R9, #36
0x11D6	0x6809    LDR	R1, [R1, #0]
0x11D8	0x1851    ADDS	R1, R2, R1
0x11DA	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 418 :: 		fngr->input_sig_period = (long double) fngr->enc_total_ticks * timer3_period_ms;
0x11DC	0xF1090140  ADD	R1, R9, #64
0x11E0	0x9101    STR	R1, [SP, #4]
0x11E2	0xF1090138  ADD	R1, R9, #56
0x11E6	0x6809    LDR	R1, [R1, #0]
0x11E8	0x4608    MOV	R0, R1
0x11EA	0xF7FFFEA3  BL	__UnsignedIntegralToLongDouble+0
0x11EE	0x4A2A    LDR	R2, [PC, #168]
0x11F0	0xED120B00  VLDR.64	D0, [R2, #0]
0x11F4	0xEE102A10  VMOV	R2, S0
0x11F8	0xEE103A90  VMOV	R3, S1
0x11FC	0xF7FFFD7A  BL	__Mul_DP+0
0x1200	0x9A01    LDR	R2, [SP, #4]
0x1202	0xE9C20100  STRD	R0, R1, [R2, #0]
;Input Capture Four Channel Demo.c, 421 :: 		fngr->input_sig_frequency = (unsigned long) 1000.0 / fngr->input_sig_period;
0x1206	0xF109013C  ADD	R1, R9, #60
0x120A	0x9102    STR	R1, [SP, #8]
0x120C	0xF1090140  ADD	R1, R9, #64
0x1210	0x9101    STR	R1, [SP, #4]
0x1212	0xF44F717A  MOV	R1, #1000
0x1216	0xEE001A10  VMOV	S0, R1
0x121A	0xEE100A10  VMOV	R0, S0
0x121E	0xF7FFFE89  BL	__UnsignedIntegralToLongDouble+0
0x1222	0x9A01    LDR	R2, [SP, #4]
0x1224	0xE9D22300  LDRD	R2, R3, [R2, #0]
0x1228	0xF7FFFF06  BL	__Div_DP+0
0x122C	0xF7FFFE0C  BL	__LongDoubleToUnsignedIntegral+0
0x1230	0x9902    LDR	R1, [SP, #8]
0x1232	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 424 :: 		if (fngr->enc_chan_b == 1) {                                                // Clockwise
0x1234	0xF109011A  ADD	R1, R9, #26
0x1238	0x8809    LDRH	R1, [R1, #0]
0x123A	0x2901    CMP	R1, #1
0x123C	0xD10C    BNE	L_calc_finger_state15
;Input Capture Four Channel Demo.c, 425 :: 		fngr->direction_actual = EXTEND;
0x123E	0xF1090218  ADD	R2, R9, #24
0x1242	0x2101    MOVS	R1, #1
0x1244	0x8011    STRH	R1, [R2, #0]
;Input Capture Four Channel Demo.c, 426 :: 		fngr->position_actual += fngr->position_temp;                       // Calculate new position
0x1246	0xF1090314  ADD	R3, R9, #20
0x124A	0xF1090110  ADD	R1, R9, #16
0x124E	0x680A    LDR	R2, [R1, #0]
0x1250	0x6819    LDR	R1, [R3, #0]
0x1252	0x1889    ADDS	R1, R1, R2
0x1254	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 427 :: 		}
0x1256	0xE014    B	L_calc_finger_state16
L_calc_finger_state15:
;Input Capture Four Channel Demo.c, 429 :: 		else if (fngr->enc_chan_b == 0) {                                           // Counter Clockwise
0x1258	0xF109011A  ADD	R1, R9, #26
0x125C	0x8809    LDRH	R1, [R1, #0]
0x125E	0xB961    CBNZ	R1, L_calc_finger_state17
;Input Capture Four Channel Demo.c, 430 :: 		fngr->direction_actual = CONTRACT;
0x1260	0xF1090218  ADD	R2, R9, #24
0x1264	0x2100    MOVS	R1, #0
0x1266	0x8011    STRH	R1, [R2, #0]
;Input Capture Four Channel Demo.c, 431 :: 		fngr->position_actual -= fngr->position_temp;                       // Calculate new position
0x1268	0xF1090314  ADD	R3, R9, #20
0x126C	0xF1090110  ADD	R1, R9, #16
0x1270	0x680A    LDR	R2, [R1, #0]
0x1272	0x6819    LDR	R1, [R3, #0]
0x1274	0x1A89    SUB	R1, R1, R2
0x1276	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 432 :: 		}
0x1278	0xE003    B	L_calc_finger_state18
L_calc_finger_state17:
;Input Capture Four Channel Demo.c, 435 :: 		fngr->direction_actual = 7;
0x127A	0xF1090218  ADD	R2, R9, #24
0x127E	0x2107    MOVS	R1, #7
0x1280	0x8011    STRH	R1, [R2, #0]
;Input Capture Four Channel Demo.c, 436 :: 		}
L_calc_finger_state18:
L_calc_finger_state16:
;Input Capture Four Channel Demo.c, 439 :: 		fngr->position_temp = 0;
0x1282	0xF1090210  ADD	R2, R9, #16
; fngr end address is: 36 (R9)
0x1286	0x2100    MOVS	R1, #0
0x1288	0x6011    STR	R1, [R2, #0]
;Input Capture Four Channel Demo.c, 440 :: 		}
L_end_calc_finger_state:
0x128A	0xF8DDE000  LDR	LR, [SP, #0]
0x128E	0xB003    ADD	SP, SP, #12
0x1290	0x4770    BX	LR
0x1292	0xBF00    NOP
0x1294	0x00182000  	_ENCODER_TIM_RELOAD+0
0x1298	0x01102000  	_timer3_period_ms+0
; end of _calc_finger_state
__Mul_DP:
;__Lib_MathDouble.c, 1275 :: 		
0x0CF4	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1277 :: 		
0x0CF6	0xE92D41FC  PUSH	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1279 :: 		
0x0CFA	0xEA910803  EORS	R8, R1, R3, LSL #0
;__Lib_MathDouble.c, 1280 :: 		
0x0CFE	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1281 :: 		
0x0D00	0xF04F4800  MOVMI	R8, #-2147483648
;__Lib_MathDouble.c, 1282 :: 		
0x0D04	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 1284 :: 		
0x0D08	0xEA4F25C3  LSL	R5, R3, #11
;__Lib_MathDouble.c, 1285 :: 		
0x0D0C	0xEA455552  ORR	R5, R5, R2, LSR #21
;__Lib_MathDouble.c, 1286 :: 		
0x0D10	0xEA4F26C2  LSL	R6, R2, #11
;__Lib_MathDouble.c, 1287 :: 		
0x0D14	0xEA4F0743  LSL	R7, R3, #1
;__Lib_MathDouble.c, 1288 :: 		
0x0D18	0x0D7F    LSRS	R7, R7, #21
;__Lib_MathDouble.c, 1289 :: 		
0x0D1A	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1290 :: 		
0x0D1C	0xF0454500  ORRNE	R5, R5, #-2147483648
;__Lib_MathDouble.c, 1291 :: 		
0x0D20	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1292 :: 		
0x0D24	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1294 :: 		
0x0D28	0xE063    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1296 :: 		
0x0D2A	0xF45F6EE0  MOVS	LR, #1792
;__Lib_MathDouble.c, 1297 :: 		
0x0D2E	0xF11E0EFF  ADDS	LR, LR, #255
;__Lib_MathDouble.c, 1298 :: 		
0x0D32	0x4577    CMP	R7, LR
;__Lib_MathDouble.c, 1299 :: 		
0x0D34	0xD056    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1301 :: 		
0x0D36	0xEA4F23C1  LSL	R3, R1, #11
;__Lib_MathDouble.c, 1302 :: 		
0x0D3A	0xEA435350  ORR	R3, R3, R0, LSR #21
;__Lib_MathDouble.c, 1303 :: 		
0x0D3E	0xEA4F22C0  LSL	R2, R0, #11
;__Lib_MathDouble.c, 1304 :: 		
0x0D42	0xEA4F0441  LSL	R4, R1, #1
;__Lib_MathDouble.c, 1305 :: 		
0x0D46	0x0D64    LSRS	R4, R4, #21
;__Lib_MathDouble.c, 1306 :: 		
0x0D48	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1307 :: 		
0x0D4A	0xF0434300  ORRNE	R3, R3, #-2147483648
;__Lib_MathDouble.c, 1308 :: 		
0x0D4E	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1309 :: 		
0x0D52	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1311 :: 		
0x0D56	0xE04C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1313 :: 		
0x0D58	0x4574    CMP	R4, LR
;__Lib_MathDouble.c, 1314 :: 		
0x0D5A	0xD043    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1316 :: 		
0x0D5C	0x19E4    ADDS	R4, R4, R7
;__Lib_MathDouble.c, 1319 :: 		
0x0D5E	0xFBA30105  UMULL	R0, R1, R3, R5
;__Lib_MathDouble.c, 1320 :: 		
0x0D62	0xFBA3E706  UMULL	LR, R7, R3, R6
;__Lib_MathDouble.c, 1321 :: 		
0x0D66	0xFBA26306  UMULL	R6, R3, R2, R6
;__Lib_MathDouble.c, 1322 :: 		
0x0D6A	0xEB1E0E03  ADDS	LR, LR, R3, LSL #0
;__Lib_MathDouble.c, 1323 :: 		
0x0D6E	0xF1570700  ADCS	R7, R7, #0
;__Lib_MathDouble.c, 1324 :: 		
0x0D72	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1325 :: 		
0x0D76	0xFBA26305  UMULL	R6, R3, R2, R5
;__Lib_MathDouble.c, 1326 :: 		
0x0D7A	0xEB1E0E06  ADDS	LR, LR, R6, LSL #0
;__Lib_MathDouble.c, 1327 :: 		
0x0D7E	0xF1570700  ADCS	R7, R7, #0
;__Lib_MathDouble.c, 1328 :: 		
0x0D82	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1329 :: 		
0x0D86	0x18FF    ADDS	R7, R7, R3
;__Lib_MathDouble.c, 1330 :: 		
0x0D88	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1331 :: 		
0x0D8C	0x19C0    ADDS	R0, R0, R7
;__Lib_MathDouble.c, 1332 :: 		
0x0D8E	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1334 :: 		
0x0D92	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1335 :: 		
0x0D94	0xF44F6E80  MOVMI	LR, #1024
;__Lib_MathDouble.c, 1336 :: 		
0x0D98	0xF44F7E00  MOVPL	LR, #512
;__Lib_MathDouble.c, 1338 :: 		
0x0D9C	0xEB10000E  ADDS	R0, R0, LR, LSL #0
;__Lib_MathDouble.c, 1339 :: 		
0x0DA0	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1341 :: 		
0x0DA4	0xBF48    IT	MI
;__Lib_MathDouble.c, 1342 :: 		
0x0DA6	0x1C64    ADDMI	R4, R4, #1
;__Lib_MathDouble.c, 1343 :: 		
0x0DA8	0xD401    BMI	__me_lab1
;__Lib_MathDouble.c, 1344 :: 		
0x0DAA	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1345 :: 		
0x0DAC	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1347 :: 		
__me_lab1:
0x0DAE	0xF45F7740  MOVS	R7, #768
;__Lib_MathDouble.c, 1348 :: 		
0x0DB2	0x37FF    ADDS	R7, #255
;__Lib_MathDouble.c, 1349 :: 		
0x0DB4	0x1BE4    SUBS	R4, R4, R7
;__Lib_MathDouble.c, 1350 :: 		
0x0DB6	0xBFDE    ITTT	LE
;__Lib_MathDouble.c, 1351 :: 		
0x0DB8	0xF04F0100  MOVLE	R1, #0
;__Lib_MathDouble.c, 1352 :: 		
0x0DBC	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 1354 :: 		
0x0DC0	0xE017    BLE	__me_lab_end
;__Lib_MathDouble.c, 1356 :: 		
0x0DC2	0xF5176780  ADDS	R7, R7, #1024
;__Lib_MathDouble.c, 1357 :: 		
0x0DC6	0x42BC    CMP	R4, R7
;__Lib_MathDouble.c, 1358 :: 		
0x0DC8	0xD20C    BCS	__me_ovfl
;__Lib_MathDouble.c, 1360 :: 		
0x0DCA	0xEA4F20D0  LSR	R0, R0, #11
;__Lib_MathDouble.c, 1361 :: 		
0x0DCE	0xEA405041  ORR	R0, R0, R1, LSL #21
;__Lib_MathDouble.c, 1362 :: 		
0x0DD2	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 1363 :: 		
0x0DD6	0xEA4F3111  LSR	R1, R1, #12
;__Lib_MathDouble.c, 1364 :: 		
0x0DDA	0xEA415104  ORR	R1, R1, R4, LSL #20
;__Lib_MathDouble.c, 1365 :: 		
0x0DDE	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1368 :: 		
0x0DE2	0xE006    B	__me_lab_end
;__Lib_MathDouble.c, 1371 :: 		
__me_ovfl:
0x0DE4	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1372 :: 		
0x0DE6	0x21FF    MOVS	R1, #255
;__Lib_MathDouble.c, 1373 :: 		
0x0DE8	0x00C9    LSLS	R1, R1, #3
;__Lib_MathDouble.c, 1374 :: 		
0x0DEA	0x1DC9    ADDS	R1, R1, #7
;__Lib_MathDouble.c, 1375 :: 		
0x0DEC	0x0509    LSLS	R1, R1, #20
;__Lib_MathDouble.c, 1376 :: 		
0x0DEE	0xEA510108  ORRS	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1377 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 1378 :: 		
0x0DF2	0xE8BD41FC  POP	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1380 :: 		
L_end__Mul_DP:
0x0DF6	0xB001    ADD	SP, SP, #4
0x0DF8	0x4770    BX	LR
; end of __Mul_DP
__LongDoubleToUnsignedIntegral:
;__Lib_MathDouble.c, 134 :: 		
0x0E48	0xB081    SUB	SP, SP, #4
0x0E4A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MathDouble.c, 136 :: 		
0x0E4E	0xB504    PUSH	(R2, R14)
;__Lib_MathDouble.c, 137 :: 		
0x0E50	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 138 :: 		
0x0E52	0xD502    BPL	__me_pos
;__Lib_MathDouble.c, 142 :: 		
0x0E54	0xF7FFFB84  BL	__LongDoubleToSignedIntegral+0
;__Lib_MathDouble.c, 143 :: 		
0x0E58	0xE01C    B	__me_endLab
;__Lib_MathDouble.c, 144 :: 		
__me_pos:
;__Lib_MathDouble.c, 147 :: 		
0x0E5A	0xEA4F0241  LSL	R2, R1, #1
;__Lib_MathDouble.c, 148 :: 		
0x0E5E	0xEA4F5252  LSR	R2, R2, #21
;__Lib_MathDouble.c, 150 :: 		
0x0E62	0xF5B27240  SUBS	R2, R2, #768
;__Lib_MathDouble.c, 151 :: 		
0x0E66	0x3AFF    SUBS	R2, #255
;__Lib_MathDouble.c, 152 :: 		
0x0E68	0xBF44    ITT	MI
;__Lib_MathDouble.c, 153 :: 		
0x0E6A	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 155 :: 		
0x0E6E	0xE011    BMI	__me_endLab
;__Lib_MathDouble.c, 157 :: 		
0x0E70	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 158 :: 		
0x0E74	0xD30C    BCC	__me_ovfl
;__Lib_MathDouble.c, 160 :: 		
0x0E76	0xEA4F21C1  LSL	R1, R1, #11
;__Lib_MathDouble.c, 161 :: 		
0x0E7A	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 163 :: 		
0x0E7E	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 164 :: 		
0x0E80	0x2A0B    CMP	R2, #11
;__Lib_MathDouble.c, 165 :: 		
0x0E82	0xBF3E    ITTT	CC
;__Lib_MathDouble.c, 166 :: 		
0x0E84	0x3215    ADDCC	R2, #21
;__Lib_MathDouble.c, 167 :: 		
0x0E86	0xFA20F202  LSRCC	R2, R0, R2
;__Lib_MathDouble.c, 168 :: 		
0x0E8A	0x4311    ORRCC	R1, R2
;__Lib_MathDouble.c, 170 :: 		
0x0E8C	0x4608    MOV	R0, R1
;__Lib_MathDouble.c, 173 :: 		
0x0E8E	0xE001    B	__me_endLab
;__Lib_MathDouble.c, 175 :: 		
__me_ovfl:
0x0E90	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 176 :: 		
0x0E92	0x1E40    SUBS	R0, R0, #1
;__Lib_MathDouble.c, 178 :: 		
__me_endLab:
;__Lib_MathDouble.c, 179 :: 		
0x0E94	0xE8BD4004  POP	(R2, R14)
;__Lib_MathDouble.c, 181 :: 		
L_end__LongDoubleToUnsignedIntegral:
0x0E98	0xF8DDE000  LDR	LR, [SP, #0]
0x0E9C	0xB001    ADD	SP, SP, #4
0x0E9E	0x4770    BX	LR
; end of __LongDoubleToUnsignedIntegral
__LongDoubleToSignedIntegral:
;__Lib_MathDouble.c, 87 :: 		
0x0560	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 89 :: 		
0x0562	0xB50C    PUSH	(R2, R3, R14)
;__Lib_MathDouble.c, 91 :: 		
0x0564	0xEA4F0341  LSL	R3, R1, #1
;__Lib_MathDouble.c, 92 :: 		
0x0568	0xEA4F5353  LSR	R3, R3, #21
;__Lib_MathDouble.c, 94 :: 		
0x056C	0xF5B37340  SUBS	R3, R3, #768
;__Lib_MathDouble.c, 95 :: 		
0x0570	0x3BFF    SUBS	R3, #255
;__Lib_MathDouble.c, 96 :: 		
0x0572	0xBF44    ITT	MI
;__Lib_MathDouble.c, 97 :: 		
0x0574	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 99 :: 		
0x0578	0xE017    BMI	__me_lab_end
;__Lib_MathDouble.c, 101 :: 		
0x057A	0xF1D3031F  RSBS	R3, R3, #31
;__Lib_MathDouble.c, 102 :: 		
0x057E	0xD90F    BLS	__me_ovfl
;__Lib_MathDouble.c, 104 :: 		
0x0580	0xEA4F22C1  LSL	R2, R1, #11
;__Lib_MathDouble.c, 105 :: 		
0x0584	0xF0424200  ORR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 107 :: 		
0x0588	0xFA22F203  LSR	R2, R2, R3
;__Lib_MathDouble.c, 108 :: 		
0x058C	0x2B0B    CMP	R3, #11
;__Lib_MathDouble.c, 109 :: 		
0x058E	0xBF3E    ITTT	CC
;__Lib_MathDouble.c, 110 :: 		
0x0590	0x3315    ADDCC	R3, #21
;__Lib_MathDouble.c, 111 :: 		
0x0592	0x40D8    LSRCC	R0, R3
;__Lib_MathDouble.c, 112 :: 		
0x0594	0x4302    ORRCC	R2, R0
;__Lib_MathDouble.c, 114 :: 		
0x0596	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 115 :: 		
0x0598	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 116 :: 		
0x059A	0x4250    RSBMI	R0, R2, #0
;__Lib_MathDouble.c, 117 :: 		
0x059C	0x4610    MOVPL	R0, R2
;__Lib_MathDouble.c, 120 :: 		
0x059E	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 122 :: 		
__me_ovfl:
0x05A0	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 123 :: 		
0x05A2	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 124 :: 		
0x05A6	0xBF58    IT	PL
;__Lib_MathDouble.c, 125 :: 		
0x05A8	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 126 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 127 :: 		
0x05AA	0xE8BD400C  POP	(R2, R3, R14)
;__Lib_MathDouble.c, 129 :: 		
L_end__LongDoubleToSignedIntegral:
0x05AE	0xB001    ADD	SP, SP, #4
0x05B0	0x4770    BX	LR
; end of __LongDoubleToSignedIntegral
_print_finger_info:
;Input Capture Four Channel Demo.c, 444 :: 		void print_finger_info( struct finger *fngr) {
; fngr start address is: 0 (R0)
0x129C	0xB089    SUB	SP, SP, #36
0x129E	0xF8CDE000  STR	LR, [SP, #0]
0x12A2	0x4607    MOV	R7, R0
; fngr end address is: 0 (R0)
; fngr start address is: 28 (R7)
;Input Capture Four Channel Demo.c, 451 :: 		UART1_Write_Text("\n\rFinger Name: ");                                      //Print name of current finger to terminal
0x12A4	0x492A    LDR	R1, [PC, #168]
0x12A6	0x4608    MOV	R0, R1
0x12A8	0xF000FA0C  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 452 :: 		UART1_Write_Text(fngr->name);
0x12AC	0x4638    MOV	R0, R7
0x12AE	0xF000FA09  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 453 :: 		UART1_Write_Text("\n\r");
0x12B2	0x4928    LDR	R1, [PC, #160]
0x12B4	0x4608    MOV	R0, R1
0x12B6	0xF000FA05  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 455 :: 		LongWordToStr(fngr->input_sig_frequency, frequency_text);                   // Print input capture signal frequency to terminal
0x12BA	0xAA01    ADD	R2, SP, #4
0x12BC	0xF207013C  ADDW	R1, R7, #60
0x12C0	0x6809    LDR	R1, [R1, #0]
0x12C2	0x4608    MOV	R0, R1
0x12C4	0x4611    MOV	R1, R2
0x12C6	0xF7FFFCEF  BL	_LongWordToStr+0
;Input Capture Four Channel Demo.c, 456 :: 		UART1_Write_Text("Frequency of incoming signal (Hz): ");
0x12CA	0x4923    LDR	R1, [PC, #140]
0x12CC	0x4608    MOV	R0, R1
0x12CE	0xF000F9F9  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 457 :: 		UART1_Write_Text(frequency_text);
0x12D2	0xA901    ADD	R1, SP, #4
0x12D4	0x4608    MOV	R0, R1
0x12D6	0xF000F9F5  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 458 :: 		UART1_Write_Text("\n\r");
0x12DA	0x4920    LDR	R1, [PC, #128]
0x12DC	0x4608    MOV	R0, R1
0x12DE	0xF000F9F1  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 461 :: 		UART1_Write_Text("Direction of movement:             ");
0x12E2	0x491F    LDR	R1, [PC, #124]
0x12E4	0x4608    MOV	R0, R1
0x12E6	0xF000F9ED  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 462 :: 		if(fngr->direction_actual == EXTEND)
0x12EA	0xF2070118  ADDW	R1, R7, #24
0x12EE	0x8809    LDRH	R1, [R1, #0]
0x12F0	0x2901    CMP	R1, #1
0x12F2	0xD104    BNE	L_print_finger_info19
;Input Capture Four Channel Demo.c, 463 :: 		UART1_Write_Text("EXTEND ");
0x12F4	0x491B    LDR	R1, [PC, #108]
0x12F6	0x4608    MOV	R0, R1
0x12F8	0xF000F9E4  BL	_UART1_Write_Text+0
0x12FC	0xE007    B	L_print_finger_info20
L_print_finger_info19:
;Input Capture Four Channel Demo.c, 464 :: 		else if(fngr->direction_actual == CONTRACT)
0x12FE	0xF2070118  ADDW	R1, R7, #24
0x1302	0x8809    LDRH	R1, [R1, #0]
0x1304	0xB919    CBNZ	R1, L_print_finger_info21
;Input Capture Four Channel Demo.c, 465 :: 		UART1_Write_Text("CONTRACT ");
0x1306	0x4918    LDR	R1, [PC, #96]
0x1308	0x4608    MOV	R0, R1
0x130A	0xF000F9DB  BL	_UART1_Write_Text+0
L_print_finger_info21:
L_print_finger_info20:
;Input Capture Four Channel Demo.c, 467 :: 		UART1_Write_Text("\n\r");
0x130E	0x4917    LDR	R1, [PC, #92]
0x1310	0x4608    MOV	R0, R1
0x1312	0xF000F9D7  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 469 :: 		LongToStr(fngr->position_actual, position_text);                            // Print total number of input events (position) to terminal
0x1316	0xF10D0213  ADD	R2, SP, #19
0x131A	0xF2070114  ADDW	R1, R7, #20
; fngr end address is: 28 (R7)
0x131E	0x6809    LDR	R1, [R1, #0]
0x1320	0x4608    MOV	R0, R1
0x1322	0x4611    MOV	R1, R2
0x1324	0xF7FFFE38  BL	_LongToStr+0
;Input Capture Four Channel Demo.c, 470 :: 		UART1_Write_Text("Position of finger:                ");
0x1328	0x4911    LDR	R1, [PC, #68]
0x132A	0x4608    MOV	R0, R1
0x132C	0xF000F9CA  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 471 :: 		UART1_Write_Text(position_text);
0x1330	0xF10D0113  ADD	R1, SP, #19
0x1334	0x4608    MOV	R0, R1
0x1336	0xF000F9C5  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 472 :: 		UART1_Write_Text("\n\n\n\r");
0x133A	0x490E    LDR	R1, [PC, #56]
0x133C	0x4608    MOV	R0, R1
0x133E	0xF000F9C1  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 474 :: 		terminal_print_count = 0;                                                   // Reset counter for terminal printing
0x1342	0x2200    MOVS	R2, #0
0x1344	0x490C    LDR	R1, [PC, #48]
0x1346	0x800A    STRH	R2, [R1, #0]
;Input Capture Four Channel Demo.c, 475 :: 		}
L_end_print_finger_info:
0x1348	0xF8DDE000  LDR	LR, [SP, #0]
0x134C	0xB009    ADD	SP, SP, #36
0x134E	0x4770    BX	LR
0x1350	0x00632000  	?lstr9_Input_32Capture_32Four_32Channel_32Demo+0
0x1354	0x00732000  	?lstr10_Input_32Capture_32Four_32Channel_32Demo+0
0x1358	0x00762000  	?lstr11_Input_32Capture_32Four_32Channel_32Demo+0
0x135C	0x009A2000  	?lstr12_Input_32Capture_32Four_32Channel_32Demo+0
0x1360	0x009D2000  	?lstr13_Input_32Capture_32Four_32Channel_32Demo+0
0x1364	0x00C12000  	?lstr14_Input_32Capture_32Four_32Channel_32Demo+0
0x1368	0x00C92000  	?lstr15_Input_32Capture_32Four_32Channel_32Demo+0
0x136C	0x00D32000  	?lstr16_Input_32Capture_32Four_32Channel_32Demo+0
0x1370	0x00D62000  	?lstr17_Input_32Capture_32Four_32Channel_32Demo+0
0x1374	0x00FA2000  	?lstr18_Input_32Capture_32Four_32Channel_32Demo+0
0x1378	0x011A2000  	_terminal_print_count+0
; end of _print_finger_info
_LongWordToStr:
;__Lib_Conversions.c, 274 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0CA8	0xB081    SUB	SP, SP, #4
0x0CAA	0x460A    MOV	R2, R1
0x0CAC	0x4601    MOV	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 277 :: 		
; len start address is: 0 (R0)
0x0CAE	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x0CB0	0x460D    MOV	R5, R1
0x0CB2	0x4611    MOV	R1, R2
L_LongWordToStr52:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x0CB4	0x280A    CMP	R0, #10
0x0CB6	0xD205    BCS	L_LongWordToStr53
;__Lib_Conversions.c, 278 :: 		
0x0CB8	0x180B    ADDS	R3, R1, R0
0x0CBA	0x2220    MOVS	R2, #32
0x0CBC	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 277 :: 		
0x0CBE	0x1C40    ADDS	R0, R0, #1
0x0CC0	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 278 :: 		
0x0CC2	0xE7F7    B	L_LongWordToStr52
L_LongWordToStr53:
;__Lib_Conversions.c, 279 :: 		
0x0CC4	0x180B    ADDS	R3, R1, R0
0x0CC6	0x2200    MOVS	R2, #0
0x0CC8	0x701A    STRB	R2, [R3, #0]
0x0CCA	0x1E40    SUBS	R0, R0, #1
0x0CCC	0xB280    UXTH	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 281 :: 		
L_LongWordToStr55:
;__Lib_Conversions.c, 282 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x0CCE	0x180C    ADDS	R4, R1, R0
0x0CD0	0x230A    MOVS	R3, #10
0x0CD2	0xFBB5F2F3  UDIV	R2, R5, R3
0x0CD6	0xFB035212  MLS	R2, R3, R2, R5
0x0CDA	0x3230    ADDS	R2, #48
0x0CDC	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 283 :: 		
0x0CDE	0x220A    MOVS	R2, #10
0x0CE0	0xFBB5F2F2  UDIV	R2, R5, R2
0x0CE4	0x4615    MOV	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 284 :: 		
0x0CE6	0xB902    CBNZ	R2, L_LongWordToStr57
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 285 :: 		
0x0CE8	0xE002    B	L_LongWordToStr56
L_LongWordToStr57:
;__Lib_Conversions.c, 286 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x0CEA	0x1E40    SUBS	R0, R0, #1
0x0CEC	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 287 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x0CEE	0xE7EE    B	L_LongWordToStr55
L_LongWordToStr56:
;__Lib_Conversions.c, 288 :: 		
L_end_LongWordToStr:
0x0CF0	0xB001    ADD	SP, SP, #4
0x0CF2	0x4770    BX	LR
; end of _LongWordToStr
_LongToStr:
;__Lib_Conversions.c, 305 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0F98	0xB081    SUB	SP, SP, #4
0x0F9A	0xF8CDE000  STR	LR, [SP, #0]
0x0F9E	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 311 :: 		
; negative start address is: 4 (R1)
0x0FA0	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 312 :: 		
; inword start address is: 12 (R3)
0x0FA2	0x4603    MOV	R3, R0
;__Lib_Conversions.c, 313 :: 		
0x0FA4	0x2800    CMP	R0, #0
0x0FA6	0xDA04    BGE	L__LongToStr166
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 314 :: 		
0x0FA8	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 315 :: 		
0x0FAA	0x4240    RSBS	R0, R0, #0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x0FAC	0x4600    MOV	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x0FAE	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 316 :: 		
0x0FB0	0xE001    B	L_LongToStr63
L__LongToStr166:
;__Lib_Conversions.c, 313 :: 		
0x0FB2	0x4618    MOV	R0, R3
0x0FB4	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 316 :: 		
L_LongToStr63:
;__Lib_Conversions.c, 317 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x0FB6	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x0FB8	0xF7FFFE76  BL	_LongWordToStr+0
;__Lib_Conversions.c, 319 :: 		
; i start address is: 4 (R1)
0x0FBC	0x210B    MOVS	R1, #11
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x0FBE	0x4634    MOV	R4, R6
0x0FC0	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 320 :: 		
L_LongToStr64:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x0FC2	0x2900    CMP	R1, #0
0x0FC4	0xD908    BLS	L_LongToStr65
;__Lib_Conversions.c, 321 :: 		
0x0FC6	0x1863    ADDS	R3, R4, R1
0x0FC8	0x1E4A    SUBS	R2, R1, #1
0x0FCA	0xB292    UXTH	R2, R2
0x0FCC	0x18A2    ADDS	R2, R4, R2
0x0FCE	0x7812    LDRB	R2, [R2, #0]
0x0FD0	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 322 :: 		
0x0FD2	0x1E49    SUBS	R1, R1, #1
0x0FD4	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 323 :: 		
; i end address is: 4 (R1)
0x0FD6	0xE7F4    B	L_LongToStr64
L_LongToStr65:
;__Lib_Conversions.c, 324 :: 		
0x0FD8	0x2220    MOVS	R2, #32
0x0FDA	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 325 :: 		
0x0FDC	0xB170    CBZ	R0, L_LongToStr66
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 326 :: 		
; i start address is: 0 (R0)
0x0FDE	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x0FE0	0xB281    UXTH	R1, R0
0x0FE2	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 327 :: 		
L_LongToStr67:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x0FE4	0x1842    ADDS	R2, R0, R1
0x0FE6	0x7812    LDRB	R2, [R2, #0]
0x0FE8	0x2A20    CMP	R2, #32
0x0FEA	0xD102    BNE	L_LongToStr68
0x0FEC	0x1C49    ADDS	R1, R1, #1
0x0FEE	0xB289    UXTH	R1, R1
0x0FF0	0xE7F8    B	L_LongToStr67
L_LongToStr68:
;__Lib_Conversions.c, 328 :: 		
0x0FF2	0x1E4A    SUBS	R2, R1, #1
0x0FF4	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 329 :: 		
0x0FF6	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x0FF8	0x222D    MOVS	R2, #45
0x0FFA	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 330 :: 		
L_LongToStr66:
;__Lib_Conversions.c, 331 :: 		
L_end_LongToStr:
0x0FFC	0xF8DDE000  LDR	LR, [SP, #0]
0x1000	0xB001    ADD	SP, SP, #4
0x1002	0x4770    BX	LR
; end of _LongToStr
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x1994	0xB082    SUB	SP, SP, #8
0x1996	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x199A	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x199C	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x199E	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x19A0	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19A2	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x19A4	0x2803    CMP	R0, #3
0x19A6	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x19AA	0x4893    LDR	R0, [PC, #588]
0x19AC	0x4281    CMP	R1, R0
0x19AE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x19B0	0x4892    LDR	R0, [PC, #584]
0x19B2	0x6800    LDR	R0, [R0, #0]
0x19B4	0xF0400105  ORR	R1, R0, #5
0x19B8	0x4890    LDR	R0, [PC, #576]
0x19BA	0x6001    STR	R1, [R0, #0]
0x19BC	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19BE	0x4890    LDR	R0, [PC, #576]
0x19C0	0x4281    CMP	R1, R0
0x19C2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x19C4	0x488D    LDR	R0, [PC, #564]
0x19C6	0x6800    LDR	R0, [R0, #0]
0x19C8	0xF0400104  ORR	R1, R0, #4
0x19CC	0x488B    LDR	R0, [PC, #556]
0x19CE	0x6001    STR	R1, [R0, #0]
0x19D0	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19D2	0x488C    LDR	R0, [PC, #560]
0x19D4	0x4281    CMP	R1, R0
0x19D6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x19D8	0x4888    LDR	R0, [PC, #544]
0x19DA	0x6800    LDR	R0, [R0, #0]
0x19DC	0xF0400103  ORR	R1, R0, #3
0x19E0	0x4886    LDR	R0, [PC, #536]
0x19E2	0x6001    STR	R1, [R0, #0]
0x19E4	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19E6	0xF64E2060  MOVW	R0, #60000
0x19EA	0x4281    CMP	R1, R0
0x19EC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x19EE	0x4883    LDR	R0, [PC, #524]
0x19F0	0x6800    LDR	R0, [R0, #0]
0x19F2	0xF0400102  ORR	R1, R0, #2
0x19F6	0x4881    LDR	R0, [PC, #516]
0x19F8	0x6001    STR	R1, [R0, #0]
0x19FA	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19FC	0xF2475030  MOVW	R0, #30000
0x1A00	0x4281    CMP	R1, R0
0x1A02	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x1A04	0x487D    LDR	R0, [PC, #500]
0x1A06	0x6800    LDR	R0, [R0, #0]
0x1A08	0xF0400101  ORR	R1, R0, #1
0x1A0C	0x487B    LDR	R0, [PC, #492]
0x1A0E	0x6001    STR	R1, [R0, #0]
0x1A10	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x1A12	0x487A    LDR	R0, [PC, #488]
0x1A14	0x6801    LDR	R1, [R0, #0]
0x1A16	0xF06F0007  MVN	R0, #7
0x1A1A	0x4001    ANDS	R1, R0
0x1A1C	0x4877    LDR	R0, [PC, #476]
0x1A1E	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x1A20	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1A22	0x2802    CMP	R0, #2
0x1A24	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x1A28	0x4877    LDR	R0, [PC, #476]
0x1A2A	0x4281    CMP	R1, R0
0x1A2C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x1A2E	0x4873    LDR	R0, [PC, #460]
0x1A30	0x6800    LDR	R0, [R0, #0]
0x1A32	0xF0400106  ORR	R1, R0, #6
0x1A36	0x4871    LDR	R0, [PC, #452]
0x1A38	0x6001    STR	R1, [R0, #0]
0x1A3A	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A3C	0x4870    LDR	R0, [PC, #448]
0x1A3E	0x4281    CMP	R1, R0
0x1A40	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x1A42	0x486E    LDR	R0, [PC, #440]
0x1A44	0x6800    LDR	R0, [R0, #0]
0x1A46	0xF0400105  ORR	R1, R0, #5
0x1A4A	0x486C    LDR	R0, [PC, #432]
0x1A4C	0x6001    STR	R1, [R0, #0]
0x1A4E	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A50	0x486E    LDR	R0, [PC, #440]
0x1A52	0x4281    CMP	R1, R0
0x1A54	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x1A56	0x4869    LDR	R0, [PC, #420]
0x1A58	0x6800    LDR	R0, [R0, #0]
0x1A5A	0xF0400104  ORR	R1, R0, #4
0x1A5E	0x4867    LDR	R0, [PC, #412]
0x1A60	0x6001    STR	R1, [R0, #0]
0x1A62	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A64	0x486A    LDR	R0, [PC, #424]
0x1A66	0x4281    CMP	R1, R0
0x1A68	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x1A6A	0x4864    LDR	R0, [PC, #400]
0x1A6C	0x6800    LDR	R0, [R0, #0]
0x1A6E	0xF0400103  ORR	R1, R0, #3
0x1A72	0x4862    LDR	R0, [PC, #392]
0x1A74	0x6001    STR	R1, [R0, #0]
0x1A76	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A78	0xF64B3080  MOVW	R0, #48000
0x1A7C	0x4281    CMP	R1, R0
0x1A7E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x1A80	0x485E    LDR	R0, [PC, #376]
0x1A82	0x6800    LDR	R0, [R0, #0]
0x1A84	0xF0400102  ORR	R1, R0, #2
0x1A88	0x485C    LDR	R0, [PC, #368]
0x1A8A	0x6001    STR	R1, [R0, #0]
0x1A8C	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1A8E	0xF64550C0  MOVW	R0, #24000
0x1A92	0x4281    CMP	R1, R0
0x1A94	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x1A96	0x4859    LDR	R0, [PC, #356]
0x1A98	0x6800    LDR	R0, [R0, #0]
0x1A9A	0xF0400101  ORR	R1, R0, #1
0x1A9E	0x4857    LDR	R0, [PC, #348]
0x1AA0	0x6001    STR	R1, [R0, #0]
0x1AA2	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x1AA4	0x4855    LDR	R0, [PC, #340]
0x1AA6	0x6801    LDR	R1, [R0, #0]
0x1AA8	0xF06F0007  MVN	R0, #7
0x1AAC	0x4001    ANDS	R1, R0
0x1AAE	0x4853    LDR	R0, [PC, #332]
0x1AB0	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x1AB2	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1AB4	0x2801    CMP	R0, #1
0x1AB6	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x1ABA	0x4851    LDR	R0, [PC, #324]
0x1ABC	0x4281    CMP	R1, R0
0x1ABE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x1AC0	0x484E    LDR	R0, [PC, #312]
0x1AC2	0x6800    LDR	R0, [R0, #0]
0x1AC4	0xF0400107  ORR	R1, R0, #7
0x1AC8	0x484C    LDR	R0, [PC, #304]
0x1ACA	0x6001    STR	R1, [R0, #0]
0x1ACC	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1ACE	0x4851    LDR	R0, [PC, #324]
0x1AD0	0x4281    CMP	R1, R0
0x1AD2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x1AD4	0x4849    LDR	R0, [PC, #292]
0x1AD6	0x6800    LDR	R0, [R0, #0]
0x1AD8	0xF0400106  ORR	R1, R0, #6
0x1ADC	0x4847    LDR	R0, [PC, #284]
0x1ADE	0x6001    STR	R1, [R0, #0]
0x1AE0	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1AE2	0x4848    LDR	R0, [PC, #288]
0x1AE4	0x4281    CMP	R1, R0
0x1AE6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x1AE8	0x4844    LDR	R0, [PC, #272]
0x1AEA	0x6800    LDR	R0, [R0, #0]
0x1AEC	0xF0400105  ORR	R1, R0, #5
0x1AF0	0x4842    LDR	R0, [PC, #264]
0x1AF2	0x6001    STR	R1, [R0, #0]
0x1AF4	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1AF6	0x4846    LDR	R0, [PC, #280]
0x1AF8	0x4281    CMP	R1, R0
0x1AFA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x1AFC	0x483F    LDR	R0, [PC, #252]
0x1AFE	0x6800    LDR	R0, [R0, #0]
0x1B00	0xF0400104  ORR	R1, R0, #4
0x1B04	0x483D    LDR	R0, [PC, #244]
0x1B06	0x6001    STR	R1, [R0, #0]
0x1B08	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B0A	0xF24D20F0  MOVW	R0, #54000
0x1B0E	0x4281    CMP	R1, R0
0x1B10	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x1B12	0x483A    LDR	R0, [PC, #232]
0x1B14	0x6800    LDR	R0, [R0, #0]
0x1B16	0xF0400103  ORR	R1, R0, #3
0x1B1A	0x4838    LDR	R0, [PC, #224]
0x1B1C	0x6001    STR	R1, [R0, #0]
0x1B1E	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B20	0xF64840A0  MOVW	R0, #36000
0x1B24	0x4281    CMP	R1, R0
0x1B26	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x1B28	0x4834    LDR	R0, [PC, #208]
0x1B2A	0x6800    LDR	R0, [R0, #0]
0x1B2C	0xF0400102  ORR	R1, R0, #2
0x1B30	0x4832    LDR	R0, [PC, #200]
0x1B32	0x6001    STR	R1, [R0, #0]
0x1B34	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B36	0xF2446050  MOVW	R0, #18000
0x1B3A	0x4281    CMP	R1, R0
0x1B3C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x1B3E	0x482F    LDR	R0, [PC, #188]
0x1B40	0x6800    LDR	R0, [R0, #0]
0x1B42	0xF0400101  ORR	R1, R0, #1
0x1B46	0x482D    LDR	R0, [PC, #180]
0x1B48	0x6001    STR	R1, [R0, #0]
0x1B4A	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x1B4C	0x482B    LDR	R0, [PC, #172]
0x1B4E	0x6801    LDR	R1, [R0, #0]
0x1B50	0xF06F0007  MVN	R0, #7
0x1B54	0x4001    ANDS	R1, R0
0x1B56	0x4829    LDR	R0, [PC, #164]
0x1B58	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x1B5A	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1B5C	0x2800    CMP	R0, #0
0x1B5E	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x1B62	0x482D    LDR	R0, [PC, #180]
0x1B64	0x4281    CMP	R1, R0
0x1B66	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x1B68	0x4824    LDR	R0, [PC, #144]
0x1B6A	0x6800    LDR	R0, [R0, #0]
0x1B6C	0xF0400107  ORR	R1, R0, #7
0x1B70	0x4822    LDR	R0, [PC, #136]
0x1B72	0x6001    STR	R1, [R0, #0]
0x1B74	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B76	0x4825    LDR	R0, [PC, #148]
0x1B78	0x4281    CMP	R1, R0
0x1B7A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x1B7C	0x481F    LDR	R0, [PC, #124]
0x1B7E	0x6800    LDR	R0, [R0, #0]
0x1B80	0xF0400106  ORR	R1, R0, #6
0x1B84	0x481D    LDR	R0, [PC, #116]
0x1B86	0x6001    STR	R1, [R0, #0]
0x1B88	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B8A	0x4824    LDR	R0, [PC, #144]
0x1B8C	0x4281    CMP	R1, R0
0x1B8E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x1B90	0x481A    LDR	R0, [PC, #104]
0x1B92	0x6800    LDR	R0, [R0, #0]
0x1B94	0xF0400105  ORR	R1, R0, #5
0x1B98	0x4818    LDR	R0, [PC, #96]
0x1B9A	0x6001    STR	R1, [R0, #0]
0x1B9C	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1B9E	0xF5B14F7A  CMP	R1, #64000
0x1BA2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x1BA4	0x4815    LDR	R0, [PC, #84]
0x1BA6	0x6800    LDR	R0, [R0, #0]
0x1BA8	0xF0400104  ORR	R1, R0, #4
0x1BAC	0x4813    LDR	R0, [PC, #76]
0x1BAE	0x6001    STR	R1, [R0, #0]
0x1BB0	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1BB2	0xF64B3080  MOVW	R0, #48000
0x1BB6	0x4281    CMP	R1, R0
0x1BB8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x1BBA	0x4810    LDR	R0, [PC, #64]
0x1BBC	0x6800    LDR	R0, [R0, #0]
0x1BBE	0xF0400103  ORR	R1, R0, #3
0x1BC2	0x480E    LDR	R0, [PC, #56]
0x1BC4	0x6001    STR	R1, [R0, #0]
0x1BC6	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1BC8	0xF5B14FFA  CMP	R1, #32000
0x1BCC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x1BCE	0x480B    LDR	R0, [PC, #44]
0x1BD0	0x6800    LDR	R0, [R0, #0]
0x1BD2	0xF0400102  ORR	R1, R0, #2
0x1BD6	0x4809    LDR	R0, [PC, #36]
0x1BD8	0x6001    STR	R1, [R0, #0]
0x1BDA	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1BDC	0xF5B15F7A  CMP	R1, #16000
0x1BE0	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x1BE2	0xE01D    B	#58
0x1BE4	0x00800101  	#16842880
0x1BE8	0x54190440  	#71324697
0x1BEC	0x00023D60  	#1029701634
0x1BF0	0x00030000  	#3
0x1BF4	0x90400002  	#168000
0x1BF8	0x49F00002  	#150000
0x1BFC	0x3C004002  	FLASH_ACR+0
0x1C00	0xD4C00001  	#120000
0x1C04	0x5F900001  	#90000
0x1C08	0x32800002  	#144000
0x1C0C	0x77000001  	#96000
0x1C10	0x19400001  	#72000
0x1C14	0xA5E00001  	#108000
0x1C18	0xB5800001  	#112000
0x1C1C	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x1C20	0x482D    LDR	R0, [PC, #180]
0x1C22	0x6800    LDR	R0, [R0, #0]
0x1C24	0xF0400101  ORR	R1, R0, #1
0x1C28	0x482B    LDR	R0, [PC, #172]
0x1C2A	0x6001    STR	R1, [R0, #0]
0x1C2C	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x1C2E	0x482A    LDR	R0, [PC, #168]
0x1C30	0x6801    LDR	R1, [R0, #0]
0x1C32	0xF06F0007  MVN	R0, #7
0x1C36	0x4001    ANDS	R1, R0
0x1C38	0x4827    LDR	R0, [PC, #156]
0x1C3A	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x1C3C	0x2101    MOVS	R1, #1
0x1C3E	0xB249    SXTB	R1, R1
0x1C40	0x4826    LDR	R0, [PC, #152]
0x1C42	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x1C44	0x4826    LDR	R0, [PC, #152]
0x1C46	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x1C48	0xF7FFFB98  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x1C4C	0x4825    LDR	R0, [PC, #148]
0x1C4E	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x1C50	0x4825    LDR	R0, [PC, #148]
0x1C52	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x1C54	0x4825    LDR	R0, [PC, #148]
0x1C56	0xEA020100  AND	R1, R2, R0, LSL #0
0x1C5A	0x4825    LDR	R0, [PC, #148]
0x1C5C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x1C5E	0xF0020001  AND	R0, R2, #1
0x1C62	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x1C64	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1C66	0x4822    LDR	R0, [PC, #136]
0x1C68	0x6800    LDR	R0, [R0, #0]
0x1C6A	0xF0000002  AND	R0, R0, #2
0x1C6E	0x2800    CMP	R0, #0
0x1C70	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x1C72	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1C74	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x1C76	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1C78	0xF4023080  AND	R0, R2, #65536
0x1C7C	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x1C7E	0x481C    LDR	R0, [PC, #112]
0x1C80	0x6800    LDR	R0, [R0, #0]
0x1C82	0xF4003000  AND	R0, R0, #131072
0x1C86	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x1C88	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x1C8A	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x1C8C	0x460A    MOV	R2, R1
0x1C8E	0x9901    LDR	R1, [SP, #4]
0x1C90	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x1C92	0x9101    STR	R1, [SP, #4]
0x1C94	0x4611    MOV	R1, R2
0x1C96	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1C98	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x1C9C	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x1C9E	0x4814    LDR	R0, [PC, #80]
0x1CA0	0x6800    LDR	R0, [R0, #0]
0x1CA2	0xF0407180  ORR	R1, R0, #16777216
0x1CA6	0x4812    LDR	R0, [PC, #72]
0x1CA8	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x1CAA	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x1CAC	0x4810    LDR	R0, [PC, #64]
0x1CAE	0x6800    LDR	R0, [R0, #0]
0x1CB0	0xF0007000  AND	R0, R0, #33554432
0x1CB4	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x1CB6	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x1CB8	0x460A    MOV	R2, R1
0x1CBA	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x1CBC	0x480A    LDR	R0, [PC, #40]
0x1CBE	0x6800    LDR	R0, [R0, #0]
0x1CC0	0xF000010C  AND	R1, R0, #12
0x1CC4	0x0090    LSLS	R0, R2, #2
0x1CC6	0xF000000C  AND	R0, R0, #12
0x1CCA	0x4281    CMP	R1, R0
0x1CCC	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1CCE	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x1CD0	0xF8DDE000  LDR	LR, [SP, #0]
0x1CD4	0xB002    ADD	SP, SP, #8
0x1CD6	0x4770    BX	LR
0x1CD8	0x3C004002  	FLASH_ACR+0
0x1CDC	0x80204247  	FLASH_ACR+0
0x1CE0	0x80244247  	FLASH_ACR+0
0x1CE4	0x38044002  	RCC_PLLCFGR+0
0x1CE8	0x38084002  	RCC_CFGR+0
0x1CEC	0xFFFF000F  	#1048575
0x1CF0	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x137C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x137E	0x480D    LDR	R0, [PC, #52]
0x1380	0x6800    LDR	R0, [R0, #0]
0x1382	0xF0400101  ORR	R1, R0, #1
0x1386	0x480B    LDR	R0, [PC, #44]
0x1388	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x138A	0x2100    MOVS	R1, #0
0x138C	0x480A    LDR	R0, [PC, #40]
0x138E	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x1390	0x4808    LDR	R0, [PC, #32]
0x1392	0x6801    LDR	R1, [R0, #0]
0x1394	0x4809    LDR	R0, [PC, #36]
0x1396	0x4001    ANDS	R1, R0
0x1398	0x4806    LDR	R0, [PC, #24]
0x139A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x139C	0x4908    LDR	R1, [PC, #32]
0x139E	0x4809    LDR	R0, [PC, #36]
0x13A0	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x13A2	0x4804    LDR	R0, [PC, #16]
0x13A4	0x6801    LDR	R1, [R0, #0]
0x13A6	0xF46F2080  MVN	R0, #262144
0x13AA	0x4001    ANDS	R1, R0
0x13AC	0x4801    LDR	R0, [PC, #4]
0x13AE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x13B0	0xB001    ADD	SP, SP, #4
0x13B2	0x4770    BX	LR
0x13B4	0x38004002  	RCC_CR+0
0x13B8	0x38084002  	RCC_CFGR+0
0x13BC	0xFFFFFEF6  	#-17367041
0x13C0	0x30102400  	#603992080
0x13C4	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x1DE4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x1DE6	0x4904    LDR	R1, [PC, #16]
0x1DE8	0x4804    LDR	R0, [PC, #16]
0x1DEA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x1DEC	0x4904    LDR	R1, [PC, #16]
0x1DEE	0x4805    LDR	R0, [PC, #20]
0x1DF0	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x1DF2	0xB001    ADD	SP, SP, #4
0x1DF4	0x4770    BX	LR
0x1DF6	0xBF00    NOP
0x1DF8	0x90400002  	#168000
0x1DFC	0x02842000  	___System_CLOCK_IN_KHZ+0
0x1E00	0x00030000  	#3
0x1E04	0x02882000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x198C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x198E	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x1990	0xB001    ADD	SP, SP, #4
0x1992	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x175C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x175E	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x1762	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x1766	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x1768	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x176C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x176E	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x1770	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x1772	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x1774	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x1776	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x177A	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x177E	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x1782	0xB001    ADD	SP, SP, #4
0x1784	0x4770    BX	LR
; end of ___EnableFPU
0x220C	0xB500    PUSH	(R14)
0x220E	0xF8DFB014  LDR	R11, [PC, #20]
0x2212	0xF8DFA014  LDR	R10, [PC, #20]
0x2216	0xF8DFC014  LDR	R12, [PC, #20]
0x221A	0xF7FFFA49  BL	5808
0x221E	0xBD00    POP	(R15)
0x2220	0x4770    BX	LR
0x2222	0xBF00    NOP
0x2224	0x00002000  	#536870912
0x2228	0x010F2000  	#536871183
0x222C	0x1E080000  	#7688
0x228C	0xB500    PUSH	(R14)
0x228E	0xF8DFB010  LDR	R11, [PC, #16]
0x2292	0xF8DFA010  LDR	R10, [PC, #16]
0x2296	0xF7FFFA23  BL	5856
0x229A	0xBD00    POP	(R15)
0x229C	0x4770    BX	LR
0x229E	0xBF00    NOP
0x22A0	0x00002000  	#536870912
0x22A4	0x02A42000  	#536871588
_timer3_ISR:
;Input Capture Four Channel Demo.c, 213 :: 		void timer3_ISR() iv IVT_INT_TIM3 {
;Input Capture Four Channel Demo.c, 215 :: 		GPIOD_ODR.B5 = 1;                                                           // *** DEBUG *** Turn on pin for timing interrupt handler
0x1788	0x2101    MOVS	R1, #1
0x178A	0xB249    SXTB	R1, R1
0x178C	0x483A    LDR	R0, [PC, #232]
0x178E	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 218 :: 		if(TIM3_SR.UIF == 1) {
0x1790	0x493A    LDR	R1, [PC, #232]
0x1792	0x6808    LDR	R0, [R1, #0]
0x1794	0xB138    CBZ	R0, L_timer3_ISR8
;Input Capture Four Channel Demo.c, 219 :: 		TIM3_SR.UIF = 0;                                                        // Clear timer 3 interrupt bit
0x1796	0x2100    MOVS	R1, #0
0x1798	0xB249    SXTB	R1, R1
0x179A	0x4838    LDR	R0, [PC, #224]
0x179C	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 220 :: 		tim3_overflow_count++;                                                  // Increment timer 3 overflow counter
0x179E	0x4938    LDR	R1, [PC, #224]
0x17A0	0x6808    LDR	R0, [R1, #0]
0x17A2	0x1C40    ADDS	R0, R0, #1
0x17A4	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 221 :: 		}
L_timer3_ISR8:
;Input Capture Four Channel Demo.c, 224 :: 		if (TIM3_SR.CC1IF == 1) {
0x17A6	0x4937    LDR	R1, [PC, #220]
0x17A8	0x6808    LDR	R0, [R1, #0]
0x17AA	0xB1A8    CBZ	R0, L_timer3_ISR9
;Input Capture Four Channel Demo.c, 225 :: 		fngr_pointer.enc_start_time = fngr_pointer.enc_end_time;                // Store previous captured value for next calculation
0x17AC	0x4A36    LDR	R2, [PC, #216]
0x17AE	0x6811    LDR	R1, [R2, #0]
0x17B0	0x4836    LDR	R0, [PC, #216]
0x17B2	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 226 :: 		fngr_pointer.enc_end_time = TIM3_CCR1;                                  // Read stored input capture time
0x17B4	0x4836    LDR	R0, [PC, #216]
0x17B6	0x6800    LDR	R0, [R0, #0]
0x17B8	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 227 :: 		fngr_pointer.enc_overflow_start = fngr_pointer.enc_overflow_end;        // Store previous overflow value for next calculation
0x17BA	0x4A36    LDR	R2, [PC, #216]
0x17BC	0x6811    LDR	R1, [R2, #0]
0x17BE	0x4836    LDR	R0, [PC, #216]
0x17C0	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 228 :: 		fngr_pointer.enc_overflow_end = tim3_overflow_count;                    // Store number of timer 3 overflows for Pointer finger
0x17C2	0x482F    LDR	R0, [PC, #188]
0x17C4	0x6800    LDR	R0, [R0, #0]
0x17C6	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 229 :: 		fngr_pointer.enc_chan_b = FNGR_POINTER_ENC_B;                           // Sample the second encoder channel state (For direction)
0x17C8	0x4834    LDR	R0, [PC, #208]
0x17CA	0x6801    LDR	R1, [R0, #0]
0x17CC	0x4834    LDR	R0, [PC, #208]
0x17CE	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 230 :: 		fngr_pointer.position_temp++;                                           // Increment total input capture event counter
0x17D0	0x4934    LDR	R1, [PC, #208]
0x17D2	0x6808    LDR	R0, [R1, #0]
0x17D4	0x1C40    ADDS	R0, R0, #1
0x17D6	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 231 :: 		}
L_timer3_ISR9:
;Input Capture Four Channel Demo.c, 235 :: 		if (TIM3_SR.CC2IF == 1) {
0x17D8	0x4933    LDR	R1, [PC, #204]
0x17DA	0x6808    LDR	R0, [R1, #0]
0x17DC	0xB1A8    CBZ	R0, L_timer3_ISR10
;Input Capture Four Channel Demo.c, 236 :: 		fngr_middle.enc_start_time = fngr_middle.enc_end_time;                  // Store previous captured value for next calculation
0x17DE	0x4A33    LDR	R2, [PC, #204]
0x17E0	0x6811    LDR	R1, [R2, #0]
0x17E2	0x4833    LDR	R0, [PC, #204]
0x17E4	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 237 :: 		fngr_middle.enc_end_time = TIM3_CCR2;                                   // Read stored input capture time
0x17E6	0x4833    LDR	R0, [PC, #204]
0x17E8	0x6800    LDR	R0, [R0, #0]
0x17EA	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 238 :: 		fngr_middle.enc_overflow_start = fngr_middle.enc_overflow_end;          // Store previous overflow value for next calculation
0x17EC	0x4A32    LDR	R2, [PC, #200]
0x17EE	0x6811    LDR	R1, [R2, #0]
0x17F0	0x4832    LDR	R0, [PC, #200]
0x17F2	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 239 :: 		fngr_middle.enc_overflow_end = tim3_overflow_count;                     // Store number of timer 3 overflows for Middle finger
0x17F4	0x4822    LDR	R0, [PC, #136]
0x17F6	0x6800    LDR	R0, [R0, #0]
0x17F8	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 240 :: 		fngr_middle.enc_chan_b = FNGR_MIDDLE_ENC_B;                             // Sample the second encoder channel state (For direction)
0x17FA	0x4831    LDR	R0, [PC, #196]
0x17FC	0x6801    LDR	R1, [R0, #0]
0x17FE	0x4831    LDR	R0, [PC, #196]
0x1800	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 241 :: 		fngr_middle.position_temp++;                                            // Increment total input capture event counter
0x1802	0x4931    LDR	R1, [PC, #196]
0x1804	0x6808    LDR	R0, [R1, #0]
0x1806	0x1C40    ADDS	R0, R0, #1
0x1808	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 242 :: 		}
L_timer3_ISR10:
;Input Capture Four Channel Demo.c, 245 :: 		if (TIM3_SR.CC3IF == 1) {
0x180A	0x4930    LDR	R1, [PC, #192]
0x180C	0x6808    LDR	R0, [R1, #0]
0x180E	0xB1A8    CBZ	R0, L_timer3_ISR11
;Input Capture Four Channel Demo.c, 246 :: 		fngr_ring.enc_start_time = fngr_ring.enc_end_time;                      // Store previous captured value for next calculation
0x1810	0x4A2F    LDR	R2, [PC, #188]
0x1812	0x6811    LDR	R1, [R2, #0]
0x1814	0x482F    LDR	R0, [PC, #188]
0x1816	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 247 :: 		fngr_ring.enc_end_time = TIM3_CCR3;                                     // Read stored input capture time
0x1818	0x482F    LDR	R0, [PC, #188]
0x181A	0x6800    LDR	R0, [R0, #0]
0x181C	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 248 :: 		fngr_ring.enc_overflow_start = fngr_ring.enc_overflow_end;              // Store previous overflow value for next calculation
0x181E	0x4A2F    LDR	R2, [PC, #188]
0x1820	0x6811    LDR	R1, [R2, #0]
0x1822	0x482F    LDR	R0, [PC, #188]
0x1824	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 249 :: 		fngr_ring.enc_overflow_end = tim3_overflow_count;                       // Store number of timer 3 overflows for Ring finger
0x1826	0x4816    LDR	R0, [PC, #88]
0x1828	0x6800    LDR	R0, [R0, #0]
0x182A	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 250 :: 		fngr_ring.enc_chan_b = FNGR_RING_ENC_B;                                 // Sample the second encoder channel state (For direction)
0x182C	0x482D    LDR	R0, [PC, #180]
0x182E	0x6801    LDR	R1, [R0, #0]
0x1830	0x482D    LDR	R0, [PC, #180]
0x1832	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 251 :: 		fngr_ring.position_temp++;                                              // Increment total input capture event counter
0x1834	0x492D    LDR	R1, [PC, #180]
0x1836	0x6808    LDR	R0, [R1, #0]
0x1838	0x1C40    ADDS	R0, R0, #1
0x183A	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 252 :: 		}
L_timer3_ISR11:
;Input Capture Four Channel Demo.c, 255 :: 		if (TIM3_SR.CC4IF == 1) {
0x183C	0x492C    LDR	R1, [PC, #176]
0x183E	0x6808    LDR	R0, [R1, #0]
0x1840	0xB1A8    CBZ	R0, L_timer3_ISR12
;Input Capture Four Channel Demo.c, 256 :: 		fngr_pinky.enc_start_time = fngr_pinky.enc_end_time;                    // Store previous captured value for next calculation
0x1842	0x4A2C    LDR	R2, [PC, #176]
0x1844	0x6811    LDR	R1, [R2, #0]
0x1846	0x482C    LDR	R0, [PC, #176]
0x1848	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 257 :: 		fngr_pinky.enc_end_time = TIM3_CCR4;                                    // Read stored input capture time
0x184A	0x482C    LDR	R0, [PC, #176]
0x184C	0x6800    LDR	R0, [R0, #0]
0x184E	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 258 :: 		fngr_pinky.enc_overflow_start = fngr_pinky.enc_overflow_end;            // Store previous overflow value for next calculation
0x1850	0x4A2B    LDR	R2, [PC, #172]
0x1852	0x6811    LDR	R1, [R2, #0]
0x1854	0x482B    LDR	R0, [PC, #172]
0x1856	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 259 :: 		fngr_pinky.enc_overflow_end = tim3_overflow_count;                      // Store number of timer 3 overflows for Pinky
0x1858	0x4809    LDR	R0, [PC, #36]
0x185A	0x6800    LDR	R0, [R0, #0]
0x185C	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 260 :: 		fngr_pinky.enc_chan_b = FNGR_PINKY_ENC_B;                               // Sample the second encoder channel state (For direction)
0x185E	0x482A    LDR	R0, [PC, #168]
0x1860	0x6801    LDR	R1, [R0, #0]
0x1862	0x482A    LDR	R0, [PC, #168]
0x1864	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 261 :: 		fngr_pinky.position_temp++;                                             // Increment total input capture event counter
0x1866	0x492A    LDR	R1, [PC, #168]
0x1868	0x6808    LDR	R0, [R1, #0]
0x186A	0x1C40    ADDS	R0, R0, #1
0x186C	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 262 :: 		}
L_timer3_ISR12:
;Input Capture Four Channel Demo.c, 264 :: 		GPIOD_ODR.B5 = 0;                                                           // *** DEBUG *** Turn off interrupt handler timing pin
0x186E	0x2100    MOVS	R1, #0
0x1870	0xB249    SXTB	R1, R1
0x1872	0x4801    LDR	R0, [PC, #4]
0x1874	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 265 :: 		}
L_end_timer3_ISR:
0x1876	0x4770    BX	LR
0x1878	0x82944241  	GPIOD_ODR+0
0x187C	0x82004200  	TIM3_SR+0
0x1880	0x029C2000  	_tim3_overflow_count+0
0x1884	0x82044200  	TIM3_SR+0
0x1888	0x013C2000  	_fngr_pointer+32
0x188C	0x01382000  	_fngr_pointer+28
0x1890	0x04344000  	TIM3_CCR1+0
0x1894	0x01482000  	_fngr_pointer+44
0x1898	0x01442000  	_fngr_pointer+40
0x189C	0x82004241  	GPIOD_IDR+0
0x18A0	0x01362000  	_fngr_pointer+26
0x18A4	0x012C2000  	_fngr_pointer+16
0x18A8	0x82084200  	TIM3_SR+0
0x18AC	0x01842000  	_fngr_middle+32
0x18B0	0x01802000  	_fngr_middle+28
0x18B4	0x04384000  	TIM3_CCR2+0
0x18B8	0x01902000  	_fngr_middle+44
0x18BC	0x018C2000  	_fngr_middle+40
0x18C0	0x82044241  	GPIOD_IDR+0
0x18C4	0x017E2000  	_fngr_middle+26
0x18C8	0x01742000  	_fngr_middle+16
0x18CC	0x820C4200  	TIM3_SR+0
0x18D0	0x01CC2000  	_fngr_ring+32
0x18D4	0x01C82000  	_fngr_ring+28
0x18D8	0x043C4000  	TIM3_CCR3+0
0x18DC	0x01D82000  	_fngr_ring+44
0x18E0	0x01D42000  	_fngr_ring+40
0x18E4	0x82084241  	GPIOD_IDR+0
0x18E8	0x01C62000  	_fngr_ring+26
0x18EC	0x01BC2000  	_fngr_ring+16
0x18F0	0x82104200  	TIM3_SR+0
0x18F4	0x02142000  	_fngr_pinky+32
0x18F8	0x02102000  	_fngr_pinky+28
0x18FC	0x04404000  	TIM3_CCR4+0
0x1900	0x02202000  	_fngr_pinky+44
0x1904	0x021C2000  	_fngr_pinky+40
0x1908	0x820C4241  	GPIOD_IDR+0
0x190C	0x020E2000  	_fngr_pinky+26
0x1910	0x02042000  	_fngr_pinky+16
; end of _timer3_ISR
_timer2_ISR:
;Input Capture Four Channel Demo.c, 191 :: 		void timer2_ISR() iv IVT_INT_TIM2 {
;Input Capture Four Channel Demo.c, 194 :: 		if(TIM2_SR.UIF == 1) {
0x1914	0x4912    LDR	R1, [PC, #72]
0x1916	0x6808    LDR	R0, [R1, #0]
0x1918	0xB138    CBZ	R0, L_timer2_ISR6
;Input Capture Four Channel Demo.c, 195 :: 		TIM2_SR.UIF = 0;                                                        // Clear timer 2 interrupt bit
0x191A	0x2100    MOVS	R1, #0
0x191C	0xB249    SXTB	R1, R1
0x191E	0x4810    LDR	R0, [PC, #64]
0x1920	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 196 :: 		tim2_overflow_count++;                                                  // Increment timer 2 overflow counter
0x1922	0x4910    LDR	R1, [PC, #64]
0x1924	0x6808    LDR	R0, [R1, #0]
0x1926	0x1C40    ADDS	R0, R0, #1
0x1928	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 197 :: 		}
L_timer2_ISR6:
;Input Capture Four Channel Demo.c, 201 :: 		if (TIM2_SR.CC1IF == 1) {
0x192A	0x490F    LDR	R1, [PC, #60]
0x192C	0x6808    LDR	R0, [R1, #0]
0x192E	0xB1A8    CBZ	R0, L_timer2_ISR7
;Input Capture Four Channel Demo.c, 202 :: 		fngr_thumb.enc_start_time = fngr_thumb.enc_end_time;                    // Store previous captured value for next calculation
0x1930	0x4A0E    LDR	R2, [PC, #56]
0x1932	0x6811    LDR	R1, [R2, #0]
0x1934	0x480E    LDR	R0, [PC, #56]
0x1936	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 203 :: 		fngr_thumb.enc_end_time = TIM2_CCR1;                                    // Read stored input capture time
0x1938	0x480E    LDR	R0, [PC, #56]
0x193A	0x6800    LDR	R0, [R0, #0]
0x193C	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 204 :: 		fngr_thumb.enc_overflow_start = fngr_thumb.enc_overflow_end;            // Store previous overflow value for next calculation
0x193E	0x4A0E    LDR	R2, [PC, #56]
0x1940	0x6811    LDR	R1, [R2, #0]
0x1942	0x480E    LDR	R0, [PC, #56]
0x1944	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 205 :: 		fngr_thumb.enc_overflow_end = tim2_overflow_count;                      // Store number of timer 2 overflows for thumb
0x1946	0x4807    LDR	R0, [PC, #28]
0x1948	0x6800    LDR	R0, [R0, #0]
0x194A	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 206 :: 		fngr_thumb.enc_chan_b = FNGR_THUMB_ENC_B;                               // Sample the second encoder channel (For direction)
0x194C	0x480C    LDR	R0, [PC, #48]
0x194E	0x6801    LDR	R1, [R0, #0]
0x1950	0x480C    LDR	R0, [PC, #48]
0x1952	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 207 :: 		fngr_thumb.position_temp++;                                             // Increment total input capture event counter
0x1954	0x490C    LDR	R1, [PC, #48]
0x1956	0x6808    LDR	R0, [R1, #0]
0x1958	0x1C40    ADDS	R0, R0, #1
0x195A	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 208 :: 		}
L_timer2_ISR7:
;Input Capture Four Channel Demo.c, 209 :: 		}
L_end_timer2_ISR:
0x195C	0x4770    BX	LR
0x195E	0xBF00    NOP
0x1960	0x02004200  	TIM2_SR+0
0x1964	0x02A02000  	_tim2_overflow_count+0
0x1968	0x02044200  	TIM2_SR+0
0x196C	0x025C2000  	_fngr_thumb+32
0x1970	0x02582000  	_fngr_thumb+28
0x1974	0x00344000  	TIM2_CCR1+0
0x1978	0x02682000  	_fngr_thumb+44
0x197C	0x02642000  	_fngr_thumb+40
0x1980	0x82104241  	GPIOD_IDR+0
0x1984	0x02562000  	_fngr_thumb+26
0x1988	0x024C2000  	_fngr_thumb+16
; end of _timer2_ISR
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo [22]
0x1E08	0x5241550D ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+0
0x1E0C	0x6E492054 ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+4
0x1E10	0x43207469 ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+8
0x1E14	0x6C706D6F ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+12
0x1E18	0x0D657465 ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+16
0x1E1C	0x000A ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+20
; end of ?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo
;Input Capture Four Channel Demo.c,0 :: ?ICS_ENCODER_TIM_PSC [2]
0x1E1E	0x0064 ;?ICS_ENCODER_TIM_PSC+0
; end of ?ICS_ENCODER_TIM_PSC
;Input Capture Four Channel Demo.c,0 :: ?ICS_ENCODER_TIM_RELOAD [4]
0x1E20	0x0000FFFF ;?ICS_ENCODER_TIM_RELOAD+0
; end of ?ICS_ENCODER_TIM_RELOAD
;Input Capture Four Channel Demo.c,0 :: ?ICS_MCU_FREQUENCY [4]
0x1E24	0x0A037A00 ;?ICS_MCU_FREQUENCY+0
; end of ?ICS_MCU_FREQUENCY
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo [8]
0x1E28	0x6E696F50 ;?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo+0
0x1E2C	0x00726574 ;?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo+4
; end of ?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo
;,0 :: _initBlock_5 [12]
; Containing: ?ICS?lstr2_Input_32Capture_32Four_32Channel_32Demo [7]
;             ?ICS?lstr3_Input_32Capture_32Four_32Channel_32Demo [5]
0x1E30	0x6464694D ;_initBlock_5+0 : ?ICS?lstr2_Input_32Capture_32Four_32Channel_32Demo at 0x1E30
0x1E34	0x5200656C ;_initBlock_5+4 : ?ICS?lstr3_Input_32Capture_32Four_32Channel_32Demo at 0x1E37
0x1E38	0x00676E69 ;_initBlock_5+8
; end of _initBlock_5
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo [6]
0x1E3C	0x6B6E6950 ;?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo+0
0x1E40	0x0079 ;?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo+4
; end of ?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo [6]
0x1E42	0x6D756854 ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+0
0x1E46	0x0062 ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+4
; end of ?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo [26]
0x1E48	0x500D0A0A ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+0
0x1E4C	0x72676F72 ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+4
0x1E50	0x48206D61 ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+8
0x1E54	0x53207361 ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+12
0x1E58	0x74726174 ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+16
0x1E5C	0x0A216465 ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+20
0x1E60	0x000D ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+24
; end of ?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo
;,0 :: _initBlock_9 [28]
; Containing: ?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo [9]
;             ?ICS?lstr9_Input_32Capture_32Four_32Channel_32Demo [16]
;             ?ICS?lstr10_Input_32Capture_32Four_32Channel_32Demo [3]
0x1E62	0x0A0A0A0A ;_initBlock_9+0 : ?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo at 0x1E62
0x1E66	0x0D0A0A0A ;_initBlock_9+4
0x1E6A	0x460D0A00 ;_initBlock_9+8 : ?ICS?lstr9_Input_32Capture_32Four_32Channel_32Demo at 0x1E6B
0x1E6E	0x65676E69 ;_initBlock_9+12
0x1E72	0x614E2072 ;_initBlock_9+16
0x1E76	0x203A656D ;_initBlock_9+20
0x1E7A	0x000D0A00 ;_initBlock_9+24 : ?ICS?lstr10_Input_32Capture_32Four_32Channel_32Demo at 0x1E7B
; end of _initBlock_9
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo [36]
0x1E7E	0x71657246 ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+0
0x1E82	0x636E6575 ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+4
0x1E86	0x666F2079 ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+8
0x1E8A	0x636E6920 ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+12
0x1E8E	0x6E696D6F ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+16
0x1E92	0x69732067 ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+20
0x1E96	0x6C616E67 ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+24
0x1E9A	0x7A482820 ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+28
0x1E9E	0x00203A29 ;?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo+32
; end of ?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo
;,0 :: _initBlock_11 [60]
; Containing: ?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo [3]
;             ?ICS?lstr13_Input_32Capture_32Four_32Channel_32Demo [36]
;             ?ICS?lstr14_Input_32Capture_32Four_32Channel_32Demo [8]
;             ?ICS?lstr15_Input_32Capture_32Four_32Channel_32Demo [10]
;             ?ICS?lstr16_Input_32Capture_32Four_32Channel_32Demo [3]
0x1EA2	0x44000D0A ;_initBlock_11+0 : ?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo at 0x1EA2 : ?ICS?lstr13_Input_32Capture_32Four_32Channel_32Demo at 0x1EA5
0x1EA6	0x63657269 ;_initBlock_11+4
0x1EAA	0x6E6F6974 ;_initBlock_11+8
0x1EAE	0x20666F20 ;_initBlock_11+12
0x1EB2	0x65766F6D ;_initBlock_11+16
0x1EB6	0x746E656D ;_initBlock_11+20
0x1EBA	0x2020203A ;_initBlock_11+24
0x1EBE	0x20202020 ;_initBlock_11+28
0x1EC2	0x20202020 ;_initBlock_11+32
0x1EC6	0x45002020 ;_initBlock_11+36 : ?ICS?lstr14_Input_32Capture_32Four_32Channel_32Demo at 0x1EC9
0x1ECA	0x4E455458 ;_initBlock_11+40
0x1ECE	0x43002044 ;_initBlock_11+44 : ?ICS?lstr15_Input_32Capture_32Four_32Channel_32Demo at 0x1ED1
0x1ED2	0x52544E4F ;_initBlock_11+48
0x1ED6	0x20544341 ;_initBlock_11+52
0x1EDA	0x000D0A00 ;_initBlock_11+56 : ?ICS?lstr16_Input_32Capture_32Four_32Channel_32Demo at 0x1EDB
; end of _initBlock_11
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo [36]
0x1EDE	0x69736F50 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+0
0x1EE2	0x6E6F6974 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+4
0x1EE6	0x20666F20 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+8
0x1EEA	0x676E6966 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+12
0x1EEE	0x203A7265 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+16
0x1EF2	0x20202020 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+20
0x1EF6	0x20202020 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+24
0x1EFA	0x20202020 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+28
0x1EFE	0x00202020 ;?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo+32
; end of ?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo
;,0 :: _initBlock_13 [21]
; Containing: ?ICS?lstr18_Input_32Capture_32Four_32Channel_32Demo [5]
;             ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
0x1F02	0x0D0A0A0A ;_initBlock_13+0 : ?ICS?lstr18_Input_32Capture_32Four_32Channel_32Demo at 0x1F02
0x1F06	0x00000000 ;_initBlock_13+4 : ?ICS__Lib_System_4XX_APBAHBPrescTable at 0x1F07
0x1F0A	0x03020100 ;_initBlock_13+8
0x1F0E	0x03020104 ;_initBlock_13+12
0x1F12	0x08070604 ;_initBlock_13+16
0x1F16	0x09 ;_initBlock_13+20
; end of _initBlock_13
;__Lib_GPIO_32F4xx_Defs.c,480 :: __GPIO_MODULE_TIM2_CH1_PA5 [108]
0x1F18	0x00000105 ;__GPIO_MODULE_TIM2_CH1_PA5+0
0x1F1C	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH1_PA5+4
0x1F20	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+8
0x1F24	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+12
0x1F28	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+16
0x1F2C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+20
0x1F30	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+24
0x1F34	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+28
0x1F38	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+32
0x1F3C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+36
0x1F40	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+40
0x1F44	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+44
0x1F48	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+48
0x1F4C	0x00001018 ;__GPIO_MODULE_TIM2_CH1_PA5+52
0x1F50	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH1_PA5+56
0x1F54	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+60
0x1F58	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+64
0x1F5C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+68
0x1F60	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+72
0x1F64	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+76
0x1F68	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+80
0x1F6C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+84
0x1F70	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+88
0x1F74	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+92
0x1F78	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+96
0x1F7C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+100
0x1F80	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA5+104
; end of __GPIO_MODULE_TIM2_CH1_PA5
;__Lib_GPIO_32F4xx_Defs.c,536 :: __GPIO_MODULE_TIM4_CH1_PB6 [108]
0x1F84	0x00000216 ;__GPIO_MODULE_TIM4_CH1_PB6+0
0x1F88	0xFFFFFFFF ;__GPIO_MODULE_TIM4_CH1_PB6+4
0x1F8C	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+8
0x1F90	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+12
0x1F94	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+16
0x1F98	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+20
0x1F9C	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+24
0x1FA0	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+28
0x1FA4	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+32
0x1FA8	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+36
0x1FAC	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+40
0x1FB0	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+44
0x1FB4	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+48
0x1FB8	0x00001018 ;__GPIO_MODULE_TIM4_CH1_PB6+52
0x1FBC	0xFFFFFFFF ;__GPIO_MODULE_TIM4_CH1_PB6+56
0x1FC0	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+60
0x1FC4	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+64
0x1FC8	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+68
0x1FCC	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+72
0x1FD0	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+76
0x1FD4	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+80
0x1FD8	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+84
0x1FDC	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+88
0x1FE0	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+92
0x1FE4	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+96
0x1FE8	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+100
0x1FEC	0x00000000 ;__GPIO_MODULE_TIM4_CH1_PB6+104
; end of __GPIO_MODULE_TIM4_CH1_PB6
;__Lib_GPIO_32F4xx_Defs.c,789 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x1FF0	0x00000709 ;__GPIO_MODULE_USART1_PA9_10+0
0x1FF4	0x0000070A ;__GPIO_MODULE_USART1_PA9_10+4
0x1FF8	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x1FFC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x2000	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x2004	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x2008	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x200C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x2010	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x2014	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x2018	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x201C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x2020	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x2024	0x00001018 ;__GPIO_MODULE_USART1_PA9_10+52
0x2028	0x00001018 ;__GPIO_MODULE_USART1_PA9_10+56
0x202C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x2030	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x2034	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x2038	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x203C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2040	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2044	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2048	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x204C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2050	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2054	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2058	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F4xx_Defs.c,524 :: __GPIO_MODULE_TIM3_CH2_PC7 [108]
0x205C	0x00000227 ;__GPIO_MODULE_TIM3_CH2_PC7+0
0x2060	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH2_PC7+4
0x2064	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+8
0x2068	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+12
0x206C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+16
0x2070	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+20
0x2074	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+24
0x2078	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+28
0x207C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+32
0x2080	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+36
0x2084	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+40
0x2088	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+44
0x208C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+48
0x2090	0x00001018 ;__GPIO_MODULE_TIM3_CH2_PC7+52
0x2094	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH2_PC7+56
0x2098	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+60
0x209C	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+64
0x20A0	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+68
0x20A4	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+72
0x20A8	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+76
0x20AC	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+80
0x20B0	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+84
0x20B4	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+88
0x20B8	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+92
0x20BC	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+96
0x20C0	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+100
0x20C4	0x00000000 ;__GPIO_MODULE_TIM3_CH2_PC7+104
; end of __GPIO_MODULE_TIM3_CH2_PC7
;__Lib_GPIO_32F4xx_Defs.c,496 :: __GPIO_MODULE_TIM3_CH1_PA6 [108]
0x20C8	0x00000206 ;__GPIO_MODULE_TIM3_CH1_PA6+0
0x20CC	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH1_PA6+4
0x20D0	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+8
0x20D4	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+12
0x20D8	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+16
0x20DC	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+20
0x20E0	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+24
0x20E4	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+28
0x20E8	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+32
0x20EC	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+36
0x20F0	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+40
0x20F4	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+44
0x20F8	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+48
0x20FC	0x00001018 ;__GPIO_MODULE_TIM3_CH1_PA6+52
0x2100	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH1_PA6+56
0x2104	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+60
0x2108	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+64
0x210C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+68
0x2110	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+72
0x2114	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+76
0x2118	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+80
0x211C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+84
0x2120	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+88
0x2124	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+92
0x2128	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+96
0x212C	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+100
0x2130	0x00000000 ;__GPIO_MODULE_TIM3_CH1_PA6+104
; end of __GPIO_MODULE_TIM3_CH1_PA6
;__Lib_GPIO_32F4xx_Defs.c,508 :: __GPIO_MODULE_TIM3_CH4_PB1 [108]
0x2134	0x00000211 ;__GPIO_MODULE_TIM3_CH4_PB1+0
0x2138	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH4_PB1+4
0x213C	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+8
0x2140	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+12
0x2144	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+16
0x2148	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+20
0x214C	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+24
0x2150	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+28
0x2154	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+32
0x2158	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+36
0x215C	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+40
0x2160	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+44
0x2164	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+48
0x2168	0x00001018 ;__GPIO_MODULE_TIM3_CH4_PB1+52
0x216C	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH4_PB1+56
0x2170	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+60
0x2174	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+64
0x2178	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+68
0x217C	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+72
0x2180	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+76
0x2184	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+80
0x2188	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+84
0x218C	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+88
0x2190	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+92
0x2194	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+96
0x2198	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+100
0x219C	0x00000000 ;__GPIO_MODULE_TIM3_CH4_PB1+104
; end of __GPIO_MODULE_TIM3_CH4_PB1
;__Lib_GPIO_32F4xx_Defs.c,504 :: __GPIO_MODULE_TIM3_CH3_PB0 [108]
0x21A0	0x00000210 ;__GPIO_MODULE_TIM3_CH3_PB0+0
0x21A4	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH3_PB0+4
0x21A8	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+8
0x21AC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+12
0x21B0	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+16
0x21B4	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+20
0x21B8	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+24
0x21BC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+28
0x21C0	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+32
0x21C4	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+36
0x21C8	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+40
0x21CC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+44
0x21D0	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+48
0x21D4	0x00001018 ;__GPIO_MODULE_TIM3_CH3_PB0+52
0x21D8	0xFFFFFFFF ;__GPIO_MODULE_TIM3_CH3_PB0+56
0x21DC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+60
0x21E0	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+64
0x21E4	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+68
0x21E8	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+72
0x21EC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+76
0x21F0	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+80
0x21F4	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+84
0x21F8	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+88
0x21FC	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+92
0x2200	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+96
0x2204	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+100
0x2208	0x00000000 ;__GPIO_MODULE_TIM3_CH3_PB0+104
; end of __GPIO_MODULE_TIM3_CH3_PB0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [30]    __Lib_UART_123_45_6_UARTx_Write
0x01A8     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x02A4      [28]    _UART1_Write
0x02C0      [28]    _UART6_Write
0x02DC     [132]    _RCC_GetClocksFrequency
0x0360      [70]    _GPIO_Alternate_Function_Enable
0x03A8      [16]    _Get_Fosc_kHz
0x03B8      [28]    _UART3_Write
0x03D4      [28]    _UART5_Write
0x03F0      [28]    _UART4_Write
0x040C     [168]    _GPIO_Clk_Enable
0x04B4      [28]    _UART2_Write
0x04D0     [142]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Start
0x0560      [82]    __LongDoubleToSignedIntegral
0x05B4      [24]    _UART_Write
0x05CC     [660]    __Lib_UART_123_45_6_UARTx_Init_Advanced
0x0860     [560]    _GPIO_Config
0x0A90      [70]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Set_Duty
0x0AD8     [380]    __Lib_PWM_1234589_12_10_11_13_14_PWM_TIMx_Init
0x0C54      [28]    _GPIO_Digital_Output
0x0C70      [54]    _UART_Write_Text
0x0CA8      [76]    _LongWordToStr
0x0CF4     [262]    __Mul_DP
0x0DFC      [50]    __Lib_UART_123_45_6_UARTx_Write_Text
0x0E30      [24]    _GPIO_Digital_Input
0x0E48      [88]    __LongDoubleToUnsignedIntegral
0x0EA0      [28]    _PWM_TIM4_Init
0x0EBC     [120]    _NVIC_IntEnable
0x0F34      [38]    __UnsignedIntegralToLongDouble
0x0F5C      [28]    _PWM_TIM4_Start
0x0F78      [32]    _PWM_TIM4_Set_Duty
0x0F98     [108]    _LongToStr
0x1004      [52]    _UART1_Init
0x1038     [330]    __Div_DP
0x1184     [280]    _calc_finger_state
0x129C     [224]    _print_finger_info
0x137C      [76]    __Lib_System_4XX_SystemClockSetDefault
0x13C8      [52]    _motor_1_pwm_init
0x13FC      [40]    _strcpy
0x1424     [592]    _init_input_capture
0x1678      [56]    _init_UART
0x16B0      [20]    ___CC2DW
0x16C4      [28]    _UART1_Write_Text
0x16E0      [58]    ___FillZeros
0x171C      [64]    _init_GPIO
0x175C      [42]    ___EnableFPU
0x1788     [396]    _timer3_ISR
0x1914     [120]    _timer2_ISR
0x198C       [8]    ___GenExcept
0x1994     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x1CF8     [236]    _main
0x1DE4      [36]    __Lib_System_4XX_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_FloatToStr_fnum
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x20000000      [22]    ?lstr8_Input_32Capture_32Four_32Channel_32Demo
0x20000016       [2]    _ENCODER_TIM_PSC
0x20000018       [4]    _ENCODER_TIM_RELOAD
0x2000001C       [4]    _MCU_FREQUENCY
0x20000020       [8]    ?lstr1_Input_32Capture_32Four_32Channel_32Demo
0x20000028       [7]    ?lstr2_Input_32Capture_32Four_32Channel_32Demo
0x2000002F       [5]    ?lstr3_Input_32Capture_32Four_32Channel_32Demo
0x20000034       [6]    ?lstr4_Input_32Capture_32Four_32Channel_32Demo
0x2000003A       [6]    ?lstr5_Input_32Capture_32Four_32Channel_32Demo
0x20000040      [26]    ?lstr6_Input_32Capture_32Four_32Channel_32Demo
0x2000005A       [9]    ?lstr7_Input_32Capture_32Four_32Channel_32Demo
0x20000063      [16]    ?lstr9_Input_32Capture_32Four_32Channel_32Demo
0x20000073       [3]    ?lstr10_Input_32Capture_32Four_32Channel_32Demo
0x20000076      [36]    ?lstr11_Input_32Capture_32Four_32Channel_32Demo
0x2000009A       [3]    ?lstr12_Input_32Capture_32Four_32Channel_32Demo
0x2000009D      [36]    ?lstr13_Input_32Capture_32Four_32Channel_32Demo
0x200000C1       [8]    ?lstr14_Input_32Capture_32Four_32Channel_32Demo
0x200000C9      [10]    ?lstr15_Input_32Capture_32Four_32Channel_32Demo
0x200000D3       [3]    ?lstr16_Input_32Capture_32Four_32Channel_32Demo
0x200000D6      [36]    ?lstr17_Input_32Capture_32Four_32Channel_32Demo
0x200000FA       [5]    ?lstr18_Input_32Capture_32Four_32Channel_32Demo
0x200000FF      [16]    __Lib_System_4XX_APBAHBPrescTable
0x20000110       [8]    _timer3_period_ms
0x20000118       [2]    _PWM_PERIOD
0x2000011A       [2]    _terminal_print_count
0x2000011C      [72]    _fngr_pointer
0x20000164      [72]    _fngr_middle
0x200001AC      [72]    _fngr_ring
0x200001F4      [72]    _fngr_pinky
0x2000023C      [72]    _fngr_thumb
0x20000284       [4]    ___System_CLOCK_IN_KHZ
0x20000288       [4]    __VOLTAGE_RANGE
0x2000028C       [4]    _UART_Wr_Ptr
0x20000290       [4]    _UART_Rd_Ptr
0x20000294       [4]    _UART_Rdy_Ptr
0x20000298       [4]    _UART_Tx_Idle_Ptr
0x2000029C       [4]    _tim3_overflow_count
0x200002A0       [4]    _tim2_overflow_count
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x1E08      [22]    ?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo
0x1E1E       [2]    ?ICS_ENCODER_TIM_PSC
0x1E20       [4]    ?ICS_ENCODER_TIM_RELOAD
0x1E24       [4]    ?ICS_MCU_FREQUENCY
0x1E28       [8]    ?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo
0x1E30       [7]    ?ICS?lstr2_Input_32Capture_32Four_32Channel_32Demo
0x1E37       [5]    ?ICS?lstr3_Input_32Capture_32Four_32Channel_32Demo
0x1E3C       [6]    ?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo
0x1E42       [6]    ?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo
0x1E48      [26]    ?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo
0x1E62       [9]    ?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo
0x1E6B      [16]    ?ICS?lstr9_Input_32Capture_32Four_32Channel_32Demo
0x1E7B       [3]    ?ICS?lstr10_Input_32Capture_32Four_32Channel_32Demo
0x1E7E      [36]    ?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo
0x1EA2       [3]    ?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo
0x1EA5      [36]    ?ICS?lstr13_Input_32Capture_32Four_32Channel_32Demo
0x1EC9       [8]    ?ICS?lstr14_Input_32Capture_32Four_32Channel_32Demo
0x1ED1      [10]    ?ICS?lstr15_Input_32Capture_32Four_32Channel_32Demo
0x1EDB       [3]    ?ICS?lstr16_Input_32Capture_32Four_32Channel_32Demo
0x1EDE      [36]    ?ICS?lstr17_Input_32Capture_32Four_32Channel_32Demo
0x1F02       [5]    ?ICS?lstr18_Input_32Capture_32Four_32Channel_32Demo
0x1F07      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x1F18     [108]    __GPIO_MODULE_TIM2_CH1_PA5
0x1F84     [108]    __GPIO_MODULE_TIM4_CH1_PB6
0x1FF0     [108]    __GPIO_MODULE_USART1_PA9_10
0x205C     [108]    __GPIO_MODULE_TIM3_CH2_PC7
0x20C8     [108]    __GPIO_MODULE_TIM3_CH1_PA6
0x2134     [108]    __GPIO_MODULE_TIM3_CH4_PB1
0x21A0     [108]    __GPIO_MODULE_TIM3_CH3_PB0
