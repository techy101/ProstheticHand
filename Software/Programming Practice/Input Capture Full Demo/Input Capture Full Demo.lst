;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 10/21/2016 8:54:34 PM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x16A10000  	5793
0x0008	0x16950000  	5781
0x000C	0x16950000  	5781
0x0010	0x16950000  	5781
0x0014	0x16950000  	5781
0x0018	0x16950000  	5781
0x001C	0x16950000  	5781
0x0020	0x16950000  	5781
0x0024	0x16950000  	5781
0x0028	0x16950000  	5781
0x002C	0x16950000  	5781
0x0030	0x16950000  	5781
0x0034	0x16950000  	5781
0x0038	0x16950000  	5781
0x003C	0x16950000  	5781
0x0040	0x16950000  	5781
0x0044	0x16950000  	5781
0x0048	0x16950000  	5781
0x004C	0x16950000  	5781
0x0050	0x16950000  	5781
0x0054	0x16950000  	5781
0x0058	0x16950000  	5781
0x005C	0x16950000  	5781
0x0060	0x16950000  	5781
0x0064	0x16950000  	5781
0x0068	0x16950000  	5781
0x006C	0x16950000  	5781
0x0070	0x16950000  	5781
0x0074	0x16950000  	5781
0x0078	0x16950000  	5781
0x007C	0x16950000  	5781
0x0080	0x16950000  	5781
0x0084	0x16950000  	5781
0x0088	0x16950000  	5781
0x008C	0x16950000  	5781
0x0090	0x16950000  	5781
0x0094	0x16950000  	5781
0x0098	0x16950000  	5781
0x009C	0x16950000  	5781
0x00A0	0x16950000  	5781
0x00A4	0x16950000  	5781
0x00A8	0x16950000  	5781
0x00AC	0x16950000  	5781
0x00B0	0x15050000  	5381
0x00B4	0x16710000  	5745
0x00B8	0x16950000  	5781
0x00BC	0x16950000  	5781
0x00C0	0x16950000  	5781
0x00C4	0x16950000  	5781
0x00C8	0x16950000  	5781
0x00CC	0x16950000  	5781
0x00D0	0x16950000  	5781
0x00D4	0x16950000  	5781
0x00D8	0x16950000  	5781
0x00DC	0x16950000  	5781
0x00E0	0x16950000  	5781
0x00E4	0x16950000  	5781
0x00E8	0x16950000  	5781
0x00EC	0x16950000  	5781
0x00F0	0x16950000  	5781
0x00F4	0x16950000  	5781
0x00F8	0x16950000  	5781
0x00FC	0x16950000  	5781
0x0100	0x16950000  	5781
0x0104	0x16950000  	5781
0x0108	0x16950000  	5781
0x010C	0x16950000  	5781
0x0110	0x16950000  	5781
0x0114	0x16950000  	5781
0x0118	0x16950000  	5781
0x011C	0x16950000  	5781
0x0120	0x16950000  	5781
0x0124	0x16950000  	5781
0x0128	0x16950000  	5781
0x012C	0x16950000  	5781
0x0130	0x16950000  	5781
0x0134	0x16950000  	5781
0x0138	0x16950000  	5781
0x013C	0x16950000  	5781
0x0140	0x16950000  	5781
0x0144	0x16950000  	5781
0x0148	0x16950000  	5781
0x014C	0x16950000  	5781
0x0150	0x16950000  	5781
0x0154	0x16950000  	5781
0x0158	0x16950000  	5781
0x015C	0x16950000  	5781
0x0160	0x16950000  	5781
0x0164	0x16950000  	5781
0x0168	0x16950000  	5781
0x016C	0x16950000  	5781
0x0170	0x16950000  	5781
0x0174	0x16950000  	5781
0x0178	0x16950000  	5781
0x017C	0x16950000  	5781
0x0180	0x16950000  	5781
0x0184	0x16950000  	5781
; end of ____SysVT
_main:
;Input Capture Four Channel Demo.c, 73 :: 		void main() {
0x16A0	0xF000F878  BL	6036
0x16A4	0xF7FFFF18  BL	5336
0x16A8	0xF000FC1C  BL	7908
0x16AC	0xF000FA22  BL	6900
0x16B0	0xF000FBBC  BL	7724
;Input Capture Four Channel Demo.c, 76 :: 		init_UART();
0x16B4	0xF7FFFD08  BL	_init_UART+0
;Input Capture Four Channel Demo.c, 77 :: 		init_GPIO();
0x16B8	0xF7FFFD8E  BL	_init_GPIO+0
;Input Capture Four Channel Demo.c, 80 :: 		strcpy(fngr_pointer.name, "Pointer");
0x16BC	0x4828    LDR	R0, [PC, #160]
0x16BE	0x4601    MOV	R1, R0
0x16C0	0x4828    LDR	R0, [PC, #160]
0x16C2	0xF7FFFD3B  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 81 :: 		strcpy(fngr_middle.name, "Middle");
0x16C6	0x4828    LDR	R0, [PC, #160]
0x16C8	0x4601    MOV	R1, R0
0x16CA	0x4828    LDR	R0, [PC, #160]
0x16CC	0xF7FFFD36  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 82 :: 		strcpy(fngr_ring.name, "Ring");
0x16D0	0x4827    LDR	R0, [PC, #156]
0x16D2	0x4601    MOV	R1, R0
0x16D4	0x4827    LDR	R0, [PC, #156]
0x16D6	0xF7FFFD31  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 83 :: 		strcpy(fngr_pinky.name, "Pinky");
0x16DA	0x4827    LDR	R0, [PC, #156]
0x16DC	0x4601    MOV	R1, R0
0x16DE	0x4827    LDR	R0, [PC, #156]
0x16E0	0xF7FFFD2C  BL	_strcpy+0
;Input Capture Four Channel Demo.c, 86 :: 		UART1_Write_Text("\n\n\rProgram Has Started!\n\r");
0x16E4	0x4826    LDR	R0, [PC, #152]
0x16E6	0xF7FFFD69  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 87 :: 		delay_ms(500);
0x16EA	0xF64367FE  MOVW	R7, #16126
0x16EE	0xF2C017AB  MOVT	R7, #427
L_main0:
0x16F2	0x1E7F    SUBS	R7, R7, #1
0x16F4	0xD1FD    BNE	L_main0
0x16F6	0xBF00    NOP
0x16F8	0xBF00    NOP
0x16FA	0xBF00    NOP
0x16FC	0xBF00    NOP
0x16FE	0xBF00    NOP
;Input Capture Four Channel Demo.c, 90 :: 		init_timer3();
0x1700	0xF7FFFD30  BL	_init_timer3+0
;Input Capture Four Channel Demo.c, 91 :: 		init_input_capture();
0x1704	0xF7FFFE08  BL	_init_input_capture+0
;Input Capture Four Channel Demo.c, 94 :: 		while(1) {
L_main2:
;Input Capture Four Channel Demo.c, 96 :: 		if (poll_flag) {                                                     // Calculate finger state values (Set by timer 3)
0x1708	0x481E    LDR	R0, [PC, #120]
0x170A	0x8800    LDRH	R0, [R0, #0]
0x170C	0xB170    CBZ	R0, L_main4
;Input Capture Four Channel Demo.c, 97 :: 		poll_flag = 0;                                                    // Clear flag
0x170E	0x2100    MOVS	R1, #0
0x1710	0x481C    LDR	R0, [PC, #112]
0x1712	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 98 :: 		calc_finger_state(&fngr_pointer);                                 // Call state calculation function for each finger
0x1714	0x4813    LDR	R0, [PC, #76]
0x1716	0xF7FFFD73  BL	_calc_finger_state+0
;Input Capture Four Channel Demo.c, 99 :: 		calc_finger_state(&fngr_middle);
0x171A	0x4814    LDR	R0, [PC, #80]
0x171C	0xF7FFFD70  BL	_calc_finger_state+0
;Input Capture Four Channel Demo.c, 100 :: 		calc_finger_state(&fngr_ring);
0x1720	0x4814    LDR	R0, [PC, #80]
0x1722	0xF7FFFD6D  BL	_calc_finger_state+0
;Input Capture Four Channel Demo.c, 101 :: 		calc_finger_state(&fngr_pinky);
0x1726	0x4815    LDR	R0, [PC, #84]
0x1728	0xF7FFFD6A  BL	_calc_finger_state+0
;Input Capture Four Channel Demo.c, 103 :: 		}
L_main4:
;Input Capture Four Channel Demo.c, 105 :: 		if (poll_flag && (terminal_print_count >= TERMINAL_PRINT_THRESH)) {  // Set number of polling events has occured => Print statistics to terminal
0x172C	0x4815    LDR	R0, [PC, #84]
0x172E	0x8800    LDRH	R0, [R0, #0]
0x1730	0xB1A0    CBZ	R0, L__main21
0x1732	0x4815    LDR	R0, [PC, #84]
0x1734	0x8801    LDRH	R1, [R0, #0]
0x1736	0x4815    LDR	R0, [PC, #84]
0x1738	0x8800    LDRH	R0, [R0, #0]
0x173A	0x4288    CMP	R0, R1
0x173C	0xD30E    BCC	L__main20
L__main19:
;Input Capture Four Channel Demo.c, 107 :: 		print_finger_info(&fngr_pointer);
0x173E	0x4809    LDR	R0, [PC, #36]
0x1740	0xF7FFFC58  BL	_print_finger_info+0
;Input Capture Four Channel Demo.c, 108 :: 		print_finger_info(&fngr_middle);
0x1744	0x4809    LDR	R0, [PC, #36]
0x1746	0xF7FFFC55  BL	_print_finger_info+0
;Input Capture Four Channel Demo.c, 109 :: 		print_finger_info(&fngr_ring);
0x174A	0x480A    LDR	R0, [PC, #40]
0x174C	0xF7FFFC52  BL	_print_finger_info+0
;Input Capture Four Channel Demo.c, 110 :: 		print_finger_info(&fngr_pinky);
0x1750	0x480A    LDR	R0, [PC, #40]
0x1752	0xF7FFFC4F  BL	_print_finger_info+0
;Input Capture Four Channel Demo.c, 111 :: 		UART1_Write_Text("\n\n\n\n\n\n\n\r");
0x1756	0x480E    LDR	R0, [PC, #56]
0x1758	0xF7FFFD30  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 105 :: 		if (poll_flag && (terminal_print_count >= TERMINAL_PRINT_THRESH)) {  // Set number of polling events has occured => Print statistics to terminal
L__main21:
L__main20:
;Input Capture Four Channel Demo.c, 113 :: 		}
0x175C	0xE7D4    B	L_main2
;Input Capture Four Channel Demo.c, 114 :: 		}       // Main ends here
L_end_main:
L__main_end_loop:
0x175E	0xE7FE    B	L__main_end_loop
0x1760	0x00A42000  	?lstr1_Input_32Capture_32Four_32Channel_32Demo+0
0x1764	0x01042000  	_fngr_pointer+0
0x1768	0x00AC2000  	?lstr2_Input_32Capture_32Four_32Channel_32Demo+0
0x176C	0x014C2000  	_fngr_middle+0
0x1770	0x00B32000  	?lstr3_Input_32Capture_32Four_32Channel_32Demo+0
0x1774	0x01942000  	_fngr_ring+0
0x1778	0x00B82000  	?lstr4_Input_32Capture_32Four_32Channel_32Demo+0
0x177C	0x01DC2000  	_fngr_pinky+0
0x1780	0x00BE2000  	?lstr5_Input_32Capture_32Four_32Channel_32Demo+0
0x1784	0x02242000  	_poll_flag+0
0x1788	0x00D82000  	_TERMINAL_PRINT_THRESH+0
0x178C	0x00E62000  	_terminal_print_count+0
0x1790	0x00DA2000  	?lstr6_Input_32Capture_32Four_32Channel_32Demo+0
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x0F94	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x0F96	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x0F9A	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x0F9E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x0FA2	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x0FA4	0xB001    ADD	SP, SP, #4
0x0FA6	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x1100	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x1102	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x1106	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x110A	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x110E	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x1110	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x1114	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x1116	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x1118	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x111A	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x111E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x1122	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x1124	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x1128	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x112A	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x112C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x1130	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x1134	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x1136	0xB001    ADD	SP, SP, #4
0x1138	0x4770    BX	LR
; end of ___FillZeros
_init_UART:
;Input Capture Four Channel Demo.c, 198 :: 		void init_UART() {
0x10C8	0xB081    SUB	SP, SP, #4
0x10CA	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Four Channel Demo.c, 200 :: 		UART1_Init(UART_BAUD_RATE);                                                 // Configure UART 1
0x10CE	0xF44F30E1  MOV	R0, #115200
0x10D2	0xF7FFFF45  BL	_UART1_Init+0
;Input Capture Four Channel Demo.c, 201 :: 		Delay_ms(200);                                                              // Wait for UART to stabilize
0x10D6	0xF24E57FE  MOVW	R7, #58878
0x10DA	0xF2C007AA  MOVT	R7, #170
0x10DE	0xBF00    NOP
0x10E0	0xBF00    NOP
L_init_UART13:
0x10E2	0x1E7F    SUBS	R7, R7, #1
0x10E4	0xD1FD    BNE	L_init_UART13
0x10E6	0xBF00    NOP
0x10E8	0xBF00    NOP
0x10EA	0xBF00    NOP
;Input Capture Four Channel Demo.c, 202 :: 		UART_Write_Text("\rUART Init Complete\r\n");                                // Print test statement to terminal
0x10EC	0x4803    LDR	R0, [PC, #12]
0x10EE	0xF7FFFF1B  BL	_UART_Write_Text+0
;Input Capture Four Channel Demo.c, 203 :: 		}
L_end_init_UART:
0x10F2	0xF8DDE000  LDR	LR, [SP, #0]
0x10F6	0xB001    ADD	SP, SP, #4
0x10F8	0x4770    BX	LR
0x10FA	0xBF00    NOP
0x10FC	0x008E2000  	?lstr7_Input_32Capture_32Four_32Channel_32Demo+0
; end of _init_UART
_UART1_Init:
;__Lib_UART_123_45_6.c, 439 :: 		
; baud_rate start address is: 0 (R0)
0x0F60	0xB081    SUB	SP, SP, #4
0x0F62	0xF8CDE000  STR	LR, [SP, #0]
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 440 :: 		
0x0F66	0x4A09    LDR	R2, [PC, #36]
0x0F68	0xF2400100  MOVW	R1, #0
0x0F6C	0xB404    PUSH	(R2)
0x0F6E	0xB402    PUSH	(R1)
0x0F70	0xF2400300  MOVW	R3, #0
0x0F74	0xF2400200  MOVW	R2, #0
0x0F78	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0F7A	0x4805    LDR	R0, [PC, #20]
0x0F7C	0xF7FFFBCA  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x0F80	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 441 :: 		
L_end_UART1_Init:
0x0F82	0xF8DDE000  LDR	LR, [SP, #0]
0x0F86	0xB001    ADD	SP, SP, #4
0x0F88	0x4770    BX	LR
0x0F8A	0xBF00    NOP
0x0F8C	0x1C680000  	__GPIO_MODULE_USART1_PA9_10+0
0x0F90	0x10004001  	USART1_SR+0
; end of _UART1_Init
__Lib_UART_123_45_6_UARTx_Init_Advanced:
;__Lib_UART_123_45_6.c, 319 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0714	0xB08B    SUB	SP, SP, #44
0x0716	0xF8CDE000  STR	LR, [SP, #0]
0x071A	0xB29A    UXTH	R2, R3
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; baud_rate start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
0x071C	0xF8BD302C  LDRH	R3, [SP, #44]
; module start address is: 24 (R6)
0x0720	0x9E0C    LDR	R6, [SP, #48]
;__Lib_UART_123_45_6.c, 323 :: 		
0x0722	0xAC06    ADD	R4, SP, #24
0x0724	0xF8AD3004  STRH	R3, [SP, #4]
0x0728	0xF8AD2008  STRH	R2, [SP, #8]
0x072C	0x9103    STR	R1, [SP, #12]
0x072E	0x9004    STR	R0, [SP, #16]
0x0730	0x4620    MOV	R0, R4
0x0732	0xF7FFFF61  BL	_RCC_GetClocksFrequency+0
0x0736	0x9804    LDR	R0, [SP, #16]
0x0738	0x9903    LDR	R1, [SP, #12]
0x073A	0xF8BD2008  LDRH	R2, [SP, #8]
0x073E	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 325 :: 		
0x0742	0x4C71    LDR	R4, [PC, #452]
0x0744	0x42A0    CMP	R0, R4
0x0746	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced15
;__Lib_UART_123_45_6.c, 326 :: 		
0x0748	0x2501    MOVS	R5, #1
0x074A	0xB26D    SXTB	R5, R5
0x074C	0x4C6F    LDR	R4, [PC, #444]
0x074E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 327 :: 		
0x0750	0x4D6F    LDR	R5, [PC, #444]
0x0752	0x4C70    LDR	R4, [PC, #448]
0x0754	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 328 :: 		
0x0756	0x4D70    LDR	R5, [PC, #448]
0x0758	0x4C70    LDR	R4, [PC, #448]
0x075A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 329 :: 		
0x075C	0x4D70    LDR	R5, [PC, #448]
0x075E	0x4C71    LDR	R4, [PC, #452]
0x0760	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 330 :: 		
0x0762	0x4D71    LDR	R5, [PC, #452]
0x0764	0x4C71    LDR	R4, [PC, #452]
0x0766	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 331 :: 		
0x0768	0x9C09    LDR	R4, [SP, #36]
0x076A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 332 :: 		
0x076C	0xE06C    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced16
L___Lib_UART_123_45_6_UARTx_Init_Advanced15:
;__Lib_UART_123_45_6.c, 333 :: 		
0x076E	0x4C70    LDR	R4, [PC, #448]
0x0770	0x42A0    CMP	R0, R4
0x0772	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced17
;__Lib_UART_123_45_6.c, 334 :: 		
0x0774	0x2501    MOVS	R5, #1
0x0776	0xB26D    SXTB	R5, R5
0x0778	0x4C6E    LDR	R4, [PC, #440]
0x077A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 335 :: 		
0x077C	0x4D6E    LDR	R5, [PC, #440]
0x077E	0x4C65    LDR	R4, [PC, #404]
0x0780	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 336 :: 		
0x0782	0x4D6E    LDR	R5, [PC, #440]
0x0784	0x4C65    LDR	R4, [PC, #404]
0x0786	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 337 :: 		
0x0788	0x4D6D    LDR	R5, [PC, #436]
0x078A	0x4C66    LDR	R4, [PC, #408]
0x078C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 338 :: 		
0x078E	0x4D6D    LDR	R5, [PC, #436]
0x0790	0x4C66    LDR	R4, [PC, #408]
0x0792	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 339 :: 		
0x0794	0x9C08    LDR	R4, [SP, #32]
0x0796	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 340 :: 		
0x0798	0xE056    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced18
L___Lib_UART_123_45_6_UARTx_Init_Advanced17:
;__Lib_UART_123_45_6.c, 341 :: 		
0x079A	0x4C6B    LDR	R4, [PC, #428]
0x079C	0x42A0    CMP	R0, R4
0x079E	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced19
;__Lib_UART_123_45_6.c, 342 :: 		
0x07A0	0x2501    MOVS	R5, #1
0x07A2	0xB26D    SXTB	R5, R5
0x07A4	0x4C69    LDR	R4, [PC, #420]
0x07A6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 343 :: 		
0x07A8	0x4D69    LDR	R5, [PC, #420]
0x07AA	0x4C5A    LDR	R4, [PC, #360]
0x07AC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 344 :: 		
0x07AE	0x4D69    LDR	R5, [PC, #420]
0x07B0	0x4C5A    LDR	R4, [PC, #360]
0x07B2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 345 :: 		
0x07B4	0x4D68    LDR	R5, [PC, #416]
0x07B6	0x4C5B    LDR	R4, [PC, #364]
0x07B8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 346 :: 		
0x07BA	0x4D68    LDR	R5, [PC, #416]
0x07BC	0x4C5B    LDR	R4, [PC, #364]
0x07BE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 347 :: 		
0x07C0	0x9C08    LDR	R4, [SP, #32]
0x07C2	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 348 :: 		
0x07C4	0xE040    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced20
L___Lib_UART_123_45_6_UARTx_Init_Advanced19:
;__Lib_UART_123_45_6.c, 349 :: 		
0x07C6	0x4C66    LDR	R4, [PC, #408]
0x07C8	0x42A0    CMP	R0, R4
0x07CA	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced21
;__Lib_UART_123_45_6.c, 350 :: 		
0x07CC	0x2501    MOVS	R5, #1
0x07CE	0xB26D    SXTB	R5, R5
0x07D0	0x4C64    LDR	R4, [PC, #400]
0x07D2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 351 :: 		
0x07D4	0x4D64    LDR	R5, [PC, #400]
0x07D6	0x4C4F    LDR	R4, [PC, #316]
0x07D8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 352 :: 		
0x07DA	0x4D64    LDR	R5, [PC, #400]
0x07DC	0x4C4F    LDR	R4, [PC, #316]
0x07DE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 353 :: 		
0x07E0	0x4D63    LDR	R5, [PC, #396]
0x07E2	0x4C50    LDR	R4, [PC, #320]
0x07E4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 354 :: 		
0x07E6	0x4D63    LDR	R5, [PC, #396]
0x07E8	0x4C50    LDR	R4, [PC, #320]
0x07EA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 355 :: 		
0x07EC	0x9C08    LDR	R4, [SP, #32]
0x07EE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 356 :: 		
0x07F0	0xE02A    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced22
L___Lib_UART_123_45_6_UARTx_Init_Advanced21:
;__Lib_UART_123_45_6.c, 357 :: 		
0x07F2	0x4C61    LDR	R4, [PC, #388]
0x07F4	0x42A0    CMP	R0, R4
0x07F6	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced23
;__Lib_UART_123_45_6.c, 358 :: 		
0x07F8	0x2501    MOVS	R5, #1
0x07FA	0xB26D    SXTB	R5, R5
0x07FC	0x4C5F    LDR	R4, [PC, #380]
0x07FE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 359 :: 		
0x0800	0x4D5F    LDR	R5, [PC, #380]
0x0802	0x4C44    LDR	R4, [PC, #272]
0x0804	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 360 :: 		
0x0806	0x4D5F    LDR	R5, [PC, #380]
0x0808	0x4C44    LDR	R4, [PC, #272]
0x080A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 361 :: 		
0x080C	0x4D5E    LDR	R5, [PC, #376]
0x080E	0x4C45    LDR	R4, [PC, #276]
0x0810	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 362 :: 		
0x0812	0x4D5E    LDR	R5, [PC, #376]
0x0814	0x4C45    LDR	R4, [PC, #276]
0x0816	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 363 :: 		
0x0818	0x9C08    LDR	R4, [SP, #32]
0x081A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 364 :: 		
0x081C	0xE014    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced24
L___Lib_UART_123_45_6_UARTx_Init_Advanced23:
;__Lib_UART_123_45_6.c, 365 :: 		
0x081E	0x4C5C    LDR	R4, [PC, #368]
0x0820	0x42A0    CMP	R0, R4
0x0822	0xD111    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced25
;__Lib_UART_123_45_6.c, 366 :: 		
0x0824	0x2501    MOVS	R5, #1
0x0826	0xB26D    SXTB	R5, R5
0x0828	0x4C5A    LDR	R4, [PC, #360]
0x082A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 367 :: 		
0x082C	0x4D5A    LDR	R5, [PC, #360]
0x082E	0x4C39    LDR	R4, [PC, #228]
0x0830	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 368 :: 		
0x0832	0x4D5A    LDR	R5, [PC, #360]
0x0834	0x4C39    LDR	R4, [PC, #228]
0x0836	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 369 :: 		
0x0838	0x4D59    LDR	R5, [PC, #356]
0x083A	0x4C3A    LDR	R4, [PC, #232]
0x083C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 370 :: 		
0x083E	0x4D59    LDR	R5, [PC, #356]
0x0840	0x4C3A    LDR	R4, [PC, #232]
0x0842	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 371 :: 		
0x0844	0x9C09    LDR	R4, [SP, #36]
0x0846	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 372 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced25:
L___Lib_UART_123_45_6_UARTx_Init_Advanced24:
L___Lib_UART_123_45_6_UARTx_Init_Advanced22:
L___Lib_UART_123_45_6_UARTx_Init_Advanced20:
L___Lib_UART_123_45_6_UARTx_Init_Advanced18:
L___Lib_UART_123_45_6_UARTx_Init_Advanced16:
;__Lib_UART_123_45_6.c, 374 :: 		
0x0848	0xF8AD3004  STRH	R3, [SP, #4]
; module end address is: 24 (R6)
0x084C	0xF8AD2008  STRH	R2, [SP, #8]
0x0850	0x9103    STR	R1, [SP, #12]
0x0852	0x9004    STR	R0, [SP, #16]
0x0854	0x4630    MOV	R0, R6
0x0856	0xF7FFFF1F  BL	_GPIO_Alternate_Function_Enable+0
0x085A	0x9804    LDR	R0, [SP, #16]
0x085C	0x9903    LDR	R1, [SP, #12]
0x085E	0xF8BD2008  LDRH	R2, [SP, #8]
0x0862	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 376 :: 		
0x0866	0xF2000510  ADDW	R5, R0, #16
0x086A	0x2400    MOVS	R4, #0
0x086C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 377 :: 		
0x086E	0xF2000510  ADDW	R5, R0, #16
0x0872	0x682C    LDR	R4, [R5, #0]
0x0874	0x431C    ORRS	R4, R3
; stop_bits end address is: 12 (R3)
0x0876	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 378 :: 		
0x0878	0xF200050C  ADDW	R5, R0, #12
0x087C	0x2400    MOVS	R4, #0
0x087E	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 380 :: 		
0x0880	0xB11A    CBZ	R2, L___Lib_UART_123_45_6_UARTx_Init_Advanced40
;__Lib_UART_123_45_6.c, 381 :: 		
0x0882	0xF4426280  ORR	R2, R2, #1024
0x0886	0xB292    UXTH	R2, R2
; parity end address is: 8 (R2)
;__Lib_UART_123_45_6.c, 382 :: 		
0x0888	0xE7FF    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced26
L___Lib_UART_123_45_6_UARTx_Init_Advanced40:
;__Lib_UART_123_45_6.c, 380 :: 		
;__Lib_UART_123_45_6.c, 382 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced26:
;__Lib_UART_123_45_6.c, 384 :: 		
; parity start address is: 8 (R2)
0x088A	0xF200050C  ADDW	R5, R0, #12
0x088E	0x682C    LDR	R4, [R5, #0]
0x0890	0x4314    ORRS	R4, R2
; parity end address is: 8 (R2)
0x0892	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 386 :: 		
0x0894	0xF200060C  ADDW	R6, R0, #12
0x0898	0x2501    MOVS	R5, #1
0x089A	0x6834    LDR	R4, [R6, #0]
0x089C	0xF365344D  BFI	R4, R5, #13, #1
0x08A0	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 387 :: 		
0x08A2	0xF200060C  ADDW	R6, R0, #12
0x08A6	0x2501    MOVS	R5, #1
0x08A8	0x6834    LDR	R4, [R6, #0]
0x08AA	0xF36504C3  BFI	R4, R5, #3, #1
0x08AE	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 388 :: 		
0x08B0	0xF200060C  ADDW	R6, R0, #12
0x08B4	0x2501    MOVS	R5, #1
0x08B6	0x6834    LDR	R4, [R6, #0]
0x08B8	0xF3650482  BFI	R4, R5, #2, #1
0x08BC	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 389 :: 		
0x08BE	0xF2000514  ADDW	R5, R0, #20
0x08C2	0x2400    MOVS	R4, #0
0x08C4	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 394 :: 		
0x08C6	0x9D05    LDR	R5, [SP, #20]
0x08C8	0x2419    MOVS	R4, #25
0x08CA	0x4365    MULS	R5, R4, R5
0x08CC	0x008C    LSLS	R4, R1, #2
; baud_rate end address is: 4 (R1)
0x08CE	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45_6.c, 395 :: 		
0x08D2	0x2464    MOVS	R4, #100
0x08D4	0xFBB7F4F4  UDIV	R4, R7, R4
0x08D8	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45_6.c, 397 :: 		
0x08DA	0x0935    LSRS	R5, R6, #4
0x08DC	0x2464    MOVS	R4, #100
0x08DE	0x436C    MULS	R4, R5, R4
0x08E0	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45_6.c, 398 :: 		
0x08E2	0x0124    LSLS	R4, R4, #4
0x08E4	0xF2040532  ADDW	R5, R4, #50
0x08E8	0x2464    MOVS	R4, #100
0x08EA	0xFBB5F4F4  UDIV	R4, R5, R4
0x08EE	0xF004040F  AND	R4, R4, #15
0x08F2	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45_6.c, 400 :: 		
0x08F6	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x08FA	0xB2A4    UXTH	R4, R4
0x08FC	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 401 :: 		
L_end_UARTx_Init_Advanced:
0x08FE	0xF8DDE000  LDR	LR, [SP, #0]
0x0902	0xB00B    ADD	SP, SP, #44
0x0904	0x4770    BX	LR
0x0906	0xBF00    NOP
0x0908	0x10004001  	USART1_SR+0
0x090C	0x08904247  	RCC_APB2ENR+0
0x0910	0x05890000  	_UART1_Write+0
0x0914	0x02302000  	_UART_Wr_Ptr+0
0x0918	0xFFFFFFFF  	_UART1_Read+0
0x091C	0x02342000  	_UART_Rd_Ptr+0
0x0920	0xFFFFFFFF  	_UART1_Data_Ready+0
0x0924	0x02382000  	_UART_Rdy_Ptr+0
0x0928	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x092C	0x023C2000  	_UART_Tx_Idle_Ptr+0
0x0930	0x44004000  	USART2_SR+0
0x0934	0x08444247  	RCC_APB1ENR+0
0x0938	0x067D0000  	_UART2_Write+0
0x093C	0xFFFFFFFF  	_UART2_Read+0
0x0940	0xFFFFFFFF  	_UART2_Data_Ready+0
0x0944	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x0948	0x48004000  	USART3_SR+0
0x094C	0x08484247  	RCC_APB1ENR+0
0x0950	0x05C10000  	_UART3_Write+0
0x0954	0xFFFFFFFF  	_UART3_Read+0
0x0958	0xFFFFFFFF  	_UART3_Data_Ready+0
0x095C	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x0960	0x4C004000  	UART4_SR+0
0x0964	0x084C4247  	RCC_APB1ENR+0
0x0968	0x05DD0000  	_UART4_Write+0
0x096C	0xFFFFFFFF  	_UART4_Read+0
0x0970	0xFFFFFFFF  	_UART4_Data_Ready+0
0x0974	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x0978	0x50004000  	UART5_SR+0
0x097C	0x08504247  	RCC_APB1ENR+0
0x0980	0x05A50000  	_UART5_Write+0
0x0984	0xFFFFFFFF  	_UART5_Read+0
0x0988	0xFFFFFFFF  	_UART5_Data_Ready+0
0x098C	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x0990	0x14004001  	USART6_SR+0
0x0994	0x08944247  	RCC_APB2ENR+0
0x0998	0x06E10000  	_UART6_Write+0
0x099C	0xFFFFFFFF  	_UART6_Read+0
0x09A0	0xFFFFFFFF  	_UART6_Data_Ready+0
0x09A4	0xFFFFFFFF  	_UART6_Tx_Idle+0
; end of __Lib_UART_123_45_6_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 389 :: 		
; RCC_Clocks start address is: 0 (R0)
0x05F8	0xB082    SUB	SP, SP, #8
0x05FA	0xF8CDE000  STR	LR, [SP, #0]
0x05FE	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 391 :: 		
;__Lib_System_4XX.c, 393 :: 		
0x0600	0x4619    MOV	R1, R3
0x0602	0x9101    STR	R1, [SP, #4]
0x0604	0xF7FFFF2C  BL	_Get_Fosc_kHz+0
0x0608	0xF24031E8  MOVW	R1, #1000
0x060C	0xFB00F201  MUL	R2, R0, R1
0x0610	0x9901    LDR	R1, [SP, #4]
0x0612	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 396 :: 		
0x0614	0x4917    LDR	R1, [PC, #92]
0x0616	0x6809    LDR	R1, [R1, #0]
0x0618	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 397 :: 		
0x061C	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 398 :: 		
0x061E	0x4916    LDR	R1, [PC, #88]
0x0620	0x1889    ADDS	R1, R1, R2
0x0622	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0624	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 400 :: 		
0x0626	0x1D1A    ADDS	R2, R3, #4
0x0628	0x6819    LDR	R1, [R3, #0]
0x062A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x062C	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 403 :: 		
0x062E	0x4911    LDR	R1, [PC, #68]
0x0630	0x6809    LDR	R1, [R1, #0]
0x0632	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 404 :: 		
0x0636	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 405 :: 		
0x0638	0x490F    LDR	R1, [PC, #60]
0x063A	0x1889    ADDS	R1, R1, R2
0x063C	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x063E	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 407 :: 		
0x0640	0xF2030208  ADDW	R2, R3, #8
0x0644	0x1D19    ADDS	R1, R3, #4
0x0646	0x6809    LDR	R1, [R1, #0]
0x0648	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x064A	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 410 :: 		
0x064C	0x4909    LDR	R1, [PC, #36]
0x064E	0x6809    LDR	R1, [R1, #0]
0x0650	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 411 :: 		
0x0654	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 412 :: 		
0x0656	0x4908    LDR	R1, [PC, #32]
0x0658	0x1889    ADDS	R1, R1, R2
0x065A	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x065C	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 414 :: 		
0x065E	0xF203020C  ADDW	R2, R3, #12
0x0662	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x0664	0x6809    LDR	R1, [R1, #0]
0x0666	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0668	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 415 :: 		
L_end_RCC_GetClocksFrequency:
0x066A	0xF8DDE000  LDR	LR, [SP, #0]
0x066E	0xB002    ADD	SP, SP, #8
0x0670	0x4770    BX	LR
0x0672	0xBF00    NOP
0x0674	0x38084002  	RCC_CFGR+0
0x0678	0x00EC2000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0460	0x4801    LDR	R0, [PC, #4]
0x0462	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0464	0x4770    BX	LR
0x0466	0xBF00    NOP
0x0468	0x02282000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x0698	0xB083    SUB	SP, SP, #12
0x069A	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x069E	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x06A0	0x00A1    LSLS	R1, R4, #2
0x06A2	0x1841    ADDS	R1, R0, R1
0x06A4	0x6809    LDR	R1, [R1, #0]
0x06A6	0xF1B13FFF  CMP	R1, #-1
0x06AA	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x06AC	0xF2000134  ADDW	R1, R0, #52
0x06B0	0x00A3    LSLS	R3, R4, #2
0x06B2	0x18C9    ADDS	R1, R1, R3
0x06B4	0x6809    LDR	R1, [R1, #0]
0x06B6	0x460A    MOV	R2, R1
0x06B8	0x18C1    ADDS	R1, R0, R3
0x06BA	0x6809    LDR	R1, [R1, #0]
0x06BC	0x9001    STR	R0, [SP, #4]
0x06BE	0xF8AD4008  STRH	R4, [SP, #8]
0x06C2	0x4608    MOV	R0, R1
0x06C4	0x4611    MOV	R1, R2
0x06C6	0xF7FFFED1  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x06CA	0xF8BD4008  LDRH	R4, [SP, #8]
0x06CE	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x06D0	0x1C64    ADDS	R4, R4, #1
0x06D2	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x06D4	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x06D6	0xF8DDE000  LDR	LR, [SP, #0]
0x06DA	0xB003    ADD	SP, SP, #12
0x06DC	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x046C	0xB083    SUB	SP, SP, #12
0x046E	0xF8CDE000  STR	LR, [SP, #0]
0x0472	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x0474	0xF00403FF  AND	R3, R4, #255
0x0478	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x047A	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x047C	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x0480	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x0482	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x0484	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x0488	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x048A	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x048C	0x4A2D    LDR	R2, [PC, #180]
0x048E	0x9202    STR	R2, [SP, #8]
0x0490	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x0492	0x4A2D    LDR	R2, [PC, #180]
0x0494	0x9202    STR	R2, [SP, #8]
0x0496	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x0498	0x4A2C    LDR	R2, [PC, #176]
0x049A	0x9202    STR	R2, [SP, #8]
0x049C	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x049E	0x4A2C    LDR	R2, [PC, #176]
0x04A0	0x9202    STR	R2, [SP, #8]
0x04A2	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x04A4	0x4A2B    LDR	R2, [PC, #172]
0x04A6	0x9202    STR	R2, [SP, #8]
0x04A8	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x04AA	0x4A2B    LDR	R2, [PC, #172]
0x04AC	0x9202    STR	R2, [SP, #8]
0x04AE	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x04B0	0x4A2A    LDR	R2, [PC, #168]
0x04B2	0x9202    STR	R2, [SP, #8]
0x04B4	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x04B6	0x4A2A    LDR	R2, [PC, #168]
0x04B8	0x9202    STR	R2, [SP, #8]
0x04BA	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x04BC	0x4A29    LDR	R2, [PC, #164]
0x04BE	0x9202    STR	R2, [SP, #8]
0x04C0	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x04C2	0x2800    CMP	R0, #0
0x04C4	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x04C6	0x2801    CMP	R0, #1
0x04C8	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x04CA	0x2802    CMP	R0, #2
0x04CC	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x04CE	0x2803    CMP	R0, #3
0x04D0	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x04D2	0x2804    CMP	R0, #4
0x04D4	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x04D6	0x2805    CMP	R0, #5
0x04D8	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x04DA	0x2806    CMP	R0, #6
0x04DC	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x04DE	0x2807    CMP	R0, #7
0x04E0	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x04E2	0x2808    CMP	R0, #8
0x04E4	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x04E6	0x2201    MOVS	R2, #1
0x04E8	0xB212    SXTH	R2, R2
0x04EA	0xFA02F20C  LSL	R2, R2, R12
0x04EE	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x04F2	0x9802    LDR	R0, [SP, #8]
0x04F4	0x460A    MOV	R2, R1
0x04F6	0xF8BD1004  LDRH	R1, [SP, #4]
0x04FA	0xF7FFFE99  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x04FE	0x9A02    LDR	R2, [SP, #8]
0x0500	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x0504	0xF1BC0F07  CMP	R12, #7
0x0508	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x050A	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x050C	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x050E	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x0512	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x0514	0x9101    STR	R1, [SP, #4]
0x0516	0x4601    MOV	R1, R0
0x0518	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x051A	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x051C	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x051E	0x0083    LSLS	R3, R0, #2
0x0520	0xF04F020F  MOV	R2, #15
0x0524	0x409A    LSLS	R2, R3
0x0526	0x43D3    MVN	R3, R2
0x0528	0x680A    LDR	R2, [R1, #0]
0x052A	0x401A    ANDS	R2, R3
0x052C	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x052E	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x0530	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x0534	0x680A    LDR	R2, [R1, #0]
0x0536	0x431A    ORRS	R2, R3
0x0538	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x053A	0xF8DDE000  LDR	LR, [SP, #0]
0x053E	0xB003    ADD	SP, SP, #12
0x0540	0x4770    BX	LR
0x0542	0xBF00    NOP
0x0544	0x00004002  	#1073872896
0x0548	0x04004002  	#1073873920
0x054C	0x08004002  	#1073874944
0x0550	0x0C004002  	#1073875968
0x0554	0x10004002  	#1073876992
0x0558	0x14004002  	#1073878016
0x055C	0x18004002  	#1073879040
0x0560	0x1C004002  	#1073880064
0x0564	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0230	0xB084    SUB	SP, SP, #16
0x0232	0xF8CDE000  STR	LR, [SP, #0]
0x0236	0xB28D    UXTH	R5, R1
0x0238	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x023A	0x4B86    LDR	R3, [PC, #536]
0x023C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x0240	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x0242	0x4618    MOV	R0, R3
0x0244	0xF7FFFFA0  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x0248	0xF1B50FFF  CMP	R5, #255
0x024C	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x024E	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x0250	0x4B81    LDR	R3, [PC, #516]
0x0252	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x0256	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x0258	0x4B80    LDR	R3, [PC, #512]
0x025A	0x429E    CMP	R6, R3
0x025C	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x025E	0xF2455355  MOVW	R3, #21845
0x0262	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x0266	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x0268	0x1D3D    ADDS	R5, R7, #4
0x026A	0x682C    LDR	R4, [R5, #0]
0x026C	0xF06F03FF  MVN	R3, #255
0x0270	0xEA040303  AND	R3, R4, R3, LSL #0
0x0274	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x0276	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x027A	0x682C    LDR	R4, [R5, #0]
0x027C	0xF64F73FF  MOVW	R3, #65535
0x0280	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0284	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x0286	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0288	0x2E42    CMP	R6, #66
0x028A	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x028C	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x028E	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x0290	0xF64F73FF  MOVW	R3, #65535
0x0294	0x429D    CMP	R5, R3
0x0296	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x0298	0x4B70    LDR	R3, [PC, #448]
0x029A	0x429E    CMP	R6, R3
0x029C	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x029E	0xF04F3355  MOV	R3, #1431655765
0x02A2	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x02A4	0x1D3C    ADDS	R4, R7, #4
0x02A6	0x2300    MOVS	R3, #0
0x02A8	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x02AA	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x02AE	0xF04F33FF  MOV	R3, #-1
0x02B2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x02B4	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x02B6	0x2E42    CMP	R6, #66
0x02B8	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x02BA	0x2300    MOVS	R3, #0
0x02BC	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x02BE	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x02C0	0xF0060301  AND	R3, R6, #1
0x02C4	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x02C6	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x02C8	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x02CA	0xF0060308  AND	R3, R6, #8
0x02CE	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x02D0	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x02D2	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x02D4	0xF0060304  AND	R3, R6, #4
0x02D8	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x02DA	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x02DC	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x02DE	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x02E0	0xF4062301  AND	R3, R6, #528384
0x02E4	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x02E6	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x02E8	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x02EA	0xF4066300  AND	R3, R6, #2048
0x02EE	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x02F0	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x02F2	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x02F4	0xF4066380  AND	R3, R6, #1024
0x02F8	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x02FA	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x02FC	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x02FE	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x0300	0xF0060320  AND	R3, R6, #32
0x0304	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x0306	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x0308	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x030A	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x030C	0xF4067380  AND	R3, R6, #256
0x0310	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x0312	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x0314	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x0316	0xF0060380  AND	R3, R6, #128
0x031A	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x031C	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x031E	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x0320	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x0322	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x0326	0x9201    STR	R2, [SP, #4]
0x0328	0xFA1FF985  UXTH	R9, R5
0x032C	0x46B0    MOV	R8, R6
0x032E	0x4606    MOV	R6, R0
0x0330	0x4618    MOV	R0, R3
0x0332	0x460A    MOV	R2, R1
0x0334	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x0336	0xF1BA0F10  CMP	R10, #16
0x033A	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x033E	0xF04F0301  MOV	R3, #1
0x0342	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x0346	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x034A	0x42A3    CMP	R3, R4
0x034C	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x0350	0xEA4F044A  LSL	R4, R10, #1
0x0354	0xF04F0303  MOV	R3, #3
0x0358	0x40A3    LSLS	R3, R4
0x035A	0x43DC    MVN	R4, R3
0x035C	0x683B    LDR	R3, [R7, #0]
0x035E	0x4023    ANDS	R3, R4
0x0360	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x0362	0xEA4F034A  LSL	R3, R10, #1
0x0366	0xFA06F403  LSL	R4, R6, R3
0x036A	0x683B    LDR	R3, [R7, #0]
0x036C	0x4323    ORRS	R3, R4
0x036E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x0370	0xF008030C  AND	R3, R8, #12
0x0374	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x0376	0xF2070508  ADDW	R5, R7, #8
0x037A	0xEA4F044A  LSL	R4, R10, #1
0x037E	0xF04F0303  MOV	R3, #3
0x0382	0x40A3    LSLS	R3, R4
0x0384	0x43DC    MVN	R4, R3
0x0386	0x682B    LDR	R3, [R5, #0]
0x0388	0x4023    ANDS	R3, R4
0x038A	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x038C	0xF2070508  ADDW	R5, R7, #8
0x0390	0xEA4F034A  LSL	R3, R10, #1
0x0394	0xFA02F403  LSL	R4, R2, R3
0x0398	0x682B    LDR	R3, [R5, #0]
0x039A	0x4323    ORRS	R3, R4
0x039C	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x039E	0x1D3D    ADDS	R5, R7, #4
0x03A0	0xFA1FF48A  UXTH	R4, R10
0x03A4	0xF04F0301  MOV	R3, #1
0x03A8	0x40A3    LSLS	R3, R4
0x03AA	0x43DC    MVN	R4, R3
0x03AC	0x682B    LDR	R3, [R5, #0]
0x03AE	0x4023    ANDS	R3, R4
0x03B0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x03B2	0x1D3D    ADDS	R5, R7, #4
0x03B4	0xFA1FF48A  UXTH	R4, R10
0x03B8	0xB28B    UXTH	R3, R1
0x03BA	0xFA03F404  LSL	R4, R3, R4
0x03BE	0xB2A4    UXTH	R4, R4
0x03C0	0x682B    LDR	R3, [R5, #0]
0x03C2	0x4323    ORRS	R3, R4
0x03C4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x03C6	0xF207050C  ADDW	R5, R7, #12
0x03CA	0xFA1FF38A  UXTH	R3, R10
0x03CE	0x005C    LSLS	R4, R3, #1
0x03D0	0xB2A4    UXTH	R4, R4
0x03D2	0xF04F0303  MOV	R3, #3
0x03D6	0x40A3    LSLS	R3, R4
0x03D8	0x43DC    MVN	R4, R3
0x03DA	0x682B    LDR	R3, [R5, #0]
0x03DC	0x4023    ANDS	R3, R4
0x03DE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x03E0	0xF207050C  ADDW	R5, R7, #12
0x03E4	0xEA4F034A  LSL	R3, R10, #1
0x03E8	0xFA00F403  LSL	R4, R0, R3
0x03EC	0x682B    LDR	R3, [R5, #0]
0x03EE	0x4323    ORRS	R3, R4
0x03F0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x03F2	0xF0080308  AND	R3, R8, #8
0x03F6	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x03F8	0xF4080370  AND	R3, R8, #15728640
0x03FC	0x0D1B    LSRS	R3, R3, #20
0x03FE	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x0402	0xF1BA0F07  CMP	R10, #7
0x0406	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x0408	0xF2070324  ADDW	R3, R7, #36
0x040C	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x040E	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x0412	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x0414	0xF2070320  ADDW	R3, R7, #32
0x0418	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x041A	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x041C	0x00AC    LSLS	R4, R5, #2
0x041E	0xF04F030F  MOV	R3, #15
0x0422	0x40A3    LSLS	R3, R4
0x0424	0x43DC    MVN	R4, R3
0x0426	0x9B02    LDR	R3, [SP, #8]
0x0428	0x681B    LDR	R3, [R3, #0]
0x042A	0xEA030404  AND	R4, R3, R4, LSL #0
0x042E	0x9B02    LDR	R3, [SP, #8]
0x0430	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x0432	0xF89D400C  LDRB	R4, [SP, #12]
0x0436	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x0438	0x409C    LSLS	R4, R3
0x043A	0x9B02    LDR	R3, [SP, #8]
0x043C	0x681B    LDR	R3, [R3, #0]
0x043E	0xEA430404  ORR	R4, R3, R4, LSL #0
0x0442	0x9B02    LDR	R3, [SP, #8]
0x0444	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x0446	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x044A	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x044C	0xF8DDE000  LDR	LR, [SP, #0]
0x0450	0xB004    ADD	SP, SP, #16
0x0452	0x4770    BX	LR
0x0454	0xFC00FFFF  	#-1024
0x0458	0x0000FFFF  	#-65536
0x045C	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x018A	0x491E    LDR	R1, [PC, #120]
0x018C	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0190	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x0192	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0194	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0196	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x0198	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x019A	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x019C	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x019E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x01A0	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x01A2	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x01A4	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x01A6	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x01A8	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x01AA	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x01AC	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x01AE	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x01B0	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x01B2	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x01B4	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x01B6	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x01BA	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x01BC	0x4912    LDR	R1, [PC, #72]
0x01BE	0x4288    CMP	R0, R1
0x01C0	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x01C2	0x4912    LDR	R1, [PC, #72]
0x01C4	0x4288    CMP	R0, R1
0x01C6	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x01C8	0x4911    LDR	R1, [PC, #68]
0x01CA	0x4288    CMP	R0, R1
0x01CC	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x01CE	0x4911    LDR	R1, [PC, #68]
0x01D0	0x4288    CMP	R0, R1
0x01D2	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x01D4	0x4910    LDR	R1, [PC, #64]
0x01D6	0x4288    CMP	R0, R1
0x01D8	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x01DA	0x4910    LDR	R1, [PC, #64]
0x01DC	0x4288    CMP	R0, R1
0x01DE	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x01E0	0x490F    LDR	R1, [PC, #60]
0x01E2	0x4288    CMP	R0, R1
0x01E4	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x01E6	0x490F    LDR	R1, [PC, #60]
0x01E8	0x4288    CMP	R0, R1
0x01EA	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x01EC	0x490E    LDR	R1, [PC, #56]
0x01EE	0x4288    CMP	R0, R1
0x01F0	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01F2	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x01F4	0x490D    LDR	R1, [PC, #52]
0x01F6	0x6809    LDR	R1, [R1, #0]
0x01F8	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01FC	0x490B    LDR	R1, [PC, #44]
0x01FE	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x0200	0xB001    ADD	SP, SP, #4
0x0202	0x4770    BX	LR
0x0204	0xFC00FFFF  	#-1024
0x0208	0x00004002  	#1073872896
0x020C	0x04004002  	#1073873920
0x0210	0x08004002  	#1073874944
0x0214	0x0C004002  	#1073875968
0x0218	0x10004002  	#1073876992
0x021C	0x14004002  	#1073878016
0x0220	0x18004002  	#1073879040
0x0224	0x1C004002  	#1073880064
0x0228	0x20004002  	#1073881088
0x022C	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_UART_Write_Text:
;__Lib_UART_123_45_6.c, 476 :: 		
; uart_text start address is: 0 (R0)
0x0F28	0xB083    SUB	SP, SP, #12
0x0F2A	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 477 :: 		
; counter start address is: 8 (R2)
0x0F2E	0x2200    MOVS	R2, #0
;__Lib_UART_123_45_6.c, 479 :: 		
0x0F30	0x7801    LDRB	R1, [R0, #0]
; data_ start address is: 12 (R3)
0x0F32	0xB2CB    UXTB	R3, R1
; data_ end address is: 12 (R3)
; counter end address is: 8 (R2)
0x0F34	0xB2D9    UXTB	R1, R3
;__Lib_UART_123_45_6.c, 480 :: 		
L_UART_Write_Text27:
; data_ start address is: 4 (R1)
; counter start address is: 8 (R2)
; uart_text start address is: 0 (R0)
; uart_text end address is: 0 (R0)
0x0F36	0xB171    CBZ	R1, L_UART_Write_Text28
; uart_text end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 481 :: 		
; uart_text start address is: 0 (R0)
0x0F38	0x9001    STR	R0, [SP, #4]
; data_ end address is: 4 (R1)
0x0F3A	0xF88D2008  STRB	R2, [SP, #8]
0x0F3E	0xB2C8    UXTB	R0, R1
0x0F40	0xF7FFFBDC  BL	_UART_Write+0
0x0F44	0xF89D2008  LDRB	R2, [SP, #8]
0x0F48	0x9801    LDR	R0, [SP, #4]
;__Lib_UART_123_45_6.c, 482 :: 		
0x0F4A	0x1C51    ADDS	R1, R2, #1
0x0F4C	0xB2C9    UXTB	R1, R1
0x0F4E	0xB2CA    UXTB	R2, R1
;__Lib_UART_123_45_6.c, 483 :: 		
0x0F50	0x1841    ADDS	R1, R0, R1
0x0F52	0x7809    LDRB	R1, [R1, #0]
; data_ start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 484 :: 		
; uart_text end address is: 0 (R0)
; counter end address is: 8 (R2)
; data_ end address is: 4 (R1)
0x0F54	0xE7EF    B	L_UART_Write_Text27
L_UART_Write_Text28:
;__Lib_UART_123_45_6.c, 485 :: 		
L_end_UART_Write_Text:
0x0F56	0xF8DDE000  LDR	LR, [SP, #0]
0x0F5A	0xB003    ADD	SP, SP, #12
0x0F5C	0x4770    BX	LR
; end of _UART_Write_Text
_UART_Write:
;__Lib_UART_123_45_6.c, 472 :: 		
; _data start address is: 0 (R0)
0x06FC	0xB081    SUB	SP, SP, #4
0x06FE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 473 :: 		
; _data end address is: 0 (R0)
0x0702	0x4C03    LDR	R4, [PC, #12]
0x0704	0x6824    LDR	R4, [R4, #0]
0x0706	0x47A0    BLX	R4
;__Lib_UART_123_45_6.c, 474 :: 		
L_end_UART_Write:
0x0708	0xF8DDE000  LDR	LR, [SP, #0]
0x070C	0xB001    ADD	SP, SP, #4
0x070E	0x4770    BX	LR
0x0710	0x02302000  	_UART_Wr_Ptr+0
; end of _UART_Write
_UART1_Write:
;__Lib_UART_123_45_6.c, 41 :: 		
; _data start address is: 0 (R0)
0x0588	0xB081    SUB	SP, SP, #4
0x058A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 42 :: 		
0x058E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0590	0x4803    LDR	R0, [PC, #12]
0x0592	0xF7FFFFE9  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 43 :: 		
L_end_UART1_Write:
0x0596	0xF8DDE000  LDR	LR, [SP, #0]
0x059A	0xB001    ADD	SP, SP, #4
0x059C	0x4770    BX	LR
0x059E	0xBF00    NOP
0x05A0	0x10004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0568	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x056A	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x056E	0x4601    MOV	R1, R0
0x0570	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x0574	0x680B    LDR	R3, [R1, #0]
0x0576	0xF3C312C0  UBFX	R2, R3, #7, #1
0x057A	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x057C	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x057E	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0580	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x0582	0xB001    ADD	SP, SP, #4
0x0584	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45_6.c, 45 :: 		
; _data start address is: 0 (R0)
0x067C	0xB081    SUB	SP, SP, #4
0x067E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 46 :: 		
0x0682	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0684	0x4803    LDR	R0, [PC, #12]
0x0686	0xF7FFFF6F  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 47 :: 		
L_end_UART2_Write:
0x068A	0xF8DDE000  LDR	LR, [SP, #0]
0x068E	0xB001    ADD	SP, SP, #4
0x0690	0x4770    BX	LR
0x0692	0xBF00    NOP
0x0694	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45_6.c, 49 :: 		
; _data start address is: 0 (R0)
0x05C0	0xB081    SUB	SP, SP, #4
0x05C2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 50 :: 		
0x05C6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x05C8	0x4803    LDR	R0, [PC, #12]
0x05CA	0xF7FFFFCD  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 51 :: 		
L_end_UART3_Write:
0x05CE	0xF8DDE000  LDR	LR, [SP, #0]
0x05D2	0xB001    ADD	SP, SP, #4
0x05D4	0x4770    BX	LR
0x05D6	0xBF00    NOP
0x05D8	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45_6.c, 53 :: 		
; _data start address is: 0 (R0)
0x05DC	0xB081    SUB	SP, SP, #4
0x05DE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 54 :: 		
0x05E2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x05E4	0x4803    LDR	R0, [PC, #12]
0x05E6	0xF7FFFFBF  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 55 :: 		
L_end_UART4_Write:
0x05EA	0xF8DDE000  LDR	LR, [SP, #0]
0x05EE	0xB001    ADD	SP, SP, #4
0x05F0	0x4770    BX	LR
0x05F2	0xBF00    NOP
0x05F4	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45_6.c, 57 :: 		
; _data start address is: 0 (R0)
0x05A4	0xB081    SUB	SP, SP, #4
0x05A6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 58 :: 		
0x05AA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x05AC	0x4803    LDR	R0, [PC, #12]
0x05AE	0xF7FFFFDB  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 59 :: 		
L_end_UART5_Write:
0x05B2	0xF8DDE000  LDR	LR, [SP, #0]
0x05B6	0xB001    ADD	SP, SP, #4
0x05B8	0x4770    BX	LR
0x05BA	0xBF00    NOP
0x05BC	0x50004000  	UART5_SR+0
; end of _UART5_Write
_UART6_Write:
;__Lib_UART_123_45_6.c, 61 :: 		
; _data start address is: 0 (R0)
0x06E0	0xB081    SUB	SP, SP, #4
0x06E2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 62 :: 		
0x06E6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x06E8	0x4803    LDR	R0, [PC, #12]
0x06EA	0xF7FFFF3D  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 63 :: 		
L_end_UART6_Write:
0x06EE	0xF8DDE000  LDR	LR, [SP, #0]
0x06F2	0xB001    ADD	SP, SP, #4
0x06F4	0x4770    BX	LR
0x06F6	0xBF00    NOP
0x06F8	0x14004001  	USART6_SR+0
; end of _UART6_Write
_init_GPIO:
;Input Capture Four Channel Demo.c, 188 :: 		void init_GPIO() {
0x11D8	0xB081    SUB	SP, SP, #4
0x11DA	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Four Channel Demo.c, 191 :: 		GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 | _GPIO_PINMASK_5 | _GPIO_PINMASK_6 | _GPIO_PINMASK_7);
0x11DE	0x21F0    MOVS	R1, #240
0x11E0	0x4805    LDR	R0, [PC, #20]
0x11E2	0xF7FFFE87  BL	_GPIO_Digital_Input+0
;Input Capture Four Channel Demo.c, 192 :: 		GPIO_Digital_Output(&GPIOD_Base, _GPIO_PINMASK_1);                          // **DEBUG** For timing interrupt handler
0x11E6	0xF2400102  MOVW	R1, #2
0x11EA	0x4804    LDR	R0, [PC, #16]
0x11EC	0xF7FFFE8E  BL	_GPIO_Digital_Output+0
;Input Capture Four Channel Demo.c, 193 :: 		}
L_end_init_GPIO:
0x11F0	0xF8DDE000  LDR	LR, [SP, #0]
0x11F4	0xB001    ADD	SP, SP, #4
0x11F6	0x4770    BX	LR
0x11F8	0x00004002  	GPIOA_BASE+0
0x11FC	0x0C004002  	GPIOD_BASE+0
; end of _init_GPIO
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0EF4	0xB081    SUB	SP, SP, #4
0x0EF6	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0x0EFA	0xF04F0242  MOV	R2, #66
0x0EFE	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0F00	0xF7FFF996  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0x0F04	0xF8DDE000  LDR	LR, [SP, #0]
0x0F08	0xB001    ADD	SP, SP, #4
0x0F0A	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0F0C	0xB081    SUB	SP, SP, #4
0x0F0E	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x0F12	0x4A04    LDR	R2, [PC, #16]
0x0F14	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0F16	0xF7FFF98B  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x0F1A	0xF8DDE000  LDR	LR, [SP, #0]
0x0F1E	0xB001    ADD	SP, SP, #4
0x0F20	0x4770    BX	LR
0x0F22	0xBF00    NOP
0x0F24	0x00140008  	#524308
; end of _GPIO_Digital_Output
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x113C	0xB081    SUB	SP, SP, #4
0x113E	0x9100    STR	R1, [SP, #0]
0x1140	0x4601    MOV	R1, R0
0x1142	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x1144	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x1146	0x461C    MOV	R4, R3
0x1148	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x114A	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x114C	0x4603    MOV	R3, R0
0x114E	0x1C42    ADDS	R2, R0, #1
0x1150	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x1152	0x781A    LDRB	R2, [R3, #0]
0x1154	0x7022    STRB	R2, [R4, #0]
0x1156	0x7822    LDRB	R2, [R4, #0]
0x1158	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x115A	0x462B    MOV	R3, R5
0x115C	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x115E	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x1160	0xB001    ADD	SP, SP, #4
0x1162	0x4770    BX	LR
; end of _strcpy
_UART1_Write_Text:
;__Lib_UART_123_45_6.c, 78 :: 		
; uart_text start address is: 0 (R0)
0x11BC	0xB081    SUB	SP, SP, #4
0x11BE	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 79 :: 		
0x11C2	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x11C4	0x4803    LDR	R0, [PC, #12]
0x11C6	0xF7FFFD37  BL	__Lib_UART_123_45_6_UARTx_Write_Text+0
;__Lib_UART_123_45_6.c, 80 :: 		
L_end_UART1_Write_Text:
0x11CA	0xF8DDE000  LDR	LR, [SP, #0]
0x11CE	0xB001    ADD	SP, SP, #4
0x11D0	0x4770    BX	LR
0x11D2	0xBF00    NOP
0x11D4	0x10004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_6_UARTx_Write_Text:
;__Lib_UART_123_45_6.c, 67 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0C38	0xB081    SUB	SP, SP, #4
0x0C3A	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 68 :: 		
; counter start address is: 24 (R6)
0x0C3E	0x2600    MOVS	R6, #0
;__Lib_UART_123_45_6.c, 70 :: 		
0x0C40	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x0C42	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x0C44	0x4605    MOV	R5, R0
0x0C46	0xB2D8    UXTB	R0, R3
0x0C48	0x460C    MOV	R4, R1
;__Lib_UART_123_45_6.c, 71 :: 		
L___Lib_UART_123_45_6_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x0C4A	0xB150    CBZ	R0, L___Lib_UART_123_45_6_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45_6.c, 72 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x0C4C	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x0C4E	0x4628    MOV	R0, R5
0x0C50	0xF7FFFC8A  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 73 :: 		
0x0C54	0x1C72    ADDS	R2, R6, #1
0x0C56	0xB2D2    UXTB	R2, R2
0x0C58	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45_6.c, 74 :: 		
0x0C5A	0x18A2    ADDS	R2, R4, R2
0x0C5C	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x0C5E	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45_6.c, 75 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x0C60	0xE7F3    B	L___Lib_UART_123_45_6_UARTx_Write_Text2
L___Lib_UART_123_45_6_UARTx_Write_Text3:
;__Lib_UART_123_45_6.c, 76 :: 		
L_end_UARTx_Write_Text:
0x0C62	0xF8DDE000  LDR	LR, [SP, #0]
0x0C66	0xB001    ADD	SP, SP, #4
0x0C68	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write_Text
_init_timer3:
;Input Capture Four Channel Demo.c, 262 :: 		void init_timer3() {
0x1164	0xB081    SUB	SP, SP, #4
0x1166	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Four Channel Demo.c, 264 :: 		RCC_APB1ENR.TIM3EN = 1;                                                     // Enable clock for timer 3
0x116A	0x2101    MOVS	R1, #1
0x116C	0xB249    SXTB	R1, R1
0x116E	0x480E    LDR	R0, [PC, #56]
0x1170	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 265 :: 		TIM3_CR1.CEN = 0;                                                           // Disable timer/counter
0x1172	0x2100    MOVS	R1, #0
0x1174	0xB249    SXTB	R1, R1
0x1176	0x480D    LDR	R0, [PC, #52]
0x1178	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 266 :: 		TIM3_PSC = 279;                                                             // Set timer 3 prescaler
0x117A	0xF2401117  MOVW	R1, #279
0x117E	0x480C    LDR	R0, [PC, #48]
0x1180	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 267 :: 		TIM3_ARR = 59999;                                                           // Set timer 3 overflow value
0x1182	0xF64E215F  MOVW	R1, #59999
0x1186	0x480B    LDR	R0, [PC, #44]
0x1188	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 268 :: 		NVIC_IntEnable(IVT_INT_TIM3);                                               // Enable timer 3 interrupt
0x118A	0xF240002D  MOVW	R0, #45
0x118E	0xF7FFFC71  BL	_NVIC_IntEnable+0
;Input Capture Four Channel Demo.c, 269 :: 		TIM3_DIER.UIE = 1;                                                          // Timer 3 update interrupt enable
0x1192	0x2101    MOVS	R1, #1
0x1194	0xB249    SXTB	R1, R1
0x1196	0x4808    LDR	R0, [PC, #32]
0x1198	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 270 :: 		TIM3_CR1.CEN = 1;                                                           // Enable timer/counter
0x119A	0x4804    LDR	R0, [PC, #16]
0x119C	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 271 :: 		}
L_end_init_timer3:
0x119E	0xF8DDE000  LDR	LR, [SP, #0]
0x11A2	0xB001    ADD	SP, SP, #4
0x11A4	0x4770    BX	LR
0x11A6	0xBF00    NOP
0x11A8	0x08044247  	RCC_APB1ENR+0
0x11AC	0x80004200  	TIM3_CR1+0
0x11B0	0x04284000  	TIM3_PSC+0
0x11B4	0x042C4000  	TIM3_ARR+0
0x11B8	0x81804200  	TIM3_DIER+0
; end of _init_timer3
_NVIC_IntEnable:
;__Lib_System_4XX.c, 171 :: 		
; ivt start address is: 0 (R0)
0x0A74	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_4XX.c, 183 :: 		
0x0A76	0x2804    CMP	R0, #4
0x0A78	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 188 :: 		
0x0A7A	0x4919    LDR	R1, [PC, #100]
0x0A7C	0x6809    LDR	R1, [R1, #0]
0x0A7E	0xF4413280  ORR	R2, R1, #65536
0x0A82	0x4917    LDR	R1, [PC, #92]
0x0A84	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 189 :: 		
0x0A86	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_4XX.c, 190 :: 		
; ivt start address is: 0 (R0)
0x0A88	0x2805    CMP	R0, #5
0x0A8A	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 195 :: 		
0x0A8C	0x4914    LDR	R1, [PC, #80]
0x0A8E	0x6809    LDR	R1, [R1, #0]
0x0A90	0xF4413200  ORR	R2, R1, #131072
0x0A94	0x4912    LDR	R1, [PC, #72]
0x0A96	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 196 :: 		
0x0A98	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_4XX.c, 197 :: 		
; ivt start address is: 0 (R0)
0x0A9A	0x2806    CMP	R0, #6
0x0A9C	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 202 :: 		
0x0A9E	0x4910    LDR	R1, [PC, #64]
0x0AA0	0x6809    LDR	R1, [R1, #0]
0x0AA2	0xF4412280  ORR	R2, R1, #262144
0x0AA6	0x490E    LDR	R1, [PC, #56]
0x0AA8	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 203 :: 		
0x0AAA	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_4XX.c, 204 :: 		
; ivt start address is: 0 (R0)
0x0AAC	0x280F    CMP	R0, #15
0x0AAE	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_4XX.c, 209 :: 		
0x0AB0	0x490C    LDR	R1, [PC, #48]
0x0AB2	0x6809    LDR	R1, [R1, #0]
0x0AB4	0xF0410202  ORR	R2, R1, #2
0x0AB8	0x490A    LDR	R1, [PC, #40]
0x0ABA	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 210 :: 		
0x0ABC	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_4XX.c, 211 :: 		
; ivt start address is: 0 (R0)
0x0ABE	0x2810    CMP	R0, #16
0x0AC0	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_4XX.c, 216 :: 		
0x0AC2	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x0AC6	0x0961    LSRS	R1, R4, #5
0x0AC8	0x008A    LSLS	R2, R1, #2
0x0ACA	0x4907    LDR	R1, [PC, #28]
0x0ACC	0x188B    ADDS	R3, R1, R2
;__Lib_System_4XX.c, 217 :: 		
0x0ACE	0xF004021F  AND	R2, R4, #31
0x0AD2	0xF04F0101  MOV	R1, #1
0x0AD6	0x4091    LSLS	R1, R2
0x0AD8	0x6019    STR	R1, [R3, #0]
;__Lib_System_4XX.c, 218 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_4XX.c, 219 :: 		
L_end_NVIC_IntEnable:
0x0ADA	0xB001    ADD	SP, SP, #4
0x0ADC	0x4770    BX	LR
0x0ADE	0xBF00    NOP
0x0AE0	0xED24E000  	SCB_SHCRS+0
0x0AE4	0xE010E000  	STK_CTRL+0
0x0AE8	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_init_input_capture:
;Input Capture Four Channel Demo.c, 208 :: 		void init_input_capture() {
0x1318	0xB085    SUB	SP, SP, #20
0x131A	0xF8CDE000  STR	LR, [SP, #0]
;Input Capture Four Channel Demo.c, 211 :: 		RCC_APB1ENR.TIM2EN = 1;                                                 // Enable clock gating for timer module 2
0x131E	0x2101    MOVS	R1, #1
0x1320	0xB249    SXTB	R1, R1
0x1322	0x484D    LDR	R0, [PC, #308]
0x1324	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 212 :: 		TIM2_CR1.CEN = 0;                                                       // Disable timer/counter
0x1326	0x2100    MOVS	R1, #0
0x1328	0xB249    SXTB	R1, R1
0x132A	0x484C    LDR	R0, [PC, #304]
0x132C	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 213 :: 		TIM2_CR2.TI1S = 0;                                                      // TIM2_CH1 connected to TI1 Input (1 would be Ch1, 2, 3 XOR to TI1)
0x132E	0x484C    LDR	R0, [PC, #304]
0x1330	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 214 :: 		TIM2_PSC = ENCODER_TIM_PSC;                                             // Set timer 2 prescaler
0x1332	0x484C    LDR	R0, [PC, #304]
0x1334	0x9003    STR	R0, [SP, #12]
0x1336	0x8801    LDRH	R1, [R0, #0]
0x1338	0x484B    LDR	R0, [PC, #300]
0x133A	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 215 :: 		TIM2_ARR = ENCODER_TIM_RELOAD;                                          // Set timer 2 Auto Reload value
0x133C	0x484B    LDR	R0, [PC, #300]
0x133E	0x6801    LDR	R1, [R0, #0]
0x1340	0x484B    LDR	R0, [PC, #300]
0x1342	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 216 :: 		TIM2_CR1 |= 0x10;                                                       // Set counter direction as upcounting (DIR bit)
0x1344	0x484B    LDR	R0, [PC, #300]
0x1346	0x6800    LDR	R0, [R0, #0]
0x1348	0xF0400110  ORR	R1, R0, #16
0x134C	0x4849    LDR	R0, [PC, #292]
0x134E	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 219 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM2_CH1_PA0);             // Configure alternate function for A0 as Timer 2 Channel 1
0x1350	0x4849    LDR	R0, [PC, #292]
0x1352	0xF7FFF9A1  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 220 :: 		TIM2_CCMR1_Input |= 0x01;                                               // Set capture channel 1 as input on TI1 (CC1S = 01)
0x1356	0x4849    LDR	R0, [PC, #292]
0x1358	0x6800    LDR	R0, [R0, #0]
0x135A	0xF0400101  ORR	R1, R0, #1
0x135E	0x4847    LDR	R0, [PC, #284]
0x1360	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 221 :: 		TIM2_CCER.CC1P = 0;                                                     // Set capture on rising edge event
0x1362	0x2100    MOVS	R1, #0
0x1364	0xB249    SXTB	R1, R1
0x1366	0x4846    LDR	R0, [PC, #280]
0x1368	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 222 :: 		TIM2_CCER.CC1NP = 0;
0x136A	0x4846    LDR	R0, [PC, #280]
0x136C	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 223 :: 		TIM2_CCER.CC1E = 1;                                                     // Enable capture on channel 1
0x136E	0x2101    MOVS	R1, #1
0x1370	0xB249    SXTB	R1, R1
0x1372	0x4845    LDR	R0, [PC, #276]
0x1374	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 224 :: 		TIM2_DIER.CC1IE = 1;                                                    // Enable interrupt on capture channel 1
0x1376	0x4845    LDR	R0, [PC, #276]
0x1378	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 227 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM2_CH2_PA1);             // Configure alternate function for pin A1 as Timer 2 Channel 2
0x137A	0x4845    LDR	R0, [PC, #276]
0x137C	0xF7FFF98C  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 228 :: 		TIM2_CCMR1_Input |= 0x100;                                              // Set capture channel 2 as input on TI2 (CC2S = 01)
0x1380	0x483E    LDR	R0, [PC, #248]
0x1382	0x6800    LDR	R0, [R0, #0]
0x1384	0xF4407180  ORR	R1, R0, #256
0x1388	0x483C    LDR	R0, [PC, #240]
0x138A	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 229 :: 		TIM2_CCER.CC2P = 0;                                                     // Set capture on rising edge event
0x138C	0x2100    MOVS	R1, #0
0x138E	0xB249    SXTB	R1, R1
0x1390	0x4840    LDR	R0, [PC, #256]
0x1392	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 230 :: 		TIM2_CCER.CC2NP = 0;
0x1394	0x4840    LDR	R0, [PC, #256]
0x1396	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 231 :: 		TIM2_CCER.CC2E = 1;                                                     // Enable capture on channel 2
0x1398	0x2101    MOVS	R1, #1
0x139A	0xB249    SXTB	R1, R1
0x139C	0x483F    LDR	R0, [PC, #252]
0x139E	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 232 :: 		TIM2_DIER.CC2IE = 1;                                                    // Enable interrupt on capture channel 2
0x13A0	0x483F    LDR	R0, [PC, #252]
0x13A2	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 235 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM2_CH3_PA2);             // Configure alternate function for pin A2 as Timer 2 Channel 3
0x13A4	0x483F    LDR	R0, [PC, #252]
0x13A6	0xF7FFF977  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 236 :: 		TIM2_CCMR2_Input |= 0x01;                                               // Set capture channel 3 as input on TI3 (CC3S = 01)
0x13AA	0x483F    LDR	R0, [PC, #252]
0x13AC	0x6800    LDR	R0, [R0, #0]
0x13AE	0xF0400101  ORR	R1, R0, #1
0x13B2	0x483D    LDR	R0, [PC, #244]
0x13B4	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 237 :: 		TIM2_CCER.CC3P = 0;                                                     // Set capture on rising edge event
0x13B6	0x2100    MOVS	R1, #0
0x13B8	0xB249    SXTB	R1, R1
0x13BA	0x483C    LDR	R0, [PC, #240]
0x13BC	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 238 :: 		TIM2_CCER.CC3NP = 0;
0x13BE	0x483C    LDR	R0, [PC, #240]
0x13C0	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 239 :: 		TIM2_CCER.CC3E = 1;                                                     // Enable capture on channel 2
0x13C2	0x2101    MOVS	R1, #1
0x13C4	0xB249    SXTB	R1, R1
0x13C6	0x483B    LDR	R0, [PC, #236]
0x13C8	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 240 :: 		TIM2_DIER.CC3IE = 1;                                                    // Enable interrupt on capture channel 3
0x13CA	0x483B    LDR	R0, [PC, #236]
0x13CC	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 243 :: 		GPIO_Alternate_Function_Enable(&_GPIO_MODULE_TIM2_CH4_PA3);             // Configure alternate function for pin A3 as Timer 2 Channel 4
0x13CE	0x483B    LDR	R0, [PC, #236]
0x13D0	0xF7FFF962  BL	_GPIO_Alternate_Function_Enable+0
;Input Capture Four Channel Demo.c, 244 :: 		TIM2_CCMR2_Input |= 0x100;                                              // Set capture channel 4 as input on TI4 (CC4S = 01)
0x13D4	0x4834    LDR	R0, [PC, #208]
0x13D6	0x6800    LDR	R0, [R0, #0]
0x13D8	0xF4407180  ORR	R1, R0, #256
0x13DC	0x4832    LDR	R0, [PC, #200]
0x13DE	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 245 :: 		TIM2_CCER.CC3P = 0;                                                     // Set capture on rising edge event
0x13E0	0x2100    MOVS	R1, #0
0x13E2	0xB249    SXTB	R1, R1
0x13E4	0x4831    LDR	R0, [PC, #196]
0x13E6	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 246 :: 		TIM2_CCER.CC3NP = 0;
0x13E8	0x4831    LDR	R0, [PC, #196]
0x13EA	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 247 :: 		TIM2_CCER.CC4E = 1;                                                     // Enable capture on channel 2
0x13EC	0x2101    MOVS	R1, #1
0x13EE	0xB249    SXTB	R1, R1
0x13F0	0x4833    LDR	R0, [PC, #204]
0x13F2	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 248 :: 		TIM2_DIER.CC4IE = 1;                                                    // Enable interrupt on capture channel 4
0x13F4	0x4833    LDR	R0, [PC, #204]
0x13F6	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 251 :: 		TIM2_DIER.UIE = 1;                                                      // Enable overflow interrupt
0x13F8	0x4833    LDR	R0, [PC, #204]
0x13FA	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 252 :: 		NVIC_IntEnable(IVT_INT_TIM2);                                           // Enable timer 2 interrupt
0x13FC	0xF240002C  MOVW	R0, #44
0x1400	0xF7FFFB38  BL	_NVIC_IntEnable+0
;Input Capture Four Channel Demo.c, 253 :: 		TIM2_CR1.CEN = 1;                                                       // Enable timer/counter
0x1404	0x2101    MOVS	R1, #1
0x1406	0xB249    SXTB	R1, R1
0x1408	0x4814    LDR	R0, [PC, #80]
0x140A	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 256 :: 		timer2_period_ms = (long double) 1000.0 / (MCU_FREQUENCY / (ENCODER_TIM_PSC + 1));
0x140C	0x9803    LDR	R0, [SP, #12]
0x140E	0x8800    LDRH	R0, [R0, #0]
0x1410	0x1C41    ADDS	R1, R0, #1
0x1412	0xB289    UXTH	R1, R1
0x1414	0x482D    LDR	R0, [PC, #180]
0x1416	0x6800    LDR	R0, [R0, #0]
0x1418	0xFBB0F0F1  UDIV	R0, R0, R1
0x141C	0xF7FFFB16  BL	__UnsignedIntegralToLongDouble+0
0x1420	0xE9CD0103  STRD	R0, R1, [SP, #12]
0x1424	0xF04F0000  MOV	R0, #0
0x1428	0x4929    LDR	R1, [PC, #164]
0x142A	0xEE000A10  VMOV	S0, R0
0x142E	0xEE001A90  VMOV	S1, R1
0x1432	0xE9CD2301  STRD	R2, R3, [SP, #4]
0x1436	0xE9DD2303  LDRD	R2, R3, [SP, #12]
0x143A	0xEE100A10  VMOV	R0, S0
0x143E	0xEE101A90  VMOV	R1, S1
0x1442	0xF7FFFB53  BL	__Div_DP+0
0x1446	0xE9DD2301  LDRD	R2, R3, [SP, #4]
0x144A	0x4A22    LDR	R2, [PC, #136]
0x144C	0xE9C20100  STRD	R0, R1, [R2, #0]
;Input Capture Four Channel Demo.c, 257 :: 		}
L_end_init_input_capture:
0x1450	0xF8DDE000  LDR	LR, [SP, #0]
0x1454	0xB005    ADD	SP, SP, #20
0x1456	0x4770    BX	LR
0x1458	0x08004247  	RCC_APB1ENR+0
0x145C	0x00004200  	TIM2_CR1+0
0x1460	0x009C4200  	TIM2_CR2+0
0x1464	0x00E42000  	_ENCODER_TIM_PSC+0
0x1468	0x00284000  	TIM2_PSC+0
0x146C	0x00002000  	_ENCODER_TIM_RELOAD+0
0x1470	0x002C4000  	TIM2_ARR+0
0x1474	0x00004000  	TIM2_CR1+0
0x1478	0x1CD40000  	__GPIO_MODULE_TIM2_CH1_PA0+0
0x147C	0x00184000  	TIM2_CCMR1_Input+0
0x1480	0x04044200  	TIM2_CCER+0
0x1484	0x040C4200  	TIM2_CCER+0
0x1488	0x04004200  	TIM2_CCER+0
0x148C	0x01844200  	TIM2_DIER+0
0x1490	0x1D400000  	__GPIO_MODULE_TIM2_CH2_PA1+0
0x1494	0x04144200  	TIM2_CCER+0
0x1498	0x041C4200  	TIM2_CCER+0
0x149C	0x04104200  	TIM2_CCER+0
0x14A0	0x01884200  	TIM2_DIER+0
0x14A4	0x1DAC0000  	__GPIO_MODULE_TIM2_CH3_PA2+0
0x14A8	0x001C4000  	TIM2_CCMR2_Input+0
0x14AC	0x04244200  	TIM2_CCER+0
0x14B0	0x042C4200  	TIM2_CCER+0
0x14B4	0x04204200  	TIM2_CCER+0
0x14B8	0x018C4200  	TIM2_DIER+0
0x14BC	0x1BFC0000  	__GPIO_MODULE_TIM2_CH4_PA3+0
0x14C0	0x04304200  	TIM2_CCER+0
0x14C4	0x01904200  	TIM2_DIER+0
0x14C8	0x01804200  	TIM2_DIER+0
0x14CC	0x00E82000  	_MCU_FREQUENCY+0
0x14D0	0x4000408F  	#1083129856
0x14D4	0x00FC2000  	_timer2_period_ms+0
; end of _init_input_capture
__UnsignedIntegralToLongDouble:
;__Lib_MathDouble.c, 295 :: 		
0x0A4C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 297 :: 		
0x0A4E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 298 :: 		
0x0A50	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 299 :: 		
0x0A52	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 301 :: 		
0x0A56	0xE00A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 303 :: 		
0x0A58	0x0001    MOVS	R1, R0
;__Lib_MathDouble.c, 304 :: 		
0x0A5A	0x211F    MOVS	R1, #31
;__Lib_MathDouble.c, 305 :: 		
0x0A5C	0xF5116180  ADDS	R1, R1, #1024
;__Lib_MathDouble.c, 307 :: 		
__me_loop:
0x0A60	0x1E49    SUBS	R1, R1, #1
;__Lib_MathDouble.c, 308 :: 		
0x0A62	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 311 :: 		
0x0A64	0xD3FC    BCC	__me_loop
;__Lib_MathDouble.c, 313 :: 		
0x0A66	0x0509    LSLS	R1, R1, #20
;__Lib_MathDouble.c, 314 :: 		
0x0A68	0xEA413110  ORR	R1, R1, R0, LSR #12
;__Lib_MathDouble.c, 315 :: 		
0x0A6C	0x0500    LSLS	R0, R0, #20
;__Lib_MathDouble.c, 316 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 319 :: 		
L_end__UnsignedIntegralToLongDouble:
0x0A6E	0xB001    ADD	SP, SP, #4
0x0A70	0x4770    BX	LR
; end of __UnsignedIntegralToLongDouble
__Div_DP:
;__Lib_MathDouble.c, 1385 :: 		
0x0AEC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1387 :: 		
0x0AEE	0xE92D41FC  PUSH	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1389 :: 		
0x0AF2	0xEA910803  EORS	R8, R1, R3, LSL #0
;__Lib_MathDouble.c, 1390 :: 		
0x0AF6	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1391 :: 		
0x0AF8	0xF04F4800  MOVMI	R8, #-2147483648
;__Lib_MathDouble.c, 1392 :: 		
0x0AFC	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 1394 :: 		
0x0B00	0xEA4F3503  LSL	R5, R3, #12
;__Lib_MathDouble.c, 1395 :: 		
0x0B04	0xEA4F3515  LSR	R5, R5, #12
;__Lib_MathDouble.c, 1396 :: 		
0x0B08	0x0056    LSLS	R6, R2, #1
;__Lib_MathDouble.c, 1397 :: 		
0x0B0A	0x416D    ADCS	R5, R5
;__Lib_MathDouble.c, 1398 :: 		
0x0B0C	0xEA4F0743  LSL	R7, R3, #1
;__Lib_MathDouble.c, 1399 :: 		
0x0B10	0xEA5F5757  LSRS	R7, R7, #21
;__Lib_MathDouble.c, 1402 :: 		
0x0B14	0xBF1C    ITT	NE
;__Lib_MathDouble.c, 1403 :: 		
0x0B16	0xF4451500  ORRNE	R5, R5, #2097152
;__Lib_MathDouble.c, 1404 :: 		
0x0B1A	0xE008    BNE	__me_jump
;__Lib_MathDouble.c, 1405 :: 		
0x0B1C	0xF2400100  MOVW	R1, #0
;__Lib_MathDouble.c, 1406 :: 		
0x0B20	0xF6C771F0  MOVT	R1, #32752
;__Lib_MathDouble.c, 1407 :: 		
0x0B24	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1408 :: 		
0x0B28	0xF04F0000  MOV	R0, #0
;__Lib_MathDouble.c, 1410 :: 		
0x0B2C	0xE07F    B	__me_lab_end
;__Lib_MathDouble.c, 1412 :: 		
__me_jump:
;__Lib_MathDouble.c, 1413 :: 		
0x0B2E	0xF44F6EE0  MOV	LR, #1792
;__Lib_MathDouble.c, 1414 :: 		
0x0B32	0xF11E0EFF  ADDS	LR, LR, #255
;__Lib_MathDouble.c, 1415 :: 		
0x0B36	0x4577    CMP	R7, LR
;__Lib_MathDouble.c, 1416 :: 		
0x0B38	0xD070    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1418 :: 		
0x0B3A	0xEA4F3301  LSL	R3, R1, #12
;__Lib_MathDouble.c, 1419 :: 		
0x0B3E	0xEA4F3313  LSR	R3, R3, #12
;__Lib_MathDouble.c, 1420 :: 		
0x0B42	0x0042    LSLS	R2, R0, #1
;__Lib_MathDouble.c, 1421 :: 		
0x0B44	0x415B    ADCS	R3, R3
;__Lib_MathDouble.c, 1422 :: 		
0x0B46	0xEA4F0441  LSL	R4, R1, #1
;__Lib_MathDouble.c, 1423 :: 		
0x0B4A	0x0D64    LSRS	R4, R4, #21
;__Lib_MathDouble.c, 1424 :: 		
0x0B4C	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1425 :: 		
0x0B4E	0xF4431300  ORRNE	R3, R3, #2097152
;__Lib_MathDouble.c, 1426 :: 		
0x0B52	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1427 :: 		
0x0B56	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1429 :: 		
0x0B5A	0xE068    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1431 :: 		
0x0B5C	0x4574    CMP	R4, LR
;__Lib_MathDouble.c, 1432 :: 		
0x0B5E	0xD05D    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1434 :: 		
0x0B60	0x1BE4    SUBS	R4, R4, R7
;__Lib_MathDouble.c, 1437 :: 		
0x0B62	0x2100    MOVS	R1, #0
;__Lib_MathDouble.c, 1438 :: 		
0x0B64	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1439 :: 		
0x0B66	0xF05F0E36  MOVS	LR, #54
;__Lib_MathDouble.c, 1441 :: 		
__me_fdivb:
0x0B6A	0x42AB    CMP	R3, R5
;__Lib_MathDouble.c, 1442 :: 		
0x0B6C	0xD100    BNE	__me_lab1
;__Lib_MathDouble.c, 1443 :: 		
0x0B6E	0x42B2    CMP	R2, R6
;__Lib_MathDouble.c, 1444 :: 		
__me_lab1:
0x0B70	0xD305    BCC	__me_lab2
;__Lib_MathDouble.c, 1445 :: 		
0x0B72	0x4140    ADCS	R0, R0
;__Lib_MathDouble.c, 1446 :: 		
0x0B74	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1447 :: 		
0x0B76	0x1B92    SUBS	R2, R2, R6
;__Lib_MathDouble.c, 1448 :: 		
0x0B78	0xEB630305  SBC	R3, R3, R5, LSL #0
;__Lib_MathDouble.c, 1449 :: 		
0x0B7C	0xE001    B	__me_lab3
;__Lib_MathDouble.c, 1450 :: 		
__me_lab2:
0x0B7E	0x4140    ADCS	R0, R0
;__Lib_MathDouble.c, 1451 :: 		
0x0B80	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1452 :: 		
__me_lab3:
0x0B82	0xF1BE0E01  SUBS	LR, LR, #1
;__Lib_MathDouble.c, 1453 :: 		
0x0B86	0xD005    BEQ	__me_fdive
;__Lib_MathDouble.c, 1454 :: 		
0x0B88	0xEA530702  ORRS	R7, R3, R2, LSL #0
;__Lib_MathDouble.c, 1455 :: 		
0x0B8C	0xD002    BEQ	__me_fdive
;__Lib_MathDouble.c, 1456 :: 		
0x0B8E	0x0052    LSLS	R2, R2, #1
;__Lib_MathDouble.c, 1457 :: 		
0x0B90	0x415B    ADCS	R3, R3
;__Lib_MathDouble.c, 1458 :: 		
0x0B92	0xE7EA    B	__me_fdivb
;__Lib_MathDouble.c, 1460 :: 		
__me_fdive:
0x0B94	0xF1BE0F20  CMP	LR, #32
;__Lib_MathDouble.c, 1461 :: 		
0x0B98	0xD209    BCS	__me_low
;__Lib_MathDouble.c, 1462 :: 		
0x0B9A	0xF1BE0F16  CMP	LR, #22
;__Lib_MathDouble.c, 1463 :: 		
0x0B9E	0xD30C    BCC	__me_high
;__Lib_MathDouble.c, 1465 :: 		
__me_mid:
0x0BA0	0xF1CE0720  RSB	R7, LR, #32
;__Lib_MathDouble.c, 1466 :: 		
0x0BA4	0xFA20F107  LSR	R1, R0, R7
;__Lib_MathDouble.c, 1467 :: 		
0x0BA8	0xFA00F00E  LSL	R0, R0, LR
;__Lib_MathDouble.c, 1468 :: 		
0x0BAC	0xE00F    B	__me_cont
;__Lib_MathDouble.c, 1470 :: 		
__me_low:
0x0BAE	0xF1AE0E20  SUB	LR, LR, #32
;__Lib_MathDouble.c, 1471 :: 		
0x0BB2	0xFA00F10E  LSL	R1, R0, LR
;__Lib_MathDouble.c, 1472 :: 		
0x0BB6	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1473 :: 		
0x0BB8	0xE009    B	__me_cont
;__Lib_MathDouble.c, 1475 :: 		
__me_high:
0x0BBA	0xFA01F10E  LSL	R1, R1, LR
;__Lib_MathDouble.c, 1476 :: 		
0x0BBE	0xF1CE0720  RSB	R7, LR, #32
;__Lib_MathDouble.c, 1477 :: 		
0x0BC2	0xFA20F707  LSR	R7, R0, R7
;__Lib_MathDouble.c, 1478 :: 		
0x0BC6	0xEA410107  ORR	R1, R1, R7, LSL #0
;__Lib_MathDouble.c, 1479 :: 		
0x0BCA	0xFA00F00E  LSL	R0, R0, LR
;__Lib_MathDouble.c, 1481 :: 		
__me_cont:
0x0BCE	0xF4111F00  TST	R1, #2097152
;__Lib_MathDouble.c, 1482 :: 		
0x0BD2	0xD102    BNE	__me_lab4
;__Lib_MathDouble.c, 1483 :: 		
0x0BD4	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1484 :: 		
0x0BD6	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1485 :: 		
0x0BD8	0x1E64    SUBS	R4, R4, #1
;__Lib_MathDouble.c, 1487 :: 		
__me_lab4:
0x0BDA	0x1C40    ADDS	R0, R0, #1
;__Lib_MathDouble.c, 1488 :: 		
0x0BDC	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1489 :: 		
0x0BE0	0xF4110F80  TST	R1, #4194304
;__Lib_MathDouble.c, 1490 :: 		
0x0BE4	0xBF1A    ITTE	NE
;__Lib_MathDouble.c, 1491 :: 		
0x0BE6	0x1C64    ADDNE	R4, R4, #1
;__Lib_MathDouble.c, 1492 :: 		
0x0BE8	0xF4210180  BICNE	R1, R1, #4194304
;__Lib_MathDouble.c, 1493 :: 		
0x0BEC	0xF4211100  BICEQ	R1, R1, #2097152
;__Lib_MathDouble.c, 1495 :: 		
0x0BF0	0xF44F7740  MOV	R7, #768
;__Lib_MathDouble.c, 1496 :: 		
0x0BF4	0x37FF    ADDS	R7, #255
;__Lib_MathDouble.c, 1497 :: 		
0x0BF6	0x19E4    ADDS	R4, R4, R7
;__Lib_MathDouble.c, 1498 :: 		
0x0BF8	0xBFDE    ITTT	LE
;__Lib_MathDouble.c, 1499 :: 		
0x0BFA	0xF04F0100  MOVLE	R1, #0
;__Lib_MathDouble.c, 1500 :: 		
0x0BFE	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 1502 :: 		
0x0C02	0xE014    BLE	__me_lab_end
;__Lib_MathDouble.c, 1504 :: 		
0x0C04	0xF5076780  ADD	R7, R7, #1024
;__Lib_MathDouble.c, 1505 :: 		
0x0C08	0x42BC    CMP	R4, R7
;__Lib_MathDouble.c, 1506 :: 		
0x0C0A	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 1508 :: 		
0x0C0C	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 1509 :: 		
0x0C0E	0xEA4F0030  RRX	R0, R0
;__Lib_MathDouble.c, 1510 :: 		
0x0C12	0xEA415104  ORR	R1, R1, R4, LSL #20
;__Lib_MathDouble.c, 1511 :: 		
0x0C16	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1514 :: 		
0x0C1A	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 1516 :: 		
__me_ovfl:
0x0C1C	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1517 :: 		
0x0C1E	0x21FF    MOVS	R1, #255
;__Lib_MathDouble.c, 1518 :: 		
0x0C20	0xEA4F01C1  LSL	R1, R1, #3
;__Lib_MathDouble.c, 1519 :: 		
0x0C24	0x1DC9    ADDS	R1, R1, #7
;__Lib_MathDouble.c, 1520 :: 		
0x0C26	0xEA4F5101  LSL	R1, R1, #20
;__Lib_MathDouble.c, 1521 :: 		
0x0C2A	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1522 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 1523 :: 		
0x0C2E	0xE8BD41FC  POP	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1525 :: 		
L_end__Div_DP:
0x0C32	0xB001    ADD	SP, SP, #4
0x0C34	0x4770    BX	LR
; end of __Div_DP
_calc_finger_state:
;Input Capture Four Channel Demo.c, 278 :: 		void calc_finger_state( struct finger *fngr) {
; fngr start address is: 0 (R0)
0x1200	0xB083    SUB	SP, SP, #12
0x1202	0xF8CDE000  STR	LR, [SP, #0]
0x1206	0x4681    MOV	R9, R0
; fngr end address is: 0 (R0)
; fngr start address is: 36 (R9)
;Input Capture Four Channel Demo.c, 281 :: 		fngr->enc_overflow_delta = (unsigned long) fngr->enc_overflow_end - fngr->enc_overflow_start;
0x1208	0xF1090330  ADD	R3, R9, #48
0x120C	0xF109012C  ADD	R1, R9, #44
0x1210	0x680A    LDR	R2, [R1, #0]
0x1212	0xF1090128  ADD	R1, R9, #40
0x1216	0x6809    LDR	R1, [R1, #0]
0x1218	0x1A51    SUB	R1, R2, R1
0x121A	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 284 :: 		fngr->enc_overflow_ticks = (unsigned long) fngr->enc_overflow_delta * (ENCODER_TIM_RELOAD - 3);
0x121C	0xF1090334  ADD	R3, R9, #52
0x1220	0xF1090130  ADD	R1, R9, #48
0x1224	0x680A    LDR	R2, [R1, #0]
0x1226	0x493A    LDR	R1, [PC, #232]
0x1228	0x6809    LDR	R1, [R1, #0]
0x122A	0x1EC9    SUBS	R1, R1, #3
0x122C	0x4351    MULS	R1, R2, R1
0x122E	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 287 :: 		fngr->enc_delta_ticks = (unsigned long) fngr->enc_start_time - fngr->enc_end_time;
0x1230	0xF1090324  ADD	R3, R9, #36
0x1234	0xF109011C  ADD	R1, R9, #28
0x1238	0x680A    LDR	R2, [R1, #0]
0x123A	0xF1090120  ADD	R1, R9, #32
0x123E	0x6809    LDR	R1, [R1, #0]
0x1240	0x1A51    SUB	R1, R2, R1
0x1242	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 290 :: 		fngr->enc_total_ticks = (unsigned long) fngr->enc_overflow_ticks + fngr->enc_delta_ticks;
0x1244	0xF1090338  ADD	R3, R9, #56
0x1248	0xF1090134  ADD	R1, R9, #52
0x124C	0x680A    LDR	R2, [R1, #0]
0x124E	0xF1090124  ADD	R1, R9, #36
0x1252	0x6809    LDR	R1, [R1, #0]
0x1254	0x1851    ADDS	R1, R2, R1
0x1256	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 293 :: 		fngr->input_sig_period = (long double) fngr->enc_total_ticks * timer2_period_ms;
0x1258	0xF1090140  ADD	R1, R9, #64
0x125C	0x9101    STR	R1, [SP, #4]
0x125E	0xF1090138  ADD	R1, R9, #56
0x1262	0x6809    LDR	R1, [R1, #0]
0x1264	0x4608    MOV	R0, R1
0x1266	0xF7FFFBF1  BL	__UnsignedIntegralToLongDouble+0
0x126A	0x4A2A    LDR	R2, [PC, #168]
0x126C	0xED120B00  VLDR.64	D0, [R2, #0]
0x1270	0xEE102A10  VMOV	R2, S0
0x1274	0xEE103A90  VMOV	R3, S1
0x1278	0xF7FFFCF8  BL	__Mul_DP+0
0x127C	0x9A01    LDR	R2, [SP, #4]
0x127E	0xE9C20100  STRD	R0, R1, [R2, #0]
;Input Capture Four Channel Demo.c, 296 :: 		fngr->input_sig_frequency = (unsigned long) 1000.0 / fngr->input_sig_period;
0x1282	0xF109013C  ADD	R1, R9, #60
0x1286	0x9102    STR	R1, [SP, #8]
0x1288	0xF1090140  ADD	R1, R9, #64
0x128C	0x9101    STR	R1, [SP, #4]
0x128E	0xF44F717A  MOV	R1, #1000
0x1292	0xEE001A10  VMOV	S0, R1
0x1296	0xEE100A10  VMOV	R0, S0
0x129A	0xF7FFFBD7  BL	__UnsignedIntegralToLongDouble+0
0x129E	0x9A01    LDR	R2, [SP, #4]
0x12A0	0xE9D22300  LDRD	R2, R3, [R2, #0]
0x12A4	0xF7FFFC22  BL	__Div_DP+0
0x12A8	0xF7FFFDD2  BL	__LongDoubleToUnsignedIntegral+0
0x12AC	0x9902    LDR	R1, [SP, #8]
0x12AE	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 299 :: 		if (fngr->enc_chan_b == 1) {                                                // Clockwise
0x12B0	0xF109011A  ADD	R1, R9, #26
0x12B4	0x8809    LDRH	R1, [R1, #0]
0x12B6	0x2901    CMP	R1, #1
0x12B8	0xD10C    BNE	L_calc_finger_state15
;Input Capture Four Channel Demo.c, 300 :: 		fngr->direction_actual = 1;
0x12BA	0xF1090218  ADD	R2, R9, #24
0x12BE	0x2101    MOVS	R1, #1
0x12C0	0x8011    STRH	R1, [R2, #0]
;Input Capture Four Channel Demo.c, 301 :: 		fngr->position_actual += fngr->position_temp;                       // Calculate new position
0x12C2	0xF1090314  ADD	R3, R9, #20
0x12C6	0xF1090110  ADD	R1, R9, #16
0x12CA	0x680A    LDR	R2, [R1, #0]
0x12CC	0x6819    LDR	R1, [R3, #0]
0x12CE	0x1889    ADDS	R1, R1, R2
0x12D0	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 302 :: 		}
0x12D2	0xE014    B	L_calc_finger_state16
L_calc_finger_state15:
;Input Capture Four Channel Demo.c, 304 :: 		else if (fngr->enc_chan_b == 0) {                                           // Counter Clockwise
0x12D4	0xF109011A  ADD	R1, R9, #26
0x12D8	0x8809    LDRH	R1, [R1, #0]
0x12DA	0xB961    CBNZ	R1, L_calc_finger_state17
;Input Capture Four Channel Demo.c, 305 :: 		fngr->direction_actual = 0;
0x12DC	0xF1090218  ADD	R2, R9, #24
0x12E0	0x2100    MOVS	R1, #0
0x12E2	0x8011    STRH	R1, [R2, #0]
;Input Capture Four Channel Demo.c, 306 :: 		fngr->position_actual -= fngr->position_temp;                       // Calculate new position
0x12E4	0xF1090314  ADD	R3, R9, #20
0x12E8	0xF1090110  ADD	R1, R9, #16
0x12EC	0x680A    LDR	R2, [R1, #0]
0x12EE	0x6819    LDR	R1, [R3, #0]
0x12F0	0x1A89    SUB	R1, R1, R2
0x12F2	0x6019    STR	R1, [R3, #0]
;Input Capture Four Channel Demo.c, 307 :: 		}
0x12F4	0xE003    B	L_calc_finger_state18
L_calc_finger_state17:
;Input Capture Four Channel Demo.c, 310 :: 		fngr->direction_actual = 7;
0x12F6	0xF1090218  ADD	R2, R9, #24
0x12FA	0x2107    MOVS	R1, #7
0x12FC	0x8011    STRH	R1, [R2, #0]
;Input Capture Four Channel Demo.c, 311 :: 		}
L_calc_finger_state18:
L_calc_finger_state16:
;Input Capture Four Channel Demo.c, 314 :: 		fngr->position_temp = 0;
0x12FE	0xF1090210  ADD	R2, R9, #16
; fngr end address is: 36 (R9)
0x1302	0x2100    MOVS	R1, #0
0x1304	0x6011    STR	R1, [R2, #0]
;Input Capture Four Channel Demo.c, 315 :: 		}
L_end_calc_finger_state:
0x1306	0xF8DDE000  LDR	LR, [SP, #0]
0x130A	0xB003    ADD	SP, SP, #12
0x130C	0x4770    BX	LR
0x130E	0xBF00    NOP
0x1310	0x00002000  	_ENCODER_TIM_RELOAD+0
0x1314	0x00FC2000  	_timer2_period_ms+0
; end of _calc_finger_state
__Mul_DP:
;__Lib_MathDouble.c, 1275 :: 		
0x0C6C	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 1277 :: 		
0x0C6E	0xE92D41FC  PUSH	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1279 :: 		
0x0C72	0xEA910803  EORS	R8, R1, R3, LSL #0
;__Lib_MathDouble.c, 1280 :: 		
0x0C76	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1281 :: 		
0x0C78	0xF04F4800  MOVMI	R8, #-2147483648
;__Lib_MathDouble.c, 1282 :: 		
0x0C7C	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 1284 :: 		
0x0C80	0xEA4F25C3  LSL	R5, R3, #11
;__Lib_MathDouble.c, 1285 :: 		
0x0C84	0xEA455552  ORR	R5, R5, R2, LSR #21
;__Lib_MathDouble.c, 1286 :: 		
0x0C88	0xEA4F26C2  LSL	R6, R2, #11
;__Lib_MathDouble.c, 1287 :: 		
0x0C8C	0xEA4F0743  LSL	R7, R3, #1
;__Lib_MathDouble.c, 1288 :: 		
0x0C90	0x0D7F    LSRS	R7, R7, #21
;__Lib_MathDouble.c, 1289 :: 		
0x0C92	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1290 :: 		
0x0C94	0xF0454500  ORRNE	R5, R5, #-2147483648
;__Lib_MathDouble.c, 1291 :: 		
0x0C98	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1292 :: 		
0x0C9C	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1294 :: 		
0x0CA0	0xE063    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1296 :: 		
0x0CA2	0xF45F6EE0  MOVS	LR, #1792
;__Lib_MathDouble.c, 1297 :: 		
0x0CA6	0xF11E0EFF  ADDS	LR, LR, #255
;__Lib_MathDouble.c, 1298 :: 		
0x0CAA	0x4577    CMP	R7, LR
;__Lib_MathDouble.c, 1299 :: 		
0x0CAC	0xD056    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1301 :: 		
0x0CAE	0xEA4F23C1  LSL	R3, R1, #11
;__Lib_MathDouble.c, 1302 :: 		
0x0CB2	0xEA435350  ORR	R3, R3, R0, LSR #21
;__Lib_MathDouble.c, 1303 :: 		
0x0CB6	0xEA4F22C0  LSL	R2, R0, #11
;__Lib_MathDouble.c, 1304 :: 		
0x0CBA	0xEA4F0441  LSL	R4, R1, #1
;__Lib_MathDouble.c, 1305 :: 		
0x0CBE	0x0D64    LSRS	R4, R4, #21
;__Lib_MathDouble.c, 1306 :: 		
0x0CC0	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 1307 :: 		
0x0CC2	0xF0434300  ORRNE	R3, R3, #-2147483648
;__Lib_MathDouble.c, 1308 :: 		
0x0CC6	0xF04F0100  MOVEQ	R1, #0
;__Lib_MathDouble.c, 1309 :: 		
0x0CCA	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 1311 :: 		
0x0CCE	0xE04C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 1313 :: 		
0x0CD0	0x4574    CMP	R4, LR
;__Lib_MathDouble.c, 1314 :: 		
0x0CD2	0xD043    BEQ	__me_ovfl
;__Lib_MathDouble.c, 1316 :: 		
0x0CD4	0x19E4    ADDS	R4, R4, R7
;__Lib_MathDouble.c, 1319 :: 		
0x0CD6	0xFBA30105  UMULL	R0, R1, R3, R5
;__Lib_MathDouble.c, 1320 :: 		
0x0CDA	0xFBA3E706  UMULL	LR, R7, R3, R6
;__Lib_MathDouble.c, 1321 :: 		
0x0CDE	0xFBA26306  UMULL	R6, R3, R2, R6
;__Lib_MathDouble.c, 1322 :: 		
0x0CE2	0xEB1E0E03  ADDS	LR, LR, R3, LSL #0
;__Lib_MathDouble.c, 1323 :: 		
0x0CE6	0xF1570700  ADCS	R7, R7, #0
;__Lib_MathDouble.c, 1324 :: 		
0x0CEA	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1325 :: 		
0x0CEE	0xFBA26305  UMULL	R6, R3, R2, R5
;__Lib_MathDouble.c, 1326 :: 		
0x0CF2	0xEB1E0E06  ADDS	LR, LR, R6, LSL #0
;__Lib_MathDouble.c, 1327 :: 		
0x0CF6	0xF1570700  ADCS	R7, R7, #0
;__Lib_MathDouble.c, 1328 :: 		
0x0CFA	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1329 :: 		
0x0CFE	0x18FF    ADDS	R7, R7, R3
;__Lib_MathDouble.c, 1330 :: 		
0x0D00	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1331 :: 		
0x0D04	0x19C0    ADDS	R0, R0, R7
;__Lib_MathDouble.c, 1332 :: 		
0x0D06	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1334 :: 		
0x0D0A	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 1335 :: 		
0x0D0C	0xF44F6E80  MOVMI	LR, #1024
;__Lib_MathDouble.c, 1336 :: 		
0x0D10	0xF44F7E00  MOVPL	LR, #512
;__Lib_MathDouble.c, 1338 :: 		
0x0D14	0xEB10000E  ADDS	R0, R0, LR, LSL #0
;__Lib_MathDouble.c, 1339 :: 		
0x0D18	0xF1510100  ADCS	R1, R1, #0
;__Lib_MathDouble.c, 1341 :: 		
0x0D1C	0xBF48    IT	MI
;__Lib_MathDouble.c, 1342 :: 		
0x0D1E	0x1C64    ADDMI	R4, R4, #1
;__Lib_MathDouble.c, 1343 :: 		
0x0D20	0xD401    BMI	__me_lab1
;__Lib_MathDouble.c, 1344 :: 		
0x0D22	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 1345 :: 		
0x0D24	0x4149    ADCS	R1, R1
;__Lib_MathDouble.c, 1347 :: 		
__me_lab1:
0x0D26	0xF45F7740  MOVS	R7, #768
;__Lib_MathDouble.c, 1348 :: 		
0x0D2A	0x37FF    ADDS	R7, #255
;__Lib_MathDouble.c, 1349 :: 		
0x0D2C	0x1BE4    SUBS	R4, R4, R7
;__Lib_MathDouble.c, 1350 :: 		
0x0D2E	0xBFDE    ITTT	LE
;__Lib_MathDouble.c, 1351 :: 		
0x0D30	0xF04F0100  MOVLE	R1, #0
;__Lib_MathDouble.c, 1352 :: 		
0x0D34	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 1354 :: 		
0x0D38	0xE017    BLE	__me_lab_end
;__Lib_MathDouble.c, 1356 :: 		
0x0D3A	0xF5176780  ADDS	R7, R7, #1024
;__Lib_MathDouble.c, 1357 :: 		
0x0D3E	0x42BC    CMP	R4, R7
;__Lib_MathDouble.c, 1358 :: 		
0x0D40	0xD20C    BCS	__me_ovfl
;__Lib_MathDouble.c, 1360 :: 		
0x0D42	0xEA4F20D0  LSR	R0, R0, #11
;__Lib_MathDouble.c, 1361 :: 		
0x0D46	0xEA405041  ORR	R0, R0, R1, LSL #21
;__Lib_MathDouble.c, 1362 :: 		
0x0D4A	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 1363 :: 		
0x0D4E	0xEA4F3111  LSR	R1, R1, #12
;__Lib_MathDouble.c, 1364 :: 		
0x0D52	0xEA415104  ORR	R1, R1, R4, LSL #20
;__Lib_MathDouble.c, 1365 :: 		
0x0D56	0xEA410108  ORR	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1368 :: 		
0x0D5A	0xE006    B	__me_lab_end
;__Lib_MathDouble.c, 1371 :: 		
__me_ovfl:
0x0D5C	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 1372 :: 		
0x0D5E	0x21FF    MOVS	R1, #255
;__Lib_MathDouble.c, 1373 :: 		
0x0D60	0x00C9    LSLS	R1, R1, #3
;__Lib_MathDouble.c, 1374 :: 		
0x0D62	0x1DC9    ADDS	R1, R1, #7
;__Lib_MathDouble.c, 1375 :: 		
0x0D64	0x0509    LSLS	R1, R1, #20
;__Lib_MathDouble.c, 1376 :: 		
0x0D66	0xEA510108  ORRS	R1, R1, R8, LSL #0
;__Lib_MathDouble.c, 1377 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 1378 :: 		
0x0D6A	0xE8BD41FC  POP	(R2, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 1380 :: 		
L_end__Mul_DP:
0x0D6E	0xB001    ADD	SP, SP, #4
0x0D70	0x4770    BX	LR
; end of __Mul_DP
__LongDoubleToUnsignedIntegral:
;__Lib_MathDouble.c, 134 :: 		
0x0E50	0xB081    SUB	SP, SP, #4
0x0E52	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_MathDouble.c, 136 :: 		
0x0E56	0xB504    PUSH	(R2, R14)
;__Lib_MathDouble.c, 137 :: 		
0x0E58	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 138 :: 		
0x0E5A	0xD502    BPL	__me_pos
;__Lib_MathDouble.c, 142 :: 		
0x0E5C	0xF7FFFDA4  BL	__LongDoubleToSignedIntegral+0
;__Lib_MathDouble.c, 143 :: 		
0x0E60	0xE01C    B	__me_endLab
;__Lib_MathDouble.c, 144 :: 		
__me_pos:
;__Lib_MathDouble.c, 147 :: 		
0x0E62	0xEA4F0241  LSL	R2, R1, #1
;__Lib_MathDouble.c, 148 :: 		
0x0E66	0xEA4F5252  LSR	R2, R2, #21
;__Lib_MathDouble.c, 150 :: 		
0x0E6A	0xF5B27240  SUBS	R2, R2, #768
;__Lib_MathDouble.c, 151 :: 		
0x0E6E	0x3AFF    SUBS	R2, #255
;__Lib_MathDouble.c, 152 :: 		
0x0E70	0xBF44    ITT	MI
;__Lib_MathDouble.c, 153 :: 		
0x0E72	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 155 :: 		
0x0E76	0xE011    BMI	__me_endLab
;__Lib_MathDouble.c, 157 :: 		
0x0E78	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 158 :: 		
0x0E7C	0xD30C    BCC	__me_ovfl
;__Lib_MathDouble.c, 160 :: 		
0x0E7E	0xEA4F21C1  LSL	R1, R1, #11
;__Lib_MathDouble.c, 161 :: 		
0x0E82	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 163 :: 		
0x0E86	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 164 :: 		
0x0E88	0x2A0B    CMP	R2, #11
;__Lib_MathDouble.c, 165 :: 		
0x0E8A	0xBF3E    ITTT	CC
;__Lib_MathDouble.c, 166 :: 		
0x0E8C	0x3215    ADDCC	R2, #21
;__Lib_MathDouble.c, 167 :: 		
0x0E8E	0xFA20F202  LSRCC	R2, R0, R2
;__Lib_MathDouble.c, 168 :: 		
0x0E92	0x4311    ORRCC	R1, R2
;__Lib_MathDouble.c, 170 :: 		
0x0E94	0x4608    MOV	R0, R1
;__Lib_MathDouble.c, 173 :: 		
0x0E96	0xE001    B	__me_endLab
;__Lib_MathDouble.c, 175 :: 		
__me_ovfl:
0x0E98	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 176 :: 		
0x0E9A	0x1E40    SUBS	R0, R0, #1
;__Lib_MathDouble.c, 178 :: 		
__me_endLab:
;__Lib_MathDouble.c, 179 :: 		
0x0E9C	0xE8BD4004  POP	(R2, R14)
;__Lib_MathDouble.c, 181 :: 		
L_end__LongDoubleToUnsignedIntegral:
0x0EA0	0xF8DDE000  LDR	LR, [SP, #0]
0x0EA4	0xB001    ADD	SP, SP, #4
0x0EA6	0x4770    BX	LR
; end of __LongDoubleToUnsignedIntegral
__LongDoubleToSignedIntegral:
;__Lib_MathDouble.c, 87 :: 		
0x09A8	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 89 :: 		
0x09AA	0xB50C    PUSH	(R2, R3, R14)
;__Lib_MathDouble.c, 91 :: 		
0x09AC	0xEA4F0341  LSL	R3, R1, #1
;__Lib_MathDouble.c, 92 :: 		
0x09B0	0xEA4F5353  LSR	R3, R3, #21
;__Lib_MathDouble.c, 94 :: 		
0x09B4	0xF5B37340  SUBS	R3, R3, #768
;__Lib_MathDouble.c, 95 :: 		
0x09B8	0x3BFF    SUBS	R3, #255
;__Lib_MathDouble.c, 96 :: 		
0x09BA	0xBF44    ITT	MI
;__Lib_MathDouble.c, 97 :: 		
0x09BC	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 99 :: 		
0x09C0	0xE017    BMI	__me_lab_end
;__Lib_MathDouble.c, 101 :: 		
0x09C2	0xF1D3031F  RSBS	R3, R3, #31
;__Lib_MathDouble.c, 102 :: 		
0x09C6	0xD90F    BLS	__me_ovfl
;__Lib_MathDouble.c, 104 :: 		
0x09C8	0xEA4F22C1  LSL	R2, R1, #11
;__Lib_MathDouble.c, 105 :: 		
0x09CC	0xF0424200  ORR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 107 :: 		
0x09D0	0xFA22F203  LSR	R2, R2, R3
;__Lib_MathDouble.c, 108 :: 		
0x09D4	0x2B0B    CMP	R3, #11
;__Lib_MathDouble.c, 109 :: 		
0x09D6	0xBF3E    ITTT	CC
;__Lib_MathDouble.c, 110 :: 		
0x09D8	0x3315    ADDCC	R3, #21
;__Lib_MathDouble.c, 111 :: 		
0x09DA	0x40D8    LSRCC	R0, R3
;__Lib_MathDouble.c, 112 :: 		
0x09DC	0x4302    ORRCC	R2, R0
;__Lib_MathDouble.c, 114 :: 		
0x09DE	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 115 :: 		
0x09E0	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 116 :: 		
0x09E2	0x4250    RSBMI	R0, R2, #0
;__Lib_MathDouble.c, 117 :: 		
0x09E4	0x4610    MOVPL	R0, R2
;__Lib_MathDouble.c, 120 :: 		
0x09E6	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 122 :: 		
__me_ovfl:
0x09E8	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 123 :: 		
0x09EA	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 124 :: 		
0x09EE	0xBF58    IT	PL
;__Lib_MathDouble.c, 125 :: 		
0x09F0	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 126 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 127 :: 		
0x09F2	0xE8BD400C  POP	(R2, R3, R14)
;__Lib_MathDouble.c, 129 :: 		
L_end__LongDoubleToSignedIntegral:
0x09F6	0xB001    ADD	SP, SP, #4
0x09F8	0x4770    BX	LR
; end of __LongDoubleToSignedIntegral
_print_finger_info:
;Input Capture Four Channel Demo.c, 319 :: 		void print_finger_info( struct finger *fngr) {
; fngr start address is: 0 (R0)
0x0FF4	0xB08D    SUB	SP, SP, #52
0x0FF6	0xF8CDE000  STR	LR, [SP, #0]
0x0FFA	0x4680    MOV	R8, R0
; fngr end address is: 0 (R0)
; fngr start address is: 32 (R8)
;Input Capture Four Channel Demo.c, 326 :: 		UART1_Write_Text("\n\rFinger Name: ");                                      //Print name of current finger to terminal
0x0FFC	0x4929    LDR	R1, [PC, #164]
0x0FFE	0x4608    MOV	R0, R1
0x1000	0xF000F8DC  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 327 :: 		UART1_Write_Text(fngr->name);
0x1004	0x4640    MOV	R0, R8
0x1006	0xF000F8D9  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 328 :: 		UART1_Write_Text("\n\r");
0x100A	0x4927    LDR	R1, [PC, #156]
0x100C	0x4608    MOV	R0, R1
0x100E	0xF000F8D5  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 330 :: 		LongWordToStr(fngr->input_sig_frequency, frequency_text);                   // Print input capture signal frequency to terminal
0x1012	0xAA01    ADD	R2, SP, #4
0x1014	0xF108013C  ADD	R1, R8, #60
0x1018	0x6809    LDR	R1, [R1, #0]
0x101A	0x4608    MOV	R0, R1
0x101C	0x4611    MOV	R1, R2
0x101E	0xF7FFFF43  BL	_LongWordToStr+0
;Input Capture Four Channel Demo.c, 331 :: 		UART1_Write_Text("Frequency of incoming signal (Hz): ");
0x1022	0x4922    LDR	R1, [PC, #136]
0x1024	0x4608    MOV	R0, R1
0x1026	0xF000F8C9  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 332 :: 		UART1_Write_Text(frequency_text);
0x102A	0xA901    ADD	R1, SP, #4
0x102C	0x4608    MOV	R0, R1
0x102E	0xF000F8C5  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 333 :: 		UART1_Write_Text("\n\r");
0x1032	0x491F    LDR	R1, [PC, #124]
0x1034	0x4608    MOV	R0, R1
0x1036	0xF000F8C1  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 335 :: 		IntToStr(fngr->direction_actual, direction_text);                           // Print direction of movement to terminal
0x103A	0xF10D0222  ADD	R2, SP, #34
0x103E	0xF1080118  ADD	R1, R8, #24
0x1042	0x8809    LDRH	R1, [R1, #0]
0x1044	0xB209    SXTH	R1, R1
0x1046	0xB208    SXTH	R0, R1
0x1048	0x4611    MOV	R1, R2
0x104A	0xF7FFFE93  BL	_IntToStr+0
;Input Capture Four Channel Demo.c, 336 :: 		UART1_Write_Text("Direction of movement:             ");
0x104E	0x4919    LDR	R1, [PC, #100]
0x1050	0x4608    MOV	R0, R1
0x1052	0xF000F8B3  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 337 :: 		UART1_Write_Text(direction_text);
0x1056	0xF10D0122  ADD	R1, SP, #34
0x105A	0x4608    MOV	R0, R1
0x105C	0xF000F8AE  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 338 :: 		UART1_Write_Text("\n\r");
0x1060	0x4915    LDR	R1, [PC, #84]
0x1062	0x4608    MOV	R0, R1
0x1064	0xF000F8AA  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 340 :: 		LongToStr(fngr->position_actual, position_text);                            // Print total number of input events (position) to terminal
0x1068	0xF10D0213  ADD	R2, SP, #19
0x106C	0xF1080114  ADD	R1, R8, #20
; fngr end address is: 32 (R8)
0x1070	0x6809    LDR	R1, [R1, #0]
0x1072	0x4608    MOV	R0, R1
0x1074	0x4611    MOV	R1, R2
0x1076	0xF7FFFEB5  BL	_LongToStr+0
;Input Capture Four Channel Demo.c, 341 :: 		UART1_Write_Text("Position of finger:                ");
0x107A	0x4910    LDR	R1, [PC, #64]
0x107C	0x4608    MOV	R0, R1
0x107E	0xF000F89D  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 342 :: 		UART1_Write_Text(position_text);
0x1082	0xF10D0113  ADD	R1, SP, #19
0x1086	0x4608    MOV	R0, R1
0x1088	0xF000F898  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 343 :: 		UART1_Write_Text("\n\n\n\r");
0x108C	0x490C    LDR	R1, [PC, #48]
0x108E	0x4608    MOV	R0, R1
0x1090	0xF000F894  BL	_UART1_Write_Text+0
;Input Capture Four Channel Demo.c, 345 :: 		terminal_print_count = 0;                                                   // Reset counter for terminal printing
0x1094	0x2200    MOVS	R2, #0
0x1096	0x490B    LDR	R1, [PC, #44]
0x1098	0x800A    STRH	R2, [R1, #0]
;Input Capture Four Channel Demo.c, 346 :: 		}
L_end_print_finger_info:
0x109A	0xF8DDE000  LDR	LR, [SP, #0]
0x109E	0xB00D    ADD	SP, SP, #52
0x10A0	0x4770    BX	LR
0x10A2	0xBF00    NOP
0x10A4	0x00042000  	?lstr8_Input_32Capture_32Four_32Channel_32Demo+0
0x10A8	0x00142000  	?lstr9_Input_32Capture_32Four_32Channel_32Demo+0
0x10AC	0x00172000  	?lstr10_Input_32Capture_32Four_32Channel_32Demo+0
0x10B0	0x003B2000  	?lstr11_Input_32Capture_32Four_32Channel_32Demo+0
0x10B4	0x003E2000  	?lstr12_Input_32Capture_32Four_32Channel_32Demo+0
0x10B8	0x00622000  	?lstr13_Input_32Capture_32Four_32Channel_32Demo+0
0x10BC	0x00652000  	?lstr14_Input_32Capture_32Four_32Channel_32Demo+0
0x10C0	0x00892000  	?lstr15_Input_32Capture_32Four_32Channel_32Demo+0
0x10C4	0x00E62000  	_terminal_print_count+0
; end of _print_finger_info
_LongWordToStr:
;__Lib_Conversions.c, 274 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0EA8	0xB081    SUB	SP, SP, #4
0x0EAA	0x460A    MOV	R2, R1
0x0EAC	0x4601    MOV	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 277 :: 		
; len start address is: 0 (R0)
0x0EAE	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x0EB0	0x460D    MOV	R5, R1
0x0EB2	0x4611    MOV	R1, R2
L_LongWordToStr52:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x0EB4	0x280A    CMP	R0, #10
0x0EB6	0xD205    BCS	L_LongWordToStr53
;__Lib_Conversions.c, 278 :: 		
0x0EB8	0x180B    ADDS	R3, R1, R0
0x0EBA	0x2220    MOVS	R2, #32
0x0EBC	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 277 :: 		
0x0EBE	0x1C40    ADDS	R0, R0, #1
0x0EC0	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 278 :: 		
0x0EC2	0xE7F7    B	L_LongWordToStr52
L_LongWordToStr53:
;__Lib_Conversions.c, 279 :: 		
0x0EC4	0x180B    ADDS	R3, R1, R0
0x0EC6	0x2200    MOVS	R2, #0
0x0EC8	0x701A    STRB	R2, [R3, #0]
0x0ECA	0x1E40    SUBS	R0, R0, #1
0x0ECC	0xB280    UXTH	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 281 :: 		
L_LongWordToStr55:
;__Lib_Conversions.c, 282 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x0ECE	0x180C    ADDS	R4, R1, R0
0x0ED0	0x230A    MOVS	R3, #10
0x0ED2	0xFBB5F2F3  UDIV	R2, R5, R3
0x0ED6	0xFB035212  MLS	R2, R3, R2, R5
0x0EDA	0x3230    ADDS	R2, #48
0x0EDC	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 283 :: 		
0x0EDE	0x220A    MOVS	R2, #10
0x0EE0	0xFBB5F2F2  UDIV	R2, R5, R2
0x0EE4	0x4615    MOV	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 284 :: 		
0x0EE6	0xB902    CBNZ	R2, L_LongWordToStr57
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 285 :: 		
0x0EE8	0xE002    B	L_LongWordToStr56
L_LongWordToStr57:
;__Lib_Conversions.c, 286 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x0EEA	0x1E40    SUBS	R0, R0, #1
0x0EEC	0xB280    UXTH	R0, R0
;__Lib_Conversions.c, 287 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x0EEE	0xE7EE    B	L_LongWordToStr55
L_LongWordToStr56:
;__Lib_Conversions.c, 288 :: 		
L_end_LongWordToStr:
0x0EF0	0xB001    ADD	SP, SP, #4
0x0EF2	0x4770    BX	LR
; end of _LongWordToStr
_IntToStr:
;__Lib_Conversions.c, 211 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0D74	0xB081    SUB	SP, SP, #4
0x0D76	0xF8CDE000  STR	LR, [SP, #0]
0x0D7A	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 217 :: 		
; negative start address is: 4 (R1)
0x0D7C	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 218 :: 		
; inword start address is: 12 (R3)
0x0D7E	0xB283    UXTH	R3, R0
;__Lib_Conversions.c, 219 :: 		
0x0D80	0x2800    CMP	R0, #0
0x0D82	0xDA05    BGE	L__IntToStr165
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 220 :: 		
0x0D84	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 221 :: 		
0x0D86	0x4240    RSBS	R0, R0, #0
0x0D88	0xB280    UXTH	R0, R0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x0D8A	0xB280    UXTH	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x0D8C	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
0x0D8E	0xE001    B	L_IntToStr37
L__IntToStr165:
;__Lib_Conversions.c, 219 :: 		
0x0D90	0xB298    UXTH	R0, R3
0x0D92	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 222 :: 		
L_IntToStr37:
;__Lib_Conversions.c, 223 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x0D94	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x0D96	0xF7FFFE31  BL	_WordToStr+0
;__Lib_Conversions.c, 225 :: 		
; i start address is: 4 (R1)
0x0D9A	0x2106    MOVS	R1, #6
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x0D9C	0x4634    MOV	R4, R6
0x0D9E	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 226 :: 		
L_IntToStr38:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x0DA0	0x2900    CMP	R1, #0
0x0DA2	0xD908    BLS	L_IntToStr39
;__Lib_Conversions.c, 227 :: 		
0x0DA4	0x1863    ADDS	R3, R4, R1
0x0DA6	0x1E4A    SUBS	R2, R1, #1
0x0DA8	0xB292    UXTH	R2, R2
0x0DAA	0x18A2    ADDS	R2, R4, R2
0x0DAC	0x7812    LDRB	R2, [R2, #0]
0x0DAE	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 228 :: 		
0x0DB0	0x1E49    SUBS	R1, R1, #1
0x0DB2	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 229 :: 		
; i end address is: 4 (R1)
0x0DB4	0xE7F4    B	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c, 230 :: 		
0x0DB6	0x2220    MOVS	R2, #32
0x0DB8	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 231 :: 		
0x0DBA	0xB170    CBZ	R0, L_IntToStr40
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 232 :: 		
; i start address is: 0 (R0)
0x0DBC	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x0DBE	0xB281    UXTH	R1, R0
0x0DC0	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 233 :: 		
L_IntToStr41:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x0DC2	0x1842    ADDS	R2, R0, R1
0x0DC4	0x7812    LDRB	R2, [R2, #0]
0x0DC6	0x2A20    CMP	R2, #32
0x0DC8	0xD102    BNE	L_IntToStr42
0x0DCA	0x1C49    ADDS	R1, R1, #1
0x0DCC	0xB289    UXTH	R1, R1
0x0DCE	0xE7F8    B	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c, 234 :: 		
0x0DD0	0x1E4A    SUBS	R2, R1, #1
0x0DD2	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 235 :: 		
0x0DD4	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x0DD6	0x222D    MOVS	R2, #45
0x0DD8	0x701A    STRB	R2, [R3, #0]
L_IntToStr40:
;__Lib_Conversions.c, 236 :: 		
L_end_IntToStr:
0x0DDA	0xF8DDE000  LDR	LR, [SP, #0]
0x0DDE	0xB001    ADD	SP, SP, #4
0x0DE0	0x4770    BX	LR
; end of _IntToStr
_WordToStr:
;__Lib_Conversions.c, 114 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x09FC	0xB081    SUB	SP, SP, #4
0x09FE	0x460A    MOV	R2, R1
0x0A00	0xB281    UXTH	R1, R0
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 4 (R1)
; output start address is: 8 (R2)
;__Lib_Conversions.c, 119 :: 		
; len start address is: 0 (R0)
0x0A02	0x2000    MOVS	R0, #0
; input end address is: 4 (R1)
; output end address is: 8 (R2)
; len end address is: 0 (R0)
0x0A04	0xB28D    UXTH	R5, R1
0x0A06	0x4611    MOV	R1, R2
L_WordToStr11:
; len start address is: 0 (R0)
; output start address is: 4 (R1)
; input start address is: 20 (R5)
0x0A08	0x2805    CMP	R0, #5
0x0A0A	0xD205    BCS	L_WordToStr12
;__Lib_Conversions.c, 120 :: 		
0x0A0C	0x180B    ADDS	R3, R1, R0
0x0A0E	0x2220    MOVS	R2, #32
0x0A10	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 119 :: 		
0x0A12	0x1C40    ADDS	R0, R0, #1
0x0A14	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 120 :: 		
0x0A16	0xE7F7    B	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c, 121 :: 		
0x0A18	0x180B    ADDS	R3, R1, R0
0x0A1A	0x2200    MOVS	R2, #0
0x0A1C	0x701A    STRB	R2, [R3, #0]
0x0A1E	0x1E40    SUBS	R0, R0, #1
0x0A20	0xB2C0    UXTB	R0, R0
; output end address is: 4 (R1)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 123 :: 		
L_WordToStr14:
;__Lib_Conversions.c, 124 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x0A22	0x180C    ADDS	R4, R1, R0
0x0A24	0x230A    MOVS	R3, #10
0x0A26	0xFBB5F2F3  UDIV	R2, R5, R3
0x0A2A	0xFB035212  MLS	R2, R3, R2, R5
0x0A2E	0xB292    UXTH	R2, R2
0x0A30	0x3230    ADDS	R2, #48
0x0A32	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 125 :: 		
0x0A34	0x220A    MOVS	R2, #10
0x0A36	0xFBB5F2F2  UDIV	R2, R5, R2
0x0A3A	0xB292    UXTH	R2, R2
0x0A3C	0xB295    UXTH	R5, R2
; input end address is: 20 (R5)
;__Lib_Conversions.c, 126 :: 		
0x0A3E	0xB902    CBNZ	R2, L_WordToStr16
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
;__Lib_Conversions.c, 127 :: 		
0x0A40	0xE002    B	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c, 128 :: 		
; len start address is: 0 (R0)
; input start address is: 20 (R5)
; output start address is: 4 (R1)
0x0A42	0x1E40    SUBS	R0, R0, #1
0x0A44	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 129 :: 		
; output end address is: 4 (R1)
; input end address is: 20 (R5)
; len end address is: 0 (R0)
0x0A46	0xE7EC    B	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c, 130 :: 		
L_end_WordToStr:
0x0A48	0xB001    ADD	SP, SP, #4
0x0A4A	0x4770    BX	LR
; end of _WordToStr
_LongToStr:
;__Lib_Conversions.c, 305 :: 		
; output start address is: 4 (R1)
; input start address is: 0 (R0)
0x0DE4	0xB081    SUB	SP, SP, #4
0x0DE6	0xF8CDE000  STR	LR, [SP, #0]
0x0DEA	0x460E    MOV	R6, R1
; output end address is: 4 (R1)
; input end address is: 0 (R0)
; input start address is: 0 (R0)
; output start address is: 24 (R6)
;__Lib_Conversions.c, 311 :: 		
; negative start address is: 4 (R1)
0x0DEC	0x2100    MOVS	R1, #0
;__Lib_Conversions.c, 312 :: 		
; inword start address is: 12 (R3)
0x0DEE	0x4603    MOV	R3, R0
;__Lib_Conversions.c, 313 :: 		
0x0DF0	0x2800    CMP	R0, #0
0x0DF2	0xDA04    BGE	L__LongToStr166
; inword end address is: 12 (R3)
;__Lib_Conversions.c, 314 :: 		
0x0DF4	0x2101    MOVS	R1, #1
;__Lib_Conversions.c, 315 :: 		
0x0DF6	0x4240    RSBS	R0, R0, #0
; input end address is: 0 (R0)
; inword start address is: 0 (R0)
0x0DF8	0x4600    MOV	R0, R0
; negative end address is: 4 (R1)
; inword end address is: 0 (R0)
0x0DFA	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 316 :: 		
0x0DFC	0xE001    B	L_LongToStr63
L__LongToStr166:
;__Lib_Conversions.c, 313 :: 		
0x0DFE	0x4618    MOV	R0, R3
0x0E00	0xB28F    UXTH	R7, R1
;__Lib_Conversions.c, 316 :: 		
L_LongToStr63:
;__Lib_Conversions.c, 317 :: 		
; inword start address is: 0 (R0)
; negative start address is: 28 (R7)
0x0E02	0x4631    MOV	R1, R6
; inword end address is: 0 (R0)
0x0E04	0xF000F850  BL	_LongWordToStr+0
;__Lib_Conversions.c, 319 :: 		
; i start address is: 4 (R1)
0x0E08	0x210B    MOVS	R1, #11
; output end address is: 24 (R6)
; negative end address is: 28 (R7)
; i end address is: 4 (R1)
0x0E0A	0x4634    MOV	R4, R6
0x0E0C	0xB2B8    UXTH	R0, R7
;__Lib_Conversions.c, 320 :: 		
L_LongToStr64:
; i start address is: 4 (R1)
; negative start address is: 0 (R0)
; output start address is: 16 (R4)
0x0E0E	0x2900    CMP	R1, #0
0x0E10	0xD908    BLS	L_LongToStr65
;__Lib_Conversions.c, 321 :: 		
0x0E12	0x1863    ADDS	R3, R4, R1
0x0E14	0x1E4A    SUBS	R2, R1, #1
0x0E16	0xB292    UXTH	R2, R2
0x0E18	0x18A2    ADDS	R2, R4, R2
0x0E1A	0x7812    LDRB	R2, [R2, #0]
0x0E1C	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 322 :: 		
0x0E1E	0x1E49    SUBS	R1, R1, #1
0x0E20	0xB289    UXTH	R1, R1
;__Lib_Conversions.c, 323 :: 		
; i end address is: 4 (R1)
0x0E22	0xE7F4    B	L_LongToStr64
L_LongToStr65:
;__Lib_Conversions.c, 324 :: 		
0x0E24	0x2220    MOVS	R2, #32
0x0E26	0x7022    STRB	R2, [R4, #0]
;__Lib_Conversions.c, 325 :: 		
0x0E28	0xB170    CBZ	R0, L_LongToStr66
; negative end address is: 0 (R0)
;__Lib_Conversions.c, 326 :: 		
; i start address is: 0 (R0)
0x0E2A	0x2000    MOVS	R0, #0
; output end address is: 16 (R4)
; i end address is: 0 (R0)
0x0E2C	0xB281    UXTH	R1, R0
0x0E2E	0x4620    MOV	R0, R4
;__Lib_Conversions.c, 327 :: 		
L_LongToStr67:
; i start address is: 4 (R1)
; output start address is: 0 (R0)
0x0E30	0x1842    ADDS	R2, R0, R1
0x0E32	0x7812    LDRB	R2, [R2, #0]
0x0E34	0x2A20    CMP	R2, #32
0x0E36	0xD102    BNE	L_LongToStr68
0x0E38	0x1C49    ADDS	R1, R1, #1
0x0E3A	0xB289    UXTH	R1, R1
0x0E3C	0xE7F8    B	L_LongToStr67
L_LongToStr68:
;__Lib_Conversions.c, 328 :: 		
0x0E3E	0x1E4A    SUBS	R2, R1, #1
0x0E40	0xB292    UXTH	R2, R2
; i end address is: 4 (R1)
;__Lib_Conversions.c, 329 :: 		
0x0E42	0x1883    ADDS	R3, R0, R2
; output end address is: 0 (R0)
0x0E44	0x222D    MOVS	R2, #45
0x0E46	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 330 :: 		
L_LongToStr66:
;__Lib_Conversions.c, 331 :: 		
L_end_LongToStr:
0x0E48	0xF8DDE000  LDR	LR, [SP, #0]
0x0E4C	0xB001    ADD	SP, SP, #4
0x0E4E	0x4770    BX	LR
; end of _LongToStr
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x1794	0xB082    SUB	SP, SP, #8
0x1796	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x179A	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x179C	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x179E	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x17A0	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17A2	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x17A4	0x2803    CMP	R0, #3
0x17A6	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x17AA	0x4893    LDR	R0, [PC, #588]
0x17AC	0x4281    CMP	R1, R0
0x17AE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x17B0	0x4892    LDR	R0, [PC, #584]
0x17B2	0x6800    LDR	R0, [R0, #0]
0x17B4	0xF0400105  ORR	R1, R0, #5
0x17B8	0x4890    LDR	R0, [PC, #576]
0x17BA	0x6001    STR	R1, [R0, #0]
0x17BC	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17BE	0x4890    LDR	R0, [PC, #576]
0x17C0	0x4281    CMP	R1, R0
0x17C2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x17C4	0x488D    LDR	R0, [PC, #564]
0x17C6	0x6800    LDR	R0, [R0, #0]
0x17C8	0xF0400104  ORR	R1, R0, #4
0x17CC	0x488B    LDR	R0, [PC, #556]
0x17CE	0x6001    STR	R1, [R0, #0]
0x17D0	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17D2	0x488C    LDR	R0, [PC, #560]
0x17D4	0x4281    CMP	R1, R0
0x17D6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x17D8	0x4888    LDR	R0, [PC, #544]
0x17DA	0x6800    LDR	R0, [R0, #0]
0x17DC	0xF0400103  ORR	R1, R0, #3
0x17E0	0x4886    LDR	R0, [PC, #536]
0x17E2	0x6001    STR	R1, [R0, #0]
0x17E4	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17E6	0xF64E2060  MOVW	R0, #60000
0x17EA	0x4281    CMP	R1, R0
0x17EC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x17EE	0x4883    LDR	R0, [PC, #524]
0x17F0	0x6800    LDR	R0, [R0, #0]
0x17F2	0xF0400102  ORR	R1, R0, #2
0x17F6	0x4881    LDR	R0, [PC, #516]
0x17F8	0x6001    STR	R1, [R0, #0]
0x17FA	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x17FC	0xF2475030  MOVW	R0, #30000
0x1800	0x4281    CMP	R1, R0
0x1802	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x1804	0x487D    LDR	R0, [PC, #500]
0x1806	0x6800    LDR	R0, [R0, #0]
0x1808	0xF0400101  ORR	R1, R0, #1
0x180C	0x487B    LDR	R0, [PC, #492]
0x180E	0x6001    STR	R1, [R0, #0]
0x1810	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x1812	0x487A    LDR	R0, [PC, #488]
0x1814	0x6801    LDR	R1, [R0, #0]
0x1816	0xF06F0007  MVN	R0, #7
0x181A	0x4001    ANDS	R1, R0
0x181C	0x4877    LDR	R0, [PC, #476]
0x181E	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x1820	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x1822	0x2802    CMP	R0, #2
0x1824	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x1828	0x4877    LDR	R0, [PC, #476]
0x182A	0x4281    CMP	R1, R0
0x182C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x182E	0x4873    LDR	R0, [PC, #460]
0x1830	0x6800    LDR	R0, [R0, #0]
0x1832	0xF0400106  ORR	R1, R0, #6
0x1836	0x4871    LDR	R0, [PC, #452]
0x1838	0x6001    STR	R1, [R0, #0]
0x183A	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x183C	0x4870    LDR	R0, [PC, #448]
0x183E	0x4281    CMP	R1, R0
0x1840	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x1842	0x486E    LDR	R0, [PC, #440]
0x1844	0x6800    LDR	R0, [R0, #0]
0x1846	0xF0400105  ORR	R1, R0, #5
0x184A	0x486C    LDR	R0, [PC, #432]
0x184C	0x6001    STR	R1, [R0, #0]
0x184E	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1850	0x486E    LDR	R0, [PC, #440]
0x1852	0x4281    CMP	R1, R0
0x1854	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x1856	0x4869    LDR	R0, [PC, #420]
0x1858	0x6800    LDR	R0, [R0, #0]
0x185A	0xF0400104  ORR	R1, R0, #4
0x185E	0x4867    LDR	R0, [PC, #412]
0x1860	0x6001    STR	R1, [R0, #0]
0x1862	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1864	0x486A    LDR	R0, [PC, #424]
0x1866	0x4281    CMP	R1, R0
0x1868	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x186A	0x4864    LDR	R0, [PC, #400]
0x186C	0x6800    LDR	R0, [R0, #0]
0x186E	0xF0400103  ORR	R1, R0, #3
0x1872	0x4862    LDR	R0, [PC, #392]
0x1874	0x6001    STR	R1, [R0, #0]
0x1876	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1878	0xF64B3080  MOVW	R0, #48000
0x187C	0x4281    CMP	R1, R0
0x187E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x1880	0x485E    LDR	R0, [PC, #376]
0x1882	0x6800    LDR	R0, [R0, #0]
0x1884	0xF0400102  ORR	R1, R0, #2
0x1888	0x485C    LDR	R0, [PC, #368]
0x188A	0x6001    STR	R1, [R0, #0]
0x188C	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x188E	0xF64550C0  MOVW	R0, #24000
0x1892	0x4281    CMP	R1, R0
0x1894	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x1896	0x4859    LDR	R0, [PC, #356]
0x1898	0x6800    LDR	R0, [R0, #0]
0x189A	0xF0400101  ORR	R1, R0, #1
0x189E	0x4857    LDR	R0, [PC, #348]
0x18A0	0x6001    STR	R1, [R0, #0]
0x18A2	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x18A4	0x4855    LDR	R0, [PC, #340]
0x18A6	0x6801    LDR	R1, [R0, #0]
0x18A8	0xF06F0007  MVN	R0, #7
0x18AC	0x4001    ANDS	R1, R0
0x18AE	0x4853    LDR	R0, [PC, #332]
0x18B0	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x18B2	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x18B4	0x2801    CMP	R0, #1
0x18B6	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x18BA	0x4851    LDR	R0, [PC, #324]
0x18BC	0x4281    CMP	R1, R0
0x18BE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x18C0	0x484E    LDR	R0, [PC, #312]
0x18C2	0x6800    LDR	R0, [R0, #0]
0x18C4	0xF0400107  ORR	R1, R0, #7
0x18C8	0x484C    LDR	R0, [PC, #304]
0x18CA	0x6001    STR	R1, [R0, #0]
0x18CC	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x18CE	0x4851    LDR	R0, [PC, #324]
0x18D0	0x4281    CMP	R1, R0
0x18D2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x18D4	0x4849    LDR	R0, [PC, #292]
0x18D6	0x6800    LDR	R0, [R0, #0]
0x18D8	0xF0400106  ORR	R1, R0, #6
0x18DC	0x4847    LDR	R0, [PC, #284]
0x18DE	0x6001    STR	R1, [R0, #0]
0x18E0	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x18E2	0x4848    LDR	R0, [PC, #288]
0x18E4	0x4281    CMP	R1, R0
0x18E6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x18E8	0x4844    LDR	R0, [PC, #272]
0x18EA	0x6800    LDR	R0, [R0, #0]
0x18EC	0xF0400105  ORR	R1, R0, #5
0x18F0	0x4842    LDR	R0, [PC, #264]
0x18F2	0x6001    STR	R1, [R0, #0]
0x18F4	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x18F6	0x4846    LDR	R0, [PC, #280]
0x18F8	0x4281    CMP	R1, R0
0x18FA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x18FC	0x483F    LDR	R0, [PC, #252]
0x18FE	0x6800    LDR	R0, [R0, #0]
0x1900	0xF0400104  ORR	R1, R0, #4
0x1904	0x483D    LDR	R0, [PC, #244]
0x1906	0x6001    STR	R1, [R0, #0]
0x1908	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x190A	0xF24D20F0  MOVW	R0, #54000
0x190E	0x4281    CMP	R1, R0
0x1910	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x1912	0x483A    LDR	R0, [PC, #232]
0x1914	0x6800    LDR	R0, [R0, #0]
0x1916	0xF0400103  ORR	R1, R0, #3
0x191A	0x4838    LDR	R0, [PC, #224]
0x191C	0x6001    STR	R1, [R0, #0]
0x191E	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1920	0xF64840A0  MOVW	R0, #36000
0x1924	0x4281    CMP	R1, R0
0x1926	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x1928	0x4834    LDR	R0, [PC, #208]
0x192A	0x6800    LDR	R0, [R0, #0]
0x192C	0xF0400102  ORR	R1, R0, #2
0x1930	0x4832    LDR	R0, [PC, #200]
0x1932	0x6001    STR	R1, [R0, #0]
0x1934	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1936	0xF2446050  MOVW	R0, #18000
0x193A	0x4281    CMP	R1, R0
0x193C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x193E	0x482F    LDR	R0, [PC, #188]
0x1940	0x6800    LDR	R0, [R0, #0]
0x1942	0xF0400101  ORR	R1, R0, #1
0x1946	0x482D    LDR	R0, [PC, #180]
0x1948	0x6001    STR	R1, [R0, #0]
0x194A	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x194C	0x482B    LDR	R0, [PC, #172]
0x194E	0x6801    LDR	R1, [R0, #0]
0x1950	0xF06F0007  MVN	R0, #7
0x1954	0x4001    ANDS	R1, R0
0x1956	0x4829    LDR	R0, [PC, #164]
0x1958	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x195A	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x195C	0x2800    CMP	R0, #0
0x195E	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x1962	0x482D    LDR	R0, [PC, #180]
0x1964	0x4281    CMP	R1, R0
0x1966	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x1968	0x4824    LDR	R0, [PC, #144]
0x196A	0x6800    LDR	R0, [R0, #0]
0x196C	0xF0400107  ORR	R1, R0, #7
0x1970	0x4822    LDR	R0, [PC, #136]
0x1972	0x6001    STR	R1, [R0, #0]
0x1974	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1976	0x4825    LDR	R0, [PC, #148]
0x1978	0x4281    CMP	R1, R0
0x197A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x197C	0x481F    LDR	R0, [PC, #124]
0x197E	0x6800    LDR	R0, [R0, #0]
0x1980	0xF0400106  ORR	R1, R0, #6
0x1984	0x481D    LDR	R0, [PC, #116]
0x1986	0x6001    STR	R1, [R0, #0]
0x1988	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x198A	0x4824    LDR	R0, [PC, #144]
0x198C	0x4281    CMP	R1, R0
0x198E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x1990	0x481A    LDR	R0, [PC, #104]
0x1992	0x6800    LDR	R0, [R0, #0]
0x1994	0xF0400105  ORR	R1, R0, #5
0x1998	0x4818    LDR	R0, [PC, #96]
0x199A	0x6001    STR	R1, [R0, #0]
0x199C	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x199E	0xF5B14F7A  CMP	R1, #64000
0x19A2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x19A4	0x4815    LDR	R0, [PC, #84]
0x19A6	0x6800    LDR	R0, [R0, #0]
0x19A8	0xF0400104  ORR	R1, R0, #4
0x19AC	0x4813    LDR	R0, [PC, #76]
0x19AE	0x6001    STR	R1, [R0, #0]
0x19B0	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19B2	0xF64B3080  MOVW	R0, #48000
0x19B6	0x4281    CMP	R1, R0
0x19B8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x19BA	0x4810    LDR	R0, [PC, #64]
0x19BC	0x6800    LDR	R0, [R0, #0]
0x19BE	0xF0400103  ORR	R1, R0, #3
0x19C2	0x480E    LDR	R0, [PC, #56]
0x19C4	0x6001    STR	R1, [R0, #0]
0x19C6	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19C8	0xF5B14FFA  CMP	R1, #32000
0x19CC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x19CE	0x480B    LDR	R0, [PC, #44]
0x19D0	0x6800    LDR	R0, [R0, #0]
0x19D2	0xF0400102  ORR	R1, R0, #2
0x19D6	0x4809    LDR	R0, [PC, #36]
0x19D8	0x6001    STR	R1, [R0, #0]
0x19DA	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x19DC	0xF5B15F7A  CMP	R1, #16000
0x19E0	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x19E2	0xE01D    B	#58
0x19E4	0x00800101  	#16842880
0x19E8	0x54190440  	#71324697
0x19EC	0x00023D60  	#1029701634
0x19F0	0x00030000  	#3
0x19F4	0x90400002  	#168000
0x19F8	0x49F00002  	#150000
0x19FC	0x3C004002  	FLASH_ACR+0
0x1A00	0xD4C00001  	#120000
0x1A04	0x5F900001  	#90000
0x1A08	0x32800002  	#144000
0x1A0C	0x77000001  	#96000
0x1A10	0x19400001  	#72000
0x1A14	0xA5E00001  	#108000
0x1A18	0xB5800001  	#112000
0x1A1C	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x1A20	0x482D    LDR	R0, [PC, #180]
0x1A22	0x6800    LDR	R0, [R0, #0]
0x1A24	0xF0400101  ORR	R1, R0, #1
0x1A28	0x482B    LDR	R0, [PC, #172]
0x1A2A	0x6001    STR	R1, [R0, #0]
0x1A2C	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x1A2E	0x482A    LDR	R0, [PC, #168]
0x1A30	0x6801    LDR	R1, [R0, #0]
0x1A32	0xF06F0007  MVN	R0, #7
0x1A36	0x4001    ANDS	R1, R0
0x1A38	0x4827    LDR	R0, [PC, #156]
0x1A3A	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x1A3C	0x2101    MOVS	R1, #1
0x1A3E	0xB249    SXTB	R1, R1
0x1A40	0x4826    LDR	R0, [PC, #152]
0x1A42	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x1A44	0x4826    LDR	R0, [PC, #152]
0x1A46	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x1A48	0xF7FFFAAE  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x1A4C	0x4825    LDR	R0, [PC, #148]
0x1A4E	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x1A50	0x4825    LDR	R0, [PC, #148]
0x1A52	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x1A54	0x4825    LDR	R0, [PC, #148]
0x1A56	0xEA020100  AND	R1, R2, R0, LSL #0
0x1A5A	0x4825    LDR	R0, [PC, #148]
0x1A5C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x1A5E	0xF0020001  AND	R0, R2, #1
0x1A62	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x1A64	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1A66	0x4822    LDR	R0, [PC, #136]
0x1A68	0x6800    LDR	R0, [R0, #0]
0x1A6A	0xF0000002  AND	R0, R0, #2
0x1A6E	0x2800    CMP	R0, #0
0x1A70	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x1A72	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1A74	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x1A76	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1A78	0xF4023080  AND	R0, R2, #65536
0x1A7C	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x1A7E	0x481C    LDR	R0, [PC, #112]
0x1A80	0x6800    LDR	R0, [R0, #0]
0x1A82	0xF4003000  AND	R0, R0, #131072
0x1A86	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x1A88	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x1A8A	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x1A8C	0x460A    MOV	R2, R1
0x1A8E	0x9901    LDR	R1, [SP, #4]
0x1A90	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x1A92	0x9101    STR	R1, [SP, #4]
0x1A94	0x4611    MOV	R1, R2
0x1A96	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1A98	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x1A9C	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x1A9E	0x4814    LDR	R0, [PC, #80]
0x1AA0	0x6800    LDR	R0, [R0, #0]
0x1AA2	0xF0407180  ORR	R1, R0, #16777216
0x1AA6	0x4812    LDR	R0, [PC, #72]
0x1AA8	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x1AAA	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x1AAC	0x4810    LDR	R0, [PC, #64]
0x1AAE	0x6800    LDR	R0, [R0, #0]
0x1AB0	0xF0007000  AND	R0, R0, #33554432
0x1AB4	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x1AB6	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x1AB8	0x460A    MOV	R2, R1
0x1ABA	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x1ABC	0x480A    LDR	R0, [PC, #40]
0x1ABE	0x6800    LDR	R0, [R0, #0]
0x1AC0	0xF000010C  AND	R1, R0, #12
0x1AC4	0x0090    LSLS	R0, R2, #2
0x1AC6	0xF000000C  AND	R0, R0, #12
0x1ACA	0x4281    CMP	R1, R0
0x1ACC	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1ACE	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x1AD0	0xF8DDE000  LDR	LR, [SP, #0]
0x1AD4	0xB002    ADD	SP, SP, #8
0x1AD6	0x4770    BX	LR
0x1AD8	0x3C004002  	FLASH_ACR+0
0x1ADC	0x80204247  	FLASH_ACR+0
0x1AE0	0x80244247  	FLASH_ACR+0
0x1AE4	0x38044002  	RCC_PLLCFGR+0
0x1AE8	0x38084002  	RCC_CFGR+0
0x1AEC	0xFFFF000F  	#1048575
0x1AF0	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x0FA8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x0FAA	0x480D    LDR	R0, [PC, #52]
0x0FAC	0x6800    LDR	R0, [R0, #0]
0x0FAE	0xF0400101  ORR	R1, R0, #1
0x0FB2	0x480B    LDR	R0, [PC, #44]
0x0FB4	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x0FB6	0x2100    MOVS	R1, #0
0x0FB8	0x480A    LDR	R0, [PC, #40]
0x0FBA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x0FBC	0x4808    LDR	R0, [PC, #32]
0x0FBE	0x6801    LDR	R1, [R0, #0]
0x0FC0	0x4809    LDR	R0, [PC, #36]
0x0FC2	0x4001    ANDS	R1, R0
0x0FC4	0x4806    LDR	R0, [PC, #24]
0x0FC6	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x0FC8	0x4908    LDR	R1, [PC, #32]
0x0FCA	0x4809    LDR	R0, [PC, #36]
0x0FCC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x0FCE	0x4804    LDR	R0, [PC, #16]
0x0FD0	0x6801    LDR	R1, [R0, #0]
0x0FD2	0xF46F2080  MVN	R0, #262144
0x0FD6	0x4001    ANDS	R1, R0
0x0FD8	0x4801    LDR	R0, [PC, #4]
0x0FDA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x0FDC	0xB001    ADD	SP, SP, #4
0x0FDE	0x4770    BX	LR
0x0FE0	0x38004002  	RCC_CR+0
0x0FE4	0x38084002  	RCC_CFGR+0
0x0FE8	0xFFFFFEF6  	#-17367041
0x0FEC	0x30102400  	#603992080
0x0FF0	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x1AF4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x1AF6	0x4904    LDR	R1, [PC, #16]
0x1AF8	0x4804    LDR	R0, [PC, #16]
0x1AFA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x1AFC	0x4904    LDR	R1, [PC, #16]
0x1AFE	0x4805    LDR	R0, [PC, #20]
0x1B00	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x1B02	0xB001    ADD	SP, SP, #4
0x1B04	0x4770    BX	LR
0x1B06	0xBF00    NOP
0x1B08	0x90400002  	#168000
0x1B0C	0x02282000  	___System_CLOCK_IN_KHZ+0
0x1B10	0x00030000  	#3
0x1B14	0x022C2000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x1694	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x1696	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x1698	0xB001    ADD	SP, SP, #4
0x169A	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x14D8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x14DA	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x14DE	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x14E2	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x14E4	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x14E8	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x14EA	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x14EC	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x14EE	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x14F0	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x14F2	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x14F6	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x14FA	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x14FE	0xB001    ADD	SP, SP, #4
0x1500	0x4770    BX	LR
; end of ___EnableFPU
0x1E2C	0xB500    PUSH	(R14)
0x1E2E	0xF8DFB034  LDR	R11, [PC, #52]
0x1E32	0xF8DFA034  LDR	R10, [PC, #52]
0x1E36	0xF8DFC034  LDR	R12, [PC, #52]
0x1E3A	0xF7FFF8AB  BL	3988
0x1E3E	0xF8DFB030  LDR	R11, [PC, #48]
0x1E42	0xF8DFA030  LDR	R10, [PC, #48]
0x1E46	0xF8DFC030  LDR	R12, [PC, #48]
0x1E4A	0xF7FFF8A3  BL	3988
0x1E4E	0xF8DFB02C  LDR	R11, [PC, #44]
0x1E52	0xF8DFA02C  LDR	R10, [PC, #44]
0x1E56	0xF8DFC02C  LDR	R12, [PC, #44]
0x1E5A	0xF7FFF89B  BL	3988
0x1E5E	0xBD00    POP	(R15)
0x1E60	0x4770    BX	LR
0x1E62	0xBF00    NOP
0x1E64	0x00002000  	#536870912
0x1E68	0x00E32000  	#536871139
0x1E6C	0x1B180000  	#6936
0x1E70	0x00E42000  	#536871140
0x1E74	0x00E62000  	#536871142
0x1E78	0x05860000  	#1414
0x1E7C	0x00E82000  	#536871144
0x1E80	0x00FC2000  	#536871164
0x1E84	0x1E180000  	#7704
0x1EE4	0xB500    PUSH	(R14)
0x1EE6	0xF8DFB010  LDR	R11, [PC, #16]
0x1EEA	0xF8DFA010  LDR	R10, [PC, #16]
0x1EEE	0xF7FFF907  BL	4352
0x1EF2	0xBD00    POP	(R15)
0x1EF4	0x4770    BX	LR
0x1EF6	0xBF00    NOP
0x1EF8	0x00002000  	#536870912
0x1EFC	0x02442000  	#536871492
_timer3_ISR:
;Input Capture Four Channel Demo.c, 176 :: 		void timer3_ISR() iv IVT_INT_TIM3 {
;Input Capture Four Channel Demo.c, 178 :: 		TIM3_SR.UIF = 0;                                                            // Clear timer 3 interrupt flag
0x1670	0x2100    MOVS	R1, #0
0x1672	0xB249    SXTB	R1, R1
0x1674	0x4804    LDR	R0, [PC, #16]
0x1676	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 179 :: 		poll_flag = 1;                                                              // Set poll flag for main loop
0x1678	0x2101    MOVS	R1, #1
0x167A	0x4804    LDR	R0, [PC, #16]
0x167C	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 180 :: 		terminal_print_count++;                                                     // Increment the debug print counter
0x167E	0x4904    LDR	R1, [PC, #16]
0x1680	0x8808    LDRH	R0, [R1, #0]
0x1682	0x1C40    ADDS	R0, R0, #1
0x1684	0x8008    STRH	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 181 :: 		}
L_end_timer3_ISR:
0x1686	0x4770    BX	LR
0x1688	0x82004200  	TIM3_SR+0
0x168C	0x02242000  	_poll_flag+0
0x1690	0x00E62000  	_terminal_print_count+0
; end of _timer3_ISR
_timer2_ISR:
;Input Capture Four Channel Demo.c, 124 :: 		void timer2_ISR() iv IVT_INT_TIM2 {
;Input Capture Four Channel Demo.c, 127 :: 		if(TIM2_SR.UIF == 1) {
0x1504	0x4937    LDR	R1, [PC, #220]
0x1506	0x6808    LDR	R0, [R1, #0]
0x1508	0xB138    CBZ	R0, L_timer2_ISR8
;Input Capture Four Channel Demo.c, 128 :: 		TIM2_SR.UIF = 0;                                                        // Clear timer 2 interrupt bit
0x150A	0x2100    MOVS	R1, #0
0x150C	0xB249    SXTB	R1, R1
0x150E	0x4835    LDR	R0, [PC, #212]
0x1510	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 129 :: 		overflow_count++;                                                       // Increment overflow counter
0x1512	0x4935    LDR	R1, [PC, #212]
0x1514	0x6808    LDR	R0, [R1, #0]
0x1516	0x1C40    ADDS	R0, R0, #1
0x1518	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 130 :: 		}
L_timer2_ISR8:
;Input Capture Four Channel Demo.c, 133 :: 		if (TIM2_SR.CC1IF == 1) {
0x151A	0x4934    LDR	R1, [PC, #208]
0x151C	0x6808    LDR	R0, [R1, #0]
0x151E	0xB1A8    CBZ	R0, L_timer2_ISR9
;Input Capture Four Channel Demo.c, 134 :: 		fngr_pointer.enc_start_time = fngr_pointer.enc_end_time;                // Store previous captured value for next calculation
0x1520	0x4A33    LDR	R2, [PC, #204]
0x1522	0x6811    LDR	R1, [R2, #0]
0x1524	0x4833    LDR	R0, [PC, #204]
0x1526	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 135 :: 		fngr_pointer.enc_end_time = TIM2_CCR1;                                  // Read stored input capture time
0x1528	0x4833    LDR	R0, [PC, #204]
0x152A	0x6800    LDR	R0, [R0, #0]
0x152C	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 136 :: 		fngr_pointer.enc_overflow_start = fngr_pointer.enc_overflow_end;        // Store previous overflow value for next calculation
0x152E	0x4A33    LDR	R2, [PC, #204]
0x1530	0x6811    LDR	R1, [R2, #0]
0x1532	0x4833    LDR	R0, [PC, #204]
0x1534	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 137 :: 		fngr_pointer.enc_overflow_end = overflow_count;                         // Store number of timer 2 overflows for this finger
0x1536	0x482C    LDR	R0, [PC, #176]
0x1538	0x6800    LDR	R0, [R0, #0]
0x153A	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 138 :: 		fngr_pointer.enc_chan_b = FNGR_POINTER_ENC_B;                           // Sample the second encoder channel state (For direction)
0x153C	0x4831    LDR	R0, [PC, #196]
0x153E	0x6801    LDR	R1, [R0, #0]
0x1540	0x4831    LDR	R0, [PC, #196]
0x1542	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 139 :: 		fngr_pointer.position_temp++;                                           // Increment total input capture event counter
0x1544	0x4931    LDR	R1, [PC, #196]
0x1546	0x6808    LDR	R0, [R1, #0]
0x1548	0x1C40    ADDS	R0, R0, #1
0x154A	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 140 :: 		}
L_timer2_ISR9:
;Input Capture Four Channel Demo.c, 144 :: 		if (TIM2_SR.CC2IF == 1) {
0x154C	0x4930    LDR	R1, [PC, #192]
0x154E	0x6808    LDR	R0, [R1, #0]
0x1550	0xB1A8    CBZ	R0, L_timer2_ISR10
;Input Capture Four Channel Demo.c, 145 :: 		fngr_middle.enc_start_time = fngr_middle.enc_end_time;                  // Store previous captured value for next calculation
0x1552	0x4A30    LDR	R2, [PC, #192]
0x1554	0x6811    LDR	R1, [R2, #0]
0x1556	0x4830    LDR	R0, [PC, #192]
0x1558	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 146 :: 		fngr_middle.enc_end_time = TIM2_CCR2;                                   // Read stored input capture time
0x155A	0x4830    LDR	R0, [PC, #192]
0x155C	0x6800    LDR	R0, [R0, #0]
0x155E	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 147 :: 		fngr_middle.enc_overflow_start = fngr_middle.enc_overflow_end;          // Store previous overflow value for next calculation
0x1560	0x4A2F    LDR	R2, [PC, #188]
0x1562	0x6811    LDR	R1, [R2, #0]
0x1564	0x482F    LDR	R0, [PC, #188]
0x1566	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 148 :: 		fngr_middle.enc_overflow_end = overflow_count;                          // Store number of timer 2 overflows for this finger
0x1568	0x481F    LDR	R0, [PC, #124]
0x156A	0x6800    LDR	R0, [R0, #0]
0x156C	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 149 :: 		fngr_pointer.enc_chan_b = FNGR_MIDDLE_ENC_B;                            // Sample the second encoder channel state (For direction)
0x156E	0x482E    LDR	R0, [PC, #184]
0x1570	0x6801    LDR	R1, [R0, #0]
0x1572	0x4825    LDR	R0, [PC, #148]
0x1574	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 150 :: 		fngr_middle.position_actual++;                                          // Increment total input capture event counter
0x1576	0x492D    LDR	R1, [PC, #180]
0x1578	0x6808    LDR	R0, [R1, #0]
0x157A	0x1C40    ADDS	R0, R0, #1
0x157C	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 151 :: 		}
L_timer2_ISR10:
;Input Capture Four Channel Demo.c, 154 :: 		if (TIM2_SR.CC3IF == 1) {
0x157E	0x492C    LDR	R1, [PC, #176]
0x1580	0x6808    LDR	R0, [R1, #0]
0x1582	0xB1A8    CBZ	R0, L_timer2_ISR11
;Input Capture Four Channel Demo.c, 155 :: 		fngr_ring.enc_start_time = fngr_ring.enc_end_time;                      // Store previous captured value for next calculation
0x1584	0x4A2B    LDR	R2, [PC, #172]
0x1586	0x6811    LDR	R1, [R2, #0]
0x1588	0x482B    LDR	R0, [PC, #172]
0x158A	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 156 :: 		fngr_ring.enc_end_time = TIM2_CCR3;                                     // Read stored input capture time
0x158C	0x482B    LDR	R0, [PC, #172]
0x158E	0x6800    LDR	R0, [R0, #0]
0x1590	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 157 :: 		fngr_ring.enc_overflow_start = fngr_ring.enc_overflow_end;              // Store previous overflow value for next calculation
0x1592	0x4A2B    LDR	R2, [PC, #172]
0x1594	0x6811    LDR	R1, [R2, #0]
0x1596	0x482B    LDR	R0, [PC, #172]
0x1598	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 158 :: 		fngr_ring.enc_overflow_end = overflow_count;                            // Store number of timer 2 overflows for this finger
0x159A	0x4813    LDR	R0, [PC, #76]
0x159C	0x6800    LDR	R0, [R0, #0]
0x159E	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 159 :: 		fngr_pointer.enc_chan_b = FNGR_RING_ENC_B;                              // Sample the second encoder channel state (For direction)
0x15A0	0x4829    LDR	R0, [PC, #164]
0x15A2	0x6801    LDR	R1, [R0, #0]
0x15A4	0x4818    LDR	R0, [PC, #96]
0x15A6	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 160 :: 		fngr_ring.position_actual++;                                            // Increment total input capture event counter
0x15A8	0x4928    LDR	R1, [PC, #160]
0x15AA	0x6808    LDR	R0, [R1, #0]
0x15AC	0x1C40    ADDS	R0, R0, #1
0x15AE	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 161 :: 		}
L_timer2_ISR11:
;Input Capture Four Channel Demo.c, 164 :: 		if (TIM2_SR.CC4IF == 1) {
0x15B0	0x4927    LDR	R1, [PC, #156]
0x15B2	0x6808    LDR	R0, [R1, #0]
0x15B4	0xB1A8    CBZ	R0, L_timer2_ISR12
;Input Capture Four Channel Demo.c, 165 :: 		fngr_pinky.enc_start_time = fngr_pinky.enc_end_time;                    // Store previous captured value for next calculation
0x15B6	0x4A27    LDR	R2, [PC, #156]
0x15B8	0x6811    LDR	R1, [R2, #0]
0x15BA	0x4827    LDR	R0, [PC, #156]
0x15BC	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 166 :: 		fngr_pinky.enc_end_time = TIM2_CCR4;                                    // Read stored input capture time
0x15BE	0x4827    LDR	R0, [PC, #156]
0x15C0	0x6800    LDR	R0, [R0, #0]
0x15C2	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 167 :: 		fngr_pinky.enc_overflow_start = fngr_pinky.enc_overflow_end;            // Store previous overflow value for next calculation
0x15C4	0x4A26    LDR	R2, [PC, #152]
0x15C6	0x6811    LDR	R1, [R2, #0]
0x15C8	0x4826    LDR	R0, [PC, #152]
0x15CA	0x6001    STR	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 168 :: 		fngr_pinky.enc_overflow_end = overflow_count;                           // Store number of timer 2 overflows for this finger
0x15CC	0x4806    LDR	R0, [PC, #24]
0x15CE	0x6800    LDR	R0, [R0, #0]
0x15D0	0x6010    STR	R0, [R2, #0]
;Input Capture Four Channel Demo.c, 169 :: 		fngr_pointer.enc_chan_b = FNGR_PINKY_ENC_B;                             // Sample the second encoder channel state (For direction)
0x15D2	0x4825    LDR	R0, [PC, #148]
0x15D4	0x6801    LDR	R1, [R0, #0]
0x15D6	0x480C    LDR	R0, [PC, #48]
0x15D8	0x8001    STRH	R1, [R0, #0]
;Input Capture Four Channel Demo.c, 170 :: 		fngr_pinky.position_actual++;                                           // Increment total input capture event counter
0x15DA	0x4924    LDR	R1, [PC, #144]
0x15DC	0x6808    LDR	R0, [R1, #0]
0x15DE	0x1C40    ADDS	R0, R0, #1
0x15E0	0x6008    STR	R0, [R1, #0]
;Input Capture Four Channel Demo.c, 171 :: 		}
L_timer2_ISR12:
;Input Capture Four Channel Demo.c, 172 :: 		}
L_end_timer2_ISR:
0x15E2	0x4770    BX	LR
0x15E4	0x02004200  	TIM2_SR+0
0x15E8	0x02402000  	_overflow_count+0
0x15EC	0x02044200  	TIM2_SR+0
0x15F0	0x01242000  	_fngr_pointer+32
0x15F4	0x01202000  	_fngr_pointer+28
0x15F8	0x00344000  	TIM2_CCR1+0
0x15FC	0x01302000  	_fngr_pointer+44
0x1600	0x012C2000  	_fngr_pointer+40
0x1604	0x02104240  	GPIOA_IDR+0
0x1608	0x011E2000  	_fngr_pointer+26
0x160C	0x01142000  	_fngr_pointer+16
0x1610	0x02084200  	TIM2_SR+0
0x1614	0x016C2000  	_fngr_middle+32
0x1618	0x01682000  	_fngr_middle+28
0x161C	0x00384000  	TIM2_CCR2+0
0x1620	0x01782000  	_fngr_middle+44
0x1624	0x01742000  	_fngr_middle+40
0x1628	0x02144240  	GPIOA_IDR+0
0x162C	0x01602000  	_fngr_middle+20
0x1630	0x020C4200  	TIM2_SR+0
0x1634	0x01B42000  	_fngr_ring+32
0x1638	0x01B02000  	_fngr_ring+28
0x163C	0x003C4000  	TIM2_CCR3+0
0x1640	0x01C02000  	_fngr_ring+44
0x1644	0x01BC2000  	_fngr_ring+40
0x1648	0x02184240  	GPIOA_IDR+0
0x164C	0x01A82000  	_fngr_ring+20
0x1650	0x02104200  	TIM2_SR+0
0x1654	0x01FC2000  	_fngr_pinky+32
0x1658	0x01F82000  	_fngr_pinky+28
0x165C	0x00404000  	TIM2_CCR4+0
0x1660	0x02082000  	_fngr_pinky+44
0x1664	0x02042000  	_fngr_pinky+40
0x1668	0x021C4240  	GPIOA_IDR+0
0x166C	0x01F02000  	_fngr_pinky+20
; end of _timer2_ISR
;Input Capture Four Channel Demo.c,0 :: ?ICS_ENCODER_TIM_PSC [2]
0x0586	0x0064 ;?ICS_ENCODER_TIM_PSC+0
; end of ?ICS_ENCODER_TIM_PSC
;Input Capture Four Channel Demo.c,0 :: ?ICS_ENCODER_TIM_RELOAD [4]
0x1B18	0x0000FFFF ;?ICS_ENCODER_TIM_RELOAD+0
; end of ?ICS_ENCODER_TIM_RELOAD
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo [16]
0x1B1C	0x69460D0A ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+0
0x1B20	0x7265676E ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+4
0x1B24	0x6D614E20 ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+8
0x1B28	0x00203A65 ;?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo+12
; end of ?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo
;,0 :: _initBlock_3 [42]
; Containing: ?ICS?lstr9_Input_32Capture_32Four_32Channel_32Demo [3]
;             ?ICS?lstr10_Input_32Capture_32Four_32Channel_32Demo [36]
;             ?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo [3]
0x1B2C	0x46000D0A ;_initBlock_3+0 : ?ICS?lstr9_Input_32Capture_32Four_32Channel_32Demo at 0x1B2C : ?ICS?lstr10_Input_32Capture_32Four_32Channel_32Demo at 0x1B2F
0x1B30	0x75716572 ;_initBlock_3+4
0x1B34	0x79636E65 ;_initBlock_3+8
0x1B38	0x20666F20 ;_initBlock_3+12
0x1B3C	0x6F636E69 ;_initBlock_3+16
0x1B40	0x676E696D ;_initBlock_3+20
0x1B44	0x67697320 ;_initBlock_3+24
0x1B48	0x206C616E ;_initBlock_3+28
0x1B4C	0x297A4828 ;_initBlock_3+32
0x1B50	0x0A00203A ;_initBlock_3+36 : ?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo at 0x1B53
0x1B54	0x000D ;_initBlock_3+40
; end of _initBlock_3
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo [36]
0x1B56	0x65726944 ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+0
0x1B5A	0x6F697463 ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+4
0x1B5E	0x666F206E ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+8
0x1B62	0x766F6D20 ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+12
0x1B66	0x6E656D65 ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+16
0x1B6A	0x20203A74 ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+20
0x1B6E	0x20202020 ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+24
0x1B72	0x20202020 ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+28
0x1B76	0x00202020 ;?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo+32
; end of ?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo
;,0 :: _initBlock_5 [44]
; Containing: ?ICS?lstr13_Input_32Capture_32Four_32Channel_32Demo [3]
;             ?ICS?lstr14_Input_32Capture_32Four_32Channel_32Demo [36]
;             ?ICS?lstr15_Input_32Capture_32Four_32Channel_32Demo [5]
0x1B7A	0x50000D0A ;_initBlock_5+0 : ?ICS?lstr13_Input_32Capture_32Four_32Channel_32Demo at 0x1B7A : ?ICS?lstr14_Input_32Capture_32Four_32Channel_32Demo at 0x1B7D
0x1B7E	0x7469736F ;_initBlock_5+4
0x1B82	0x206E6F69 ;_initBlock_5+8
0x1B86	0x6620666F ;_initBlock_5+12
0x1B8A	0x65676E69 ;_initBlock_5+16
0x1B8E	0x20203A72 ;_initBlock_5+20
0x1B92	0x20202020 ;_initBlock_5+24
0x1B96	0x20202020 ;_initBlock_5+28
0x1B9A	0x20202020 ;_initBlock_5+32
0x1B9E	0x0A002020 ;_initBlock_5+36 : ?ICS?lstr15_Input_32Capture_32Four_32Channel_32Demo at 0x1BA1
0x1BA2	0x000D0A0A ;_initBlock_5+40
; end of _initBlock_5
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo [22]
0x1BA6	0x5241550D ;?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo+0
0x1BAA	0x6E492054 ;?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo+4
0x1BAE	0x43207469 ;?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo+8
0x1BB2	0x6C706D6F ;?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo+12
0x1BB6	0x0D657465 ;?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo+16
0x1BBA	0x000A ;?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo+20
; end of ?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo [8]
0x1BBC	0x6E696F50 ;?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo+0
0x1BC0	0x00726574 ;?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo+4
; end of ?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo
;,0 :: _initBlock_8 [12]
; Containing: ?ICS?lstr2_Input_32Capture_32Four_32Channel_32Demo [7]
;             ?ICS?lstr3_Input_32Capture_32Four_32Channel_32Demo [5]
0x1BC4	0x6464694D ;_initBlock_8+0 : ?ICS?lstr2_Input_32Capture_32Four_32Channel_32Demo at 0x1BC4
0x1BC8	0x5200656C ;_initBlock_8+4 : ?ICS?lstr3_Input_32Capture_32Four_32Channel_32Demo at 0x1BCB
0x1BCC	0x00676E69 ;_initBlock_8+8
; end of _initBlock_8
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo [6]
0x1BD0	0x6B6E6950 ;?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo+0
0x1BD4	0x0079 ;?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo+4
; end of ?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo [26]
0x1BD6	0x500D0A0A ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+0
0x1BDA	0x72676F72 ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+4
0x1BDE	0x48206D61 ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+8
0x1BE2	0x53207361 ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+12
0x1BE6	0x74726174 ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+16
0x1BEA	0x0A216465 ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+20
0x1BEE	0x000D ;?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo+24
; end of ?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo
;Input Capture Four Channel Demo.c,0 :: ?ICS_TERMINAL_PRINT_THRESH [2]
0x1BF0	0x0028 ;?ICS_TERMINAL_PRINT_THRESH+0
; end of ?ICS_TERMINAL_PRINT_THRESH
;Input Capture Four Channel Demo.c,0 :: ?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo [9]
0x1BF2	0x0A0A0A0A ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+0
0x1BF6	0x0D0A0A0A ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+4
0x1BFA	0x00 ;?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo+8
; end of ?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo
;__Lib_GPIO_32F4xx_Defs.c,476 :: __GPIO_MODULE_TIM2_CH4_PA3 [108]
0x1BFC	0x00000103 ;__GPIO_MODULE_TIM2_CH4_PA3+0
0x1C00	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH4_PA3+4
0x1C04	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+8
0x1C08	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+12
0x1C0C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+16
0x1C10	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+20
0x1C14	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+24
0x1C18	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+28
0x1C1C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+32
0x1C20	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+36
0x1C24	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+40
0x1C28	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+44
0x1C2C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+48
0x1C30	0x00001018 ;__GPIO_MODULE_TIM2_CH4_PA3+52
0x1C34	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH4_PA3+56
0x1C38	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+60
0x1C3C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+64
0x1C40	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+68
0x1C44	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+72
0x1C48	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+76
0x1C4C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+80
0x1C50	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+84
0x1C54	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+88
0x1C58	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+92
0x1C5C	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+96
0x1C60	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+100
0x1C64	0x00000000 ;__GPIO_MODULE_TIM2_CH4_PA3+104
; end of __GPIO_MODULE_TIM2_CH4_PA3
;__Lib_GPIO_32F4xx_Defs.c,789 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x1C68	0x00000709 ;__GPIO_MODULE_USART1_PA9_10+0
0x1C6C	0x0000070A ;__GPIO_MODULE_USART1_PA9_10+4
0x1C70	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x1C74	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x1C78	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x1C7C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x1C80	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x1C84	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x1C88	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x1C8C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x1C90	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x1C94	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x1C98	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x1C9C	0x00001018 ;__GPIO_MODULE_USART1_PA9_10+52
0x1CA0	0x00001018 ;__GPIO_MODULE_USART1_PA9_10+56
0x1CA4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x1CA8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x1CAC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x1CB0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x1CB4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x1CB8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x1CBC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x1CC0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x1CC4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x1CC8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x1CCC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x1CD0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F4xx_Defs.c,464 :: __GPIO_MODULE_TIM2_CH1_PA0 [108]
0x1CD4	0x00000100 ;__GPIO_MODULE_TIM2_CH1_PA0+0
0x1CD8	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH1_PA0+4
0x1CDC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+8
0x1CE0	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+12
0x1CE4	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+16
0x1CE8	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+20
0x1CEC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+24
0x1CF0	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+28
0x1CF4	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+32
0x1CF8	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+36
0x1CFC	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+40
0x1D00	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+44
0x1D04	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+48
0x1D08	0x00001018 ;__GPIO_MODULE_TIM2_CH1_PA0+52
0x1D0C	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH1_PA0+56
0x1D10	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+60
0x1D14	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+64
0x1D18	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+68
0x1D1C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+72
0x1D20	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+76
0x1D24	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+80
0x1D28	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+84
0x1D2C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+88
0x1D30	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+92
0x1D34	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+96
0x1D38	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+100
0x1D3C	0x00000000 ;__GPIO_MODULE_TIM2_CH1_PA0+104
; end of __GPIO_MODULE_TIM2_CH1_PA0
;__Lib_GPIO_32F4xx_Defs.c,468 :: __GPIO_MODULE_TIM2_CH2_PA1 [108]
0x1D40	0x00000101 ;__GPIO_MODULE_TIM2_CH2_PA1+0
0x1D44	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH2_PA1+4
0x1D48	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+8
0x1D4C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+12
0x1D50	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+16
0x1D54	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+20
0x1D58	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+24
0x1D5C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+28
0x1D60	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+32
0x1D64	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+36
0x1D68	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+40
0x1D6C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+44
0x1D70	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+48
0x1D74	0x00001018 ;__GPIO_MODULE_TIM2_CH2_PA1+52
0x1D78	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH2_PA1+56
0x1D7C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+60
0x1D80	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+64
0x1D84	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+68
0x1D88	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+72
0x1D8C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+76
0x1D90	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+80
0x1D94	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+84
0x1D98	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+88
0x1D9C	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+92
0x1DA0	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+96
0x1DA4	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+100
0x1DA8	0x00000000 ;__GPIO_MODULE_TIM2_CH2_PA1+104
; end of __GPIO_MODULE_TIM2_CH2_PA1
;__Lib_GPIO_32F4xx_Defs.c,472 :: __GPIO_MODULE_TIM2_CH3_PA2 [108]
0x1DAC	0x00000102 ;__GPIO_MODULE_TIM2_CH3_PA2+0
0x1DB0	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH3_PA2+4
0x1DB4	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+8
0x1DB8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+12
0x1DBC	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+16
0x1DC0	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+20
0x1DC4	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+24
0x1DC8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+28
0x1DCC	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+32
0x1DD0	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+36
0x1DD4	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+40
0x1DD8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+44
0x1DDC	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+48
0x1DE0	0x00001018 ;__GPIO_MODULE_TIM2_CH3_PA2+52
0x1DE4	0xFFFFFFFF ;__GPIO_MODULE_TIM2_CH3_PA2+56
0x1DE8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+60
0x1DEC	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+64
0x1DF0	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+68
0x1DF4	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+72
0x1DF8	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+76
0x1DFC	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+80
0x1E00	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+84
0x1E04	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+88
0x1E08	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+92
0x1E0C	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+96
0x1E10	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+100
0x1E14	0x00000000 ;__GPIO_MODULE_TIM2_CH3_PA2+104
; end of __GPIO_MODULE_TIM2_CH3_PA2
;Input Capture Four Channel Demo.c,0 :: ?ICS_MCU_FREQUENCY [4]
0x1E18	0x0A037A00 ;?ICS_MCU_FREQUENCY+0
; end of ?ICS_MCU_FREQUENCY
;__Lib_System_4XX.c,0 :: ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
0x1E1C	0x00000000 ;?ICS__Lib_System_4XX_APBAHBPrescTable+0
0x1E20	0x04030201 ;?ICS__Lib_System_4XX_APBAHBPrescTable+4
0x1E24	0x04030201 ;?ICS__Lib_System_4XX_APBAHBPrescTable+8
0x1E28	0x09080706 ;?ICS__Lib_System_4XX_APBAHBPrescTable+12
; end of ?ICS__Lib_System_4XX_APBAHBPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188     [168]    _GPIO_Clk_Enable
0x0230     [560]    _GPIO_Config
0x0460      [12]    _Get_Fosc_kHz
0x046C     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x0568      [30]    __Lib_UART_123_45_6_UARTx_Write
0x0588      [28]    _UART1_Write
0x05A4      [28]    _UART5_Write
0x05C0      [28]    _UART3_Write
0x05DC      [28]    _UART4_Write
0x05F8     [132]    _RCC_GetClocksFrequency
0x067C      [28]    _UART2_Write
0x0698      [70]    _GPIO_Alternate_Function_Enable
0x06E0      [28]    _UART6_Write
0x06FC      [24]    _UART_Write
0x0714     [660]    __Lib_UART_123_45_6_UARTx_Init_Advanced
0x09A8      [82]    __LongDoubleToSignedIntegral
0x09FC      [80]    _WordToStr
0x0A4C      [38]    __UnsignedIntegralToLongDouble
0x0A74     [120]    _NVIC_IntEnable
0x0AEC     [330]    __Div_DP
0x0C38      [50]    __Lib_UART_123_45_6_UARTx_Write_Text
0x0C6C     [262]    __Mul_DP
0x0D74     [110]    _IntToStr
0x0DE4     [108]    _LongToStr
0x0E50      [88]    __LongDoubleToUnsignedIntegral
0x0EA8      [76]    _LongWordToStr
0x0EF4      [24]    _GPIO_Digital_Input
0x0F0C      [28]    _GPIO_Digital_Output
0x0F28      [54]    _UART_Write_Text
0x0F60      [52]    _UART1_Init
0x0F94      [20]    ___CC2DW
0x0FA8      [76]    __Lib_System_4XX_SystemClockSetDefault
0x0FF4     [212]    _print_finger_info
0x10C8      [56]    _init_UART
0x1100      [58]    ___FillZeros
0x113C      [40]    _strcpy
0x1164      [88]    _init_timer3
0x11BC      [28]    _UART1_Write_Text
0x11D8      [40]    _init_GPIO
0x1200     [280]    _calc_finger_state
0x1318     [448]    _init_input_capture
0x14D8      [42]    ___EnableFPU
0x1504     [364]    _timer2_ISR
0x1670      [36]    _timer3_ISR
0x1694       [8]    ___GenExcept
0x16A0     [244]    _main
0x1794     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
0x1AF4      [36]    __Lib_System_4XX_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_FloatToStr_fnum
0x0000       [8]    FARG_LongDoubleToStr_dnum
0x20000000       [4]    _ENCODER_TIM_RELOAD
0x20000004      [16]    ?lstr8_Input_32Capture_32Four_32Channel_32Demo
0x20000014       [3]    ?lstr9_Input_32Capture_32Four_32Channel_32Demo
0x20000017      [36]    ?lstr10_Input_32Capture_32Four_32Channel_32Demo
0x2000003B       [3]    ?lstr11_Input_32Capture_32Four_32Channel_32Demo
0x2000003E      [36]    ?lstr12_Input_32Capture_32Four_32Channel_32Demo
0x20000062       [3]    ?lstr13_Input_32Capture_32Four_32Channel_32Demo
0x20000065      [36]    ?lstr14_Input_32Capture_32Four_32Channel_32Demo
0x20000089       [5]    ?lstr15_Input_32Capture_32Four_32Channel_32Demo
0x2000008E      [22]    ?lstr7_Input_32Capture_32Four_32Channel_32Demo
0x200000A4       [8]    ?lstr1_Input_32Capture_32Four_32Channel_32Demo
0x200000AC       [7]    ?lstr2_Input_32Capture_32Four_32Channel_32Demo
0x200000B3       [5]    ?lstr3_Input_32Capture_32Four_32Channel_32Demo
0x200000B8       [6]    ?lstr4_Input_32Capture_32Four_32Channel_32Demo
0x200000BE      [26]    ?lstr5_Input_32Capture_32Four_32Channel_32Demo
0x200000D8       [2]    _TERMINAL_PRINT_THRESH
0x200000DA       [9]    ?lstr6_Input_32Capture_32Four_32Channel_32Demo
0x200000E4       [2]    _ENCODER_TIM_PSC
0x200000E6       [2]    _terminal_print_count
0x200000E8       [4]    _MCU_FREQUENCY
0x200000EC      [16]    __Lib_System_4XX_APBAHBPrescTable
0x200000FC       [8]    _timer2_period_ms
0x20000104      [72]    _fngr_pointer
0x2000014C      [72]    _fngr_middle
0x20000194      [72]    _fngr_ring
0x200001DC      [72]    _fngr_pinky
0x20000224       [2]    _poll_flag
0x20000228       [4]    ___System_CLOCK_IN_KHZ
0x2000022C       [4]    __VOLTAGE_RANGE
0x20000230       [4]    _UART_Wr_Ptr
0x20000234       [4]    _UART_Rd_Ptr
0x20000238       [4]    _UART_Rdy_Ptr
0x2000023C       [4]    _UART_Tx_Idle_Ptr
0x20000240       [4]    _overflow_count
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0586       [2]    ?ICS_ENCODER_TIM_PSC
0x1B18       [4]    ?ICS_ENCODER_TIM_RELOAD
0x1B1C      [16]    ?ICS?lstr8_Input_32Capture_32Four_32Channel_32Demo
0x1B2C       [3]    ?ICS?lstr9_Input_32Capture_32Four_32Channel_32Demo
0x1B2F      [36]    ?ICS?lstr10_Input_32Capture_32Four_32Channel_32Demo
0x1B53       [3]    ?ICS?lstr11_Input_32Capture_32Four_32Channel_32Demo
0x1B56      [36]    ?ICS?lstr12_Input_32Capture_32Four_32Channel_32Demo
0x1B7A       [3]    ?ICS?lstr13_Input_32Capture_32Four_32Channel_32Demo
0x1B7D      [36]    ?ICS?lstr14_Input_32Capture_32Four_32Channel_32Demo
0x1BA1       [5]    ?ICS?lstr15_Input_32Capture_32Four_32Channel_32Demo
0x1BA6      [22]    ?ICS?lstr7_Input_32Capture_32Four_32Channel_32Demo
0x1BBC       [8]    ?ICS?lstr1_Input_32Capture_32Four_32Channel_32Demo
0x1BC4       [7]    ?ICS?lstr2_Input_32Capture_32Four_32Channel_32Demo
0x1BCB       [5]    ?ICS?lstr3_Input_32Capture_32Four_32Channel_32Demo
0x1BD0       [6]    ?ICS?lstr4_Input_32Capture_32Four_32Channel_32Demo
0x1BD6      [26]    ?ICS?lstr5_Input_32Capture_32Four_32Channel_32Demo
0x1BF0       [2]    ?ICS_TERMINAL_PRINT_THRESH
0x1BF2       [9]    ?ICS?lstr6_Input_32Capture_32Four_32Channel_32Demo
0x1BFC     [108]    __GPIO_MODULE_TIM2_CH4_PA3
0x1C68     [108]    __GPIO_MODULE_USART1_PA9_10
0x1CD4     [108]    __GPIO_MODULE_TIM2_CH1_PA0
0x1D40     [108]    __GPIO_MODULE_TIM2_CH2_PA1
0x1DAC     [108]    __GPIO_MODULE_TIM2_CH3_PA2
0x1E18       [4]    ?ICS_MCU_FREQUENCY
0x1E1C      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
